{
  "version": 3,
  "sources": ["../../d3-axis/src/identity.js", "../../d3-axis/src/axis.js", "../../d3-dispatch/src/dispatch.js", "../../d3-drag/src/noevent.js", "../../d3-drag/src/nodrag.js", "../../d3-drag/src/constant.js", "../../d3-drag/src/event.js", "../../d3-drag/src/drag.js", "../../d3-timer/src/timer.js", "../../d3-timer/src/timeout.js", "../../d3-timer/src/interval.js", "../../d3-transition/src/transition/schedule.js", "../../d3-transition/src/interrupt.js", "../../d3-transition/src/selection/interrupt.js", "../../d3-transition/src/transition/tween.js", "../../d3-transition/src/transition/interpolate.js", "../../d3-transition/src/transition/attr.js", "../../d3-transition/src/transition/attrTween.js", "../../d3-transition/src/transition/delay.js", "../../d3-transition/src/transition/duration.js", "../../d3-transition/src/transition/ease.js", "../../d3-transition/src/transition/easeVarying.js", "../../d3-transition/src/transition/filter.js", "../../d3-transition/src/transition/merge.js", "../../d3-transition/src/transition/on.js", "../../d3-transition/src/transition/remove.js", "../../d3-transition/src/transition/select.js", "../../d3-transition/src/transition/selectAll.js", "../../d3-transition/src/transition/selection.js", "../../d3-transition/src/transition/style.js", "../../d3-transition/src/transition/styleTween.js", "../../d3-transition/src/transition/text.js", "../../d3-transition/src/transition/textTween.js", "../../d3-transition/src/transition/transition.js", "../../d3-transition/src/transition/end.js", "../../d3-transition/src/transition/index.js", "../../d3-ease/src/linear.js", "../../d3-ease/src/quad.js", "../../d3-ease/src/cubic.js", "../../d3-ease/src/poly.js", "../../d3-ease/src/sin.js", "../../d3-ease/src/math.js", "../../d3-ease/src/exp.js", "../../d3-ease/src/circle.js", "../../d3-ease/src/bounce.js", "../../d3-ease/src/back.js", "../../d3-ease/src/elastic.js", "../../d3-transition/src/selection/transition.js", "../../d3-transition/src/selection/index.js", "../../d3-transition/src/active.js", "../../d3-brush/src/constant.js", "../../d3-brush/src/event.js", "../../d3-brush/src/noevent.js", "../../d3-brush/src/brush.js", "../../d3-chord/src/math.js", "../../d3-chord/src/chord.js", "../../d3-path/src/path.js", "../../d3-chord/src/array.js", "../../d3-chord/src/constant.js", "../../d3-chord/src/ribbon.js", "../../d3-contour/src/array.js", "../../d3-contour/src/ascending.js", "../../d3-contour/src/area.js", "../../d3-contour/src/constant.js", "../../d3-contour/src/contains.js", "../../d3-contour/src/noop.js", "../../d3-contour/src/contours.js", "../../d3-contour/src/density.js", "../../robust-predicates/esm/util.js", "../../robust-predicates/esm/orient2d.js", "../../robust-predicates/esm/orient3d.js", "../../robust-predicates/esm/incircle.js", "../../robust-predicates/esm/insphere.js", "../../delaunator/index.js", "../../d3-delaunay/src/path.js", "../../d3-delaunay/src/polygon.js", "../../d3-delaunay/src/voronoi.js", "../../d3-delaunay/src/delaunay.js", "../../d3-dsv/src/dsv.js", "../../d3-dsv/src/csv.js", "../../d3-dsv/src/tsv.js", "../../d3-dsv/src/autoType.js", "../../d3-fetch/src/blob.js", "../../d3-fetch/src/buffer.js", "../../d3-fetch/src/text.js", "../../d3-fetch/src/dsv.js", "../../d3-fetch/src/image.js", "../../d3-fetch/src/json.js", "../../d3-fetch/src/xml.js", "../../d3-force/src/center.js", "../../d3-quadtree/src/add.js", "../../d3-quadtree/src/cover.js", "../../d3-quadtree/src/data.js", "../../d3-quadtree/src/extent.js", "../../d3-quadtree/src/quad.js", "../../d3-quadtree/src/find.js", "../../d3-quadtree/src/remove.js", "../../d3-quadtree/src/root.js", "../../d3-quadtree/src/size.js", "../../d3-quadtree/src/visit.js", "../../d3-quadtree/src/visitAfter.js", "../../d3-quadtree/src/x.js", "../../d3-quadtree/src/y.js", "../../d3-quadtree/src/quadtree.js", "../../d3-force/src/constant.js", "../../d3-force/src/jiggle.js", "../../d3-force/src/collide.js", "../../d3-force/src/link.js", "../../d3-force/src/lcg.js", "../../d3-force/src/simulation.js", "../../d3-force/src/manyBody.js", "../../d3-force/src/radial.js", "../../d3-force/src/x.js", "../../d3-force/src/y.js", "../../d3-geo/src/math.js", "../../d3-geo/src/noop.js", "../../d3-geo/src/stream.js", "../../d3-geo/src/area.js", "../../d3-geo/src/cartesian.js", "../../d3-geo/src/bounds.js", "../../d3-geo/src/centroid.js", "../../d3-geo/src/constant.js", "../../d3-geo/src/compose.js", "../../d3-geo/src/rotation.js", "../../d3-geo/src/circle.js", "../../d3-geo/src/clip/buffer.js", "../../d3-geo/src/pointEqual.js", "../../d3-geo/src/clip/rejoin.js", "../../d3-geo/src/polygonContains.js", "../../d3-geo/src/clip/index.js", "../../d3-geo/src/clip/antimeridian.js", "../../d3-geo/src/clip/circle.js", "../../d3-geo/src/clip/line.js", "../../d3-geo/src/clip/rectangle.js", "../../d3-geo/src/clip/extent.js", "../../d3-geo/src/length.js", "../../d3-geo/src/distance.js", "../../d3-geo/src/contains.js", "../../d3-geo/src/graticule.js", "../../d3-geo/src/interpolate.js", "../../d3-geo/src/identity.js", "../../d3-geo/src/path/area.js", "../../d3-geo/src/path/bounds.js", "../../d3-geo/src/path/centroid.js", "../../d3-geo/src/path/context.js", "../../d3-geo/src/path/measure.js", "../../d3-geo/src/path/string.js", "../../d3-geo/src/path/index.js", "../../d3-geo/src/transform.js", "../../d3-geo/src/projection/fit.js", "../../d3-geo/src/projection/resample.js", "../../d3-geo/src/projection/index.js", "../../d3-geo/src/projection/conic.js", "../../d3-geo/src/projection/cylindricalEqualArea.js", "../../d3-geo/src/projection/conicEqualArea.js", "../../d3-geo/src/projection/albers.js", "../../d3-geo/src/projection/albersUsa.js", "../../d3-geo/src/projection/azimuthal.js", "../../d3-geo/src/projection/azimuthalEqualArea.js", "../../d3-geo/src/projection/azimuthalEquidistant.js", "../../d3-geo/src/projection/mercator.js", "../../d3-geo/src/projection/conicConformal.js", "../../d3-geo/src/projection/equirectangular.js", "../../d3-geo/src/projection/conicEquidistant.js", "../../d3-geo/src/projection/equalEarth.js", "../../d3-geo/src/projection/gnomonic.js", "../../d3-geo/src/projection/identity.js", "../../d3-geo/src/projection/naturalEarth1.js", "../../d3-geo/src/projection/orthographic.js", "../../d3-geo/src/projection/stereographic.js", "../../d3-geo/src/projection/transverseMercator.js", "../../d3-hierarchy/src/cluster.js", "../../d3-hierarchy/src/hierarchy/count.js", "../../d3-hierarchy/src/hierarchy/each.js", "../../d3-hierarchy/src/hierarchy/eachBefore.js", "../../d3-hierarchy/src/hierarchy/eachAfter.js", "../../d3-hierarchy/src/hierarchy/find.js", "../../d3-hierarchy/src/hierarchy/sum.js", "../../d3-hierarchy/src/hierarchy/sort.js", "../../d3-hierarchy/src/hierarchy/path.js", "../../d3-hierarchy/src/hierarchy/ancestors.js", "../../d3-hierarchy/src/hierarchy/descendants.js", "../../d3-hierarchy/src/hierarchy/leaves.js", "../../d3-hierarchy/src/hierarchy/links.js", "../../d3-hierarchy/src/hierarchy/iterator.js", "../../d3-hierarchy/src/hierarchy/index.js", "../../d3-hierarchy/src/accessors.js", "../../d3-hierarchy/src/constant.js", "../../d3-hierarchy/src/lcg.js", "../../d3-hierarchy/src/array.js", "../../d3-hierarchy/src/pack/enclose.js", "../../d3-hierarchy/src/pack/siblings.js", "../../d3-hierarchy/src/pack/index.js", "../../d3-hierarchy/src/treemap/round.js", "../../d3-hierarchy/src/treemap/dice.js", "../../d3-hierarchy/src/partition.js", "../../d3-hierarchy/src/stratify.js", "../../d3-hierarchy/src/tree.js", "../../d3-hierarchy/src/treemap/slice.js", "../../d3-hierarchy/src/treemap/squarify.js", "../../d3-hierarchy/src/treemap/index.js", "../../d3-hierarchy/src/treemap/binary.js", "../../d3-hierarchy/src/treemap/sliceDice.js", "../../d3-hierarchy/src/treemap/resquarify.js", "../../d3-polygon/src/area.js", "../../d3-polygon/src/centroid.js", "../../d3-polygon/src/cross.js", "../../d3-polygon/src/hull.js", "../../d3-polygon/src/contains.js", "../../d3-polygon/src/length.js", "../../d3-random/src/defaultSource.js", "../../d3-random/src/uniform.js", "../../d3-random/src/int.js", "../../d3-random/src/normal.js", "../../d3-random/src/logNormal.js", "../../d3-random/src/irwinHall.js", "../../d3-random/src/bates.js", "../../d3-random/src/exponential.js", "../../d3-random/src/pareto.js", "../../d3-random/src/bernoulli.js", "../../d3-random/src/geometric.js", "../../d3-random/src/gamma.js", "../../d3-random/src/beta.js", "../../d3-random/src/binomial.js", "../../d3-random/src/weibull.js", "../../d3-random/src/cauchy.js", "../../d3-random/src/logistic.js", "../../d3-random/src/poisson.js", "../../d3-random/src/lcg.js", "../../d3-scale-chromatic/src/colors.js", "../../d3-scale-chromatic/src/categorical/category10.js", "../../d3-scale-chromatic/src/categorical/Accent.js", "../../d3-scale-chromatic/src/categorical/Dark2.js", "../../d3-scale-chromatic/src/categorical/Paired.js", "../../d3-scale-chromatic/src/categorical/Pastel1.js", "../../d3-scale-chromatic/src/categorical/Pastel2.js", "../../d3-scale-chromatic/src/categorical/Set1.js", "../../d3-scale-chromatic/src/categorical/Set2.js", "../../d3-scale-chromatic/src/categorical/Set3.js", "../../d3-scale-chromatic/src/categorical/Tableau10.js", "../../d3-scale-chromatic/src/ramp.js", "../../d3-scale-chromatic/src/diverging/BrBG.js", "../../d3-scale-chromatic/src/diverging/PRGn.js", "../../d3-scale-chromatic/src/diverging/PiYG.js", "../../d3-scale-chromatic/src/diverging/PuOr.js", "../../d3-scale-chromatic/src/diverging/RdBu.js", "../../d3-scale-chromatic/src/diverging/RdGy.js", "../../d3-scale-chromatic/src/diverging/RdYlBu.js", "../../d3-scale-chromatic/src/diverging/RdYlGn.js", "../../d3-scale-chromatic/src/diverging/Spectral.js", "../../d3-scale-chromatic/src/sequential-multi/BuGn.js", "../../d3-scale-chromatic/src/sequential-multi/BuPu.js", "../../d3-scale-chromatic/src/sequential-multi/GnBu.js", "../../d3-scale-chromatic/src/sequential-multi/OrRd.js", "../../d3-scale-chromatic/src/sequential-multi/PuBuGn.js", "../../d3-scale-chromatic/src/sequential-multi/PuBu.js", "../../d3-scale-chromatic/src/sequential-multi/PuRd.js", "../../d3-scale-chromatic/src/sequential-multi/RdPu.js", "../../d3-scale-chromatic/src/sequential-multi/YlGnBu.js", "../../d3-scale-chromatic/src/sequential-multi/YlGn.js", "../../d3-scale-chromatic/src/sequential-multi/YlOrBr.js", "../../d3-scale-chromatic/src/sequential-multi/YlOrRd.js", "../../d3-scale-chromatic/src/sequential-single/Blues.js", "../../d3-scale-chromatic/src/sequential-single/Greens.js", "../../d3-scale-chromatic/src/sequential-single/Greys.js", "../../d3-scale-chromatic/src/sequential-single/Purples.js", "../../d3-scale-chromatic/src/sequential-single/Reds.js", "../../d3-scale-chromatic/src/sequential-single/Oranges.js", "../../d3-scale-chromatic/src/sequential-multi/cividis.js", "../../d3-scale-chromatic/src/sequential-multi/cubehelix.js", "../../d3-scale-chromatic/src/sequential-multi/rainbow.js", "../../d3-scale-chromatic/src/sequential-multi/sinebow.js", "../../d3-scale-chromatic/src/sequential-multi/turbo.js", "../../d3-scale-chromatic/src/sequential-multi/viridis.js", "../../d3-shape/src/constant.js", "../../d3-shape/src/math.js", "../../d3-shape/src/path.js", "../../d3-shape/src/arc.js", "../../d3-shape/src/array.js", "../../d3-shape/src/curve/linear.js", "../../d3-shape/src/point.js", "../../d3-shape/src/line.js", "../../d3-shape/src/area.js", "../../d3-shape/src/descending.js", "../../d3-shape/src/identity.js", "../../d3-shape/src/pie.js", "../../d3-shape/src/curve/radial.js", "../../d3-shape/src/lineRadial.js", "../../d3-shape/src/areaRadial.js", "../../d3-shape/src/pointRadial.js", "../../d3-shape/src/curve/bump.js", "../../d3-shape/src/link.js", "../../d3-shape/src/symbol/asterisk.js", "../../d3-shape/src/symbol/circle.js", "../../d3-shape/src/symbol/cross.js", "../../d3-shape/src/symbol/diamond.js", "../../d3-shape/src/symbol/diamond2.js", "../../d3-shape/src/symbol/plus.js", "../../d3-shape/src/symbol/square.js", "../../d3-shape/src/symbol/square2.js", "../../d3-shape/src/symbol/star.js", "../../d3-shape/src/symbol/triangle.js", "../../d3-shape/src/symbol/triangle2.js", "../../d3-shape/src/symbol/wye.js", "../../d3-shape/src/symbol/times.js", "../../d3-shape/src/symbol.js", "../../d3-shape/src/noop.js", "../../d3-shape/src/curve/basis.js", "../../d3-shape/src/curve/basisClosed.js", "../../d3-shape/src/curve/basisOpen.js", "../../d3-shape/src/curve/bundle.js", "../../d3-shape/src/curve/cardinal.js", "../../d3-shape/src/curve/cardinalClosed.js", "../../d3-shape/src/curve/cardinalOpen.js", "../../d3-shape/src/curve/catmullRom.js", "../../d3-shape/src/curve/catmullRomClosed.js", "../../d3-shape/src/curve/catmullRomOpen.js", "../../d3-shape/src/curve/linearClosed.js", "../../d3-shape/src/curve/monotone.js", "../../d3-shape/src/curve/natural.js", "../../d3-shape/src/curve/step.js", "../../d3-shape/src/offset/none.js", "../../d3-shape/src/order/none.js", "../../d3-shape/src/stack.js", "../../d3-shape/src/offset/expand.js", "../../d3-shape/src/offset/diverging.js", "../../d3-shape/src/offset/silhouette.js", "../../d3-shape/src/offset/wiggle.js", "../../d3-shape/src/order/appearance.js", "../../d3-shape/src/order/ascending.js", "../../d3-shape/src/order/descending.js", "../../d3-shape/src/order/insideOut.js", "../../d3-shape/src/order/reverse.js", "../../d3-zoom/src/constant.js", "../../d3-zoom/src/event.js", "../../d3-zoom/src/transform.js", "../../d3-zoom/src/noevent.js", "../../d3-zoom/src/zoom.js"],
  "sourcesContent": ["export default function(x) {\r\n  return x;\r\n}\r\n", "import identity from \"./identity.js\";\r\n\r\nvar top = 1,\r\n    right = 2,\r\n    bottom = 3,\r\n    left = 4,\r\n    epsilon = 1e-6;\r\n\r\nfunction translateX(x) {\r\n  return \"translate(\" + x + \",0)\";\r\n}\r\n\r\nfunction translateY(y) {\r\n  return \"translate(0,\" + y + \")\";\r\n}\r\n\r\nfunction number(scale) {\r\n  return d => +scale(d);\r\n}\r\n\r\nfunction center(scale, offset) {\r\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\r\n  if (scale.round()) offset = Math.round(offset);\r\n  return d => +scale(d) + offset;\r\n}\r\n\r\nfunction entering() {\r\n  return !this.__axis;\r\n}\r\n\r\nfunction axis(orient, scale) {\r\n  var tickArguments = [],\r\n      tickValues = null,\r\n      tickFormat = null,\r\n      tickSizeInner = 6,\r\n      tickSizeOuter = 6,\r\n      tickPadding = 3,\r\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\r\n      k = orient === top || orient === left ? -1 : 1,\r\n      x = orient === left || orient === right ? \"x\" : \"y\",\r\n      transform = orient === top || orient === bottom ? translateX : translateY;\r\n\r\n  function axis(context) {\r\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\r\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\r\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\r\n        range = scale.range(),\r\n        range0 = +range[0] + offset,\r\n        range1 = +range[range.length - 1] + offset,\r\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\r\n        selection = context.selection ? context.selection() : context,\r\n        path = selection.selectAll(\".domain\").data([null]),\r\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\r\n        tickExit = tick.exit(),\r\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\r\n        line = tick.select(\"line\"),\r\n        text = tick.select(\"text\");\r\n\r\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\r\n        .attr(\"class\", \"domain\")\r\n        .attr(\"stroke\", \"currentColor\"));\r\n\r\n    tick = tick.merge(tickEnter);\r\n\r\n    line = line.merge(tickEnter.append(\"line\")\r\n        .attr(\"stroke\", \"currentColor\")\r\n        .attr(x + \"2\", k * tickSizeInner));\r\n\r\n    text = text.merge(tickEnter.append(\"text\")\r\n        .attr(\"fill\", \"currentColor\")\r\n        .attr(x, k * spacing)\r\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\r\n\r\n    if (context !== selection) {\r\n      path = path.transition(context);\r\n      tick = tick.transition(context);\r\n      line = line.transition(context);\r\n      text = text.transition(context);\r\n\r\n      tickExit = tickExit.transition(context)\r\n          .attr(\"opacity\", epsilon)\r\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\r\n\r\n      tickEnter\r\n          .attr(\"opacity\", epsilon)\r\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\r\n    }\r\n\r\n    tickExit.remove();\r\n\r\n    path\r\n        .attr(\"d\", orient === left || orient === right\r\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\r\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\r\n\r\n    tick\r\n        .attr(\"opacity\", 1)\r\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\r\n\r\n    line\r\n        .attr(x + \"2\", k * tickSizeInner);\r\n\r\n    text\r\n        .attr(x, k * spacing)\r\n        .text(format);\r\n\r\n    selection.filter(entering)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"font-size\", 10)\r\n        .attr(\"font-family\", \"sans-serif\")\r\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\r\n\r\n    selection\r\n        .each(function() { this.__axis = position; });\r\n  }\r\n\r\n  axis.scale = function(_) {\r\n    return arguments.length ? (scale = _, axis) : scale;\r\n  };\r\n\r\n  axis.ticks = function() {\r\n    return tickArguments = Array.from(arguments), axis;\r\n  };\r\n\r\n  axis.tickArguments = function(_) {\r\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\r\n  };\r\n\r\n  axis.tickValues = function(_) {\r\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\r\n  };\r\n\r\n  axis.tickFormat = function(_) {\r\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\r\n  };\r\n\r\n  axis.tickSize = function(_) {\r\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\r\n  };\r\n\r\n  axis.tickSizeInner = function(_) {\r\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\r\n  };\r\n\r\n  axis.tickSizeOuter = function(_) {\r\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\r\n  };\r\n\r\n  axis.tickPadding = function(_) {\r\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\r\n  };\r\n\r\n  axis.offset = function(_) {\r\n    return arguments.length ? (offset = +_, axis) : offset;\r\n  };\r\n\r\n  return axis;\r\n}\r\n\r\nexport function axisTop(scale) {\r\n  return axis(top, scale);\r\n}\r\n\r\nexport function axisRight(scale) {\r\n  return axis(right, scale);\r\n}\r\n\r\nexport function axisBottom(scale) {\r\n  return axis(bottom, scale);\r\n}\r\n\r\nexport function axisLeft(scale) {\r\n  return axis(left, scale);\r\n}\r\n", "var noop = {value: () => {}};\r\n\r\nfunction dispatch() {\r\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\r\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\r\n    _[t] = [];\r\n  }\r\n  return new Dispatch(_);\r\n}\r\n\r\nfunction Dispatch(_) {\r\n  this._ = _;\r\n}\r\n\r\nfunction parseTypenames(typenames, types) {\r\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\r\n    var name = \"\", i = t.indexOf(\".\");\r\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\r\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\r\n    return {type: t, name: name};\r\n  });\r\n}\r\n\r\nDispatch.prototype = dispatch.prototype = {\r\n  constructor: Dispatch,\r\n  on: function(typename, callback) {\r\n    var _ = this._,\r\n        T = parseTypenames(typename + \"\", _),\r\n        t,\r\n        i = -1,\r\n        n = T.length;\r\n\r\n    // If no callback was specified, return the callback of the given type and name.\r\n    if (arguments.length < 2) {\r\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\r\n      return;\r\n    }\r\n\r\n    // If a type was specified, set the callback for the given type and name.\r\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\r\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\r\n    while (++i < n) {\r\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\r\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\r\n    }\r\n\r\n    return this;\r\n  },\r\n  copy: function() {\r\n    var copy = {}, _ = this._;\r\n    for (var t in _) copy[t] = _[t].slice();\r\n    return new Dispatch(copy);\r\n  },\r\n  call: function(type, that) {\r\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\r\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\r\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\r\n  },\r\n  apply: function(type, that, args) {\r\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\r\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\r\n  }\r\n};\r\n\r\nfunction get(type, name) {\r\n  for (var i = 0, n = type.length, c; i < n; ++i) {\r\n    if ((c = type[i]).name === name) {\r\n      return c.value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction set(type, name, callback) {\r\n  for (var i = 0, n = type.length; i < n; ++i) {\r\n    if (type[i].name === name) {\r\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\r\n      break;\r\n    }\r\n  }\r\n  if (callback != null) type.push({name: name, value: callback});\r\n  return type;\r\n}\r\n\r\nexport default dispatch;\r\n", "// These are typically used in conjunction with noevent to ensure that we can\r\n// preventDefault on the event.\r\nexport const nonpassive = {passive: false};\r\nexport const nonpassivecapture = {capture: true, passive: false};\r\n\r\nexport function nopropagation(event) {\r\n  event.stopImmediatePropagation();\r\n}\r\n\r\nexport default function(event) {\r\n  event.preventDefault();\r\n  event.stopImmediatePropagation();\r\n}\r\n", "import {select} from \"d3-selection\";\r\nimport noevent, {nonpassivecapture} from \"./noevent.js\";\r\n\r\nexport default function(view) {\r\n  var root = view.document.documentElement,\r\n      selection = select(view).on(\"dragstart.drag\", noevent, nonpassivecapture);\r\n  if (\"onselectstart\" in root) {\r\n    selection.on(\"selectstart.drag\", noevent, nonpassivecapture);\r\n  } else {\r\n    root.__noselect = root.style.MozUserSelect;\r\n    root.style.MozUserSelect = \"none\";\r\n  }\r\n}\r\n\r\nexport function yesdrag(view, noclick) {\r\n  var root = view.document.documentElement,\r\n      selection = select(view).on(\"dragstart.drag\", null);\r\n  if (noclick) {\r\n    selection.on(\"click.drag\", noevent, nonpassivecapture);\r\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\r\n  }\r\n  if (\"onselectstart\" in root) {\r\n    selection.on(\"selectstart.drag\", null);\r\n  } else {\r\n    root.style.MozUserSelect = root.__noselect;\r\n    delete root.__noselect;\r\n  }\r\n}\r\n", "export default x => () => x;\r\n", "export default function DragEvent(type, {\r\n  sourceEvent,\r\n  subject,\r\n  target,\r\n  identifier,\r\n  active,\r\n  x, y, dx, dy,\r\n  dispatch\r\n}) {\r\n  Object.defineProperties(this, {\r\n    type: {value: type, enumerable: true, configurable: true},\r\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\r\n    subject: {value: subject, enumerable: true, configurable: true},\r\n    target: {value: target, enumerable: true, configurable: true},\r\n    identifier: {value: identifier, enumerable: true, configurable: true},\r\n    active: {value: active, enumerable: true, configurable: true},\r\n    x: {value: x, enumerable: true, configurable: true},\r\n    y: {value: y, enumerable: true, configurable: true},\r\n    dx: {value: dx, enumerable: true, configurable: true},\r\n    dy: {value: dy, enumerable: true, configurable: true},\r\n    _: {value: dispatch}\r\n  });\r\n}\r\n\r\nDragEvent.prototype.on = function() {\r\n  var value = this._.on.apply(this._, arguments);\r\n  return value === this._ ? this : value;\r\n};\r\n", "import {dispatch} from \"d3-dispatch\";\r\nimport {select, pointer} from \"d3-selection\";\r\nimport nodrag, {yesdrag} from \"./nodrag.js\";\r\nimport noevent, {nonpassive, nonpassivecapture, nopropagation} from \"./noevent.js\";\r\nimport constant from \"./constant.js\";\r\nimport DragEvent from \"./event.js\";\r\n\r\n// Ignore right-click, since that should open the context menu.\r\nfunction defaultFilter(event) {\r\n  return !event.ctrlKey && !event.button;\r\n}\r\n\r\nfunction defaultContainer() {\r\n  return this.parentNode;\r\n}\r\n\r\nfunction defaultSubject(event, d) {\r\n  return d == null ? {x: event.x, y: event.y} : d;\r\n}\r\n\r\nfunction defaultTouchable() {\r\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\r\n}\r\n\r\nexport default function() {\r\n  var filter = defaultFilter,\r\n      container = defaultContainer,\r\n      subject = defaultSubject,\r\n      touchable = defaultTouchable,\r\n      gestures = {},\r\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\r\n      active = 0,\r\n      mousedownx,\r\n      mousedowny,\r\n      mousemoving,\r\n      touchending,\r\n      clickDistance2 = 0;\r\n\r\n  function drag(selection) {\r\n    selection\r\n        .on(\"mousedown.drag\", mousedowned)\r\n      .filter(touchable)\r\n        .on(\"touchstart.drag\", touchstarted)\r\n        .on(\"touchmove.drag\", touchmoved, nonpassive)\r\n        .on(\"touchend.drag touchcancel.drag\", touchended)\r\n        .style(\"touch-action\", \"none\")\r\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\r\n  }\r\n\r\n  function mousedowned(event, d) {\r\n    if (touchending || !filter.call(this, event, d)) return;\r\n    var gesture = beforestart(this, container.call(this, event, d), event, d, \"mouse\");\r\n    if (!gesture) return;\r\n    select(event.view)\r\n      .on(\"mousemove.drag\", mousemoved, nonpassivecapture)\r\n      .on(\"mouseup.drag\", mouseupped, nonpassivecapture);\r\n    nodrag(event.view);\r\n    nopropagation(event);\r\n    mousemoving = false;\r\n    mousedownx = event.clientX;\r\n    mousedowny = event.clientY;\r\n    gesture(\"start\", event);\r\n  }\r\n\r\n  function mousemoved(event) {\r\n    noevent(event);\r\n    if (!mousemoving) {\r\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\r\n      mousemoving = dx * dx + dy * dy > clickDistance2;\r\n    }\r\n    gestures.mouse(\"drag\", event);\r\n  }\r\n\r\n  function mouseupped(event) {\r\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\r\n    yesdrag(event.view, mousemoving);\r\n    noevent(event);\r\n    gestures.mouse(\"end\", event);\r\n  }\r\n\r\n  function touchstarted(event, d) {\r\n    if (!filter.call(this, event, d)) return;\r\n    var touches = event.changedTouches,\r\n        c = container.call(this, event, d),\r\n        n = touches.length, i, gesture;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\r\n        nopropagation(event);\r\n        gesture(\"start\", event, touches[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function touchmoved(event) {\r\n    var touches = event.changedTouches,\r\n        n = touches.length, i, gesture;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      if (gesture = gestures[touches[i].identifier]) {\r\n        noevent(event);\r\n        gesture(\"drag\", event, touches[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function touchended(event) {\r\n    var touches = event.changedTouches,\r\n        n = touches.length, i, gesture;\r\n\r\n    if (touchending) clearTimeout(touchending);\r\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\r\n    for (i = 0; i < n; ++i) {\r\n      if (gesture = gestures[touches[i].identifier]) {\r\n        nopropagation(event);\r\n        gesture(\"end\", event, touches[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function beforestart(that, container, event, d, identifier, touch) {\r\n    var dispatch = listeners.copy(),\r\n        p = pointer(touch || event, container), dx, dy,\r\n        s;\r\n\r\n    if ((s = subject.call(that, new DragEvent(\"beforestart\", {\r\n        sourceEvent: event,\r\n        target: drag,\r\n        identifier,\r\n        active,\r\n        x: p[0],\r\n        y: p[1],\r\n        dx: 0,\r\n        dy: 0,\r\n        dispatch\r\n      }), d)) == null) return;\r\n\r\n    dx = s.x - p[0] || 0;\r\n    dy = s.y - p[1] || 0;\r\n\r\n    return function gesture(type, event, touch) {\r\n      var p0 = p, n;\r\n      switch (type) {\r\n        case \"start\": gestures[identifier] = gesture, n = active++; break;\r\n        case \"end\": delete gestures[identifier], --active; // falls through\r\n        case \"drag\": p = pointer(touch || event, container), n = active; break;\r\n      }\r\n      dispatch.call(\r\n        type,\r\n        that,\r\n        new DragEvent(type, {\r\n          sourceEvent: event,\r\n          subject: s,\r\n          target: drag,\r\n          identifier,\r\n          active: n,\r\n          x: p[0] + dx,\r\n          y: p[1] + dy,\r\n          dx: p[0] - p0[0],\r\n          dy: p[1] - p0[1],\r\n          dispatch\r\n        }),\r\n        d\r\n      );\r\n    };\r\n  }\r\n\r\n  drag.filter = function(_) {\r\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\r\n  };\r\n\r\n  drag.container = function(_) {\r\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\r\n  };\r\n\r\n  drag.subject = function(_) {\r\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\r\n  };\r\n\r\n  drag.touchable = function(_) {\r\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\r\n  };\r\n\r\n  drag.on = function() {\r\n    var value = listeners.on.apply(listeners, arguments);\r\n    return value === listeners ? drag : value;\r\n  };\r\n\r\n  drag.clickDistance = function(_) {\r\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\r\n  };\r\n\r\n  return drag;\r\n}\r\n", "var frame = 0, // is an animation frame pending?\r\n    timeout = 0, // is a timeout pending?\r\n    interval = 0, // are any timers active?\r\n    pokeDelay = 1000, // how frequently we check for clock skew\r\n    taskHead,\r\n    taskTail,\r\n    clockLast = 0,\r\n    clockNow = 0,\r\n    clockSkew = 0,\r\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\r\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\r\n\r\nexport function now() {\r\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\r\n}\r\n\r\nfunction clearNow() {\r\n  clockNow = 0;\r\n}\r\n\r\nexport function Timer() {\r\n  this._call =\r\n  this._time =\r\n  this._next = null;\r\n}\r\n\r\nTimer.prototype = timer.prototype = {\r\n  constructor: Timer,\r\n  restart: function(callback, delay, time) {\r\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\r\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\r\n    if (!this._next && taskTail !== this) {\r\n      if (taskTail) taskTail._next = this;\r\n      else taskHead = this;\r\n      taskTail = this;\r\n    }\r\n    this._call = callback;\r\n    this._time = time;\r\n    sleep();\r\n  },\r\n  stop: function() {\r\n    if (this._call) {\r\n      this._call = null;\r\n      this._time = Infinity;\r\n      sleep();\r\n    }\r\n  }\r\n};\r\n\r\nexport function timer(callback, delay, time) {\r\n  var t = new Timer;\r\n  t.restart(callback, delay, time);\r\n  return t;\r\n}\r\n\r\nexport function timerFlush() {\r\n  now(); // Get the current time, if not already set.\r\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\r\n  var t = taskHead, e;\r\n  while (t) {\r\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\r\n    t = t._next;\r\n  }\r\n  --frame;\r\n}\r\n\r\nfunction wake() {\r\n  clockNow = (clockLast = clock.now()) + clockSkew;\r\n  frame = timeout = 0;\r\n  try {\r\n    timerFlush();\r\n  } finally {\r\n    frame = 0;\r\n    nap();\r\n    clockNow = 0;\r\n  }\r\n}\r\n\r\nfunction poke() {\r\n  var now = clock.now(), delay = now - clockLast;\r\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\r\n}\r\n\r\nfunction nap() {\r\n  var t0, t1 = taskHead, t2, time = Infinity;\r\n  while (t1) {\r\n    if (t1._call) {\r\n      if (time > t1._time) time = t1._time;\r\n      t0 = t1, t1 = t1._next;\r\n    } else {\r\n      t2 = t1._next, t1._next = null;\r\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\r\n    }\r\n  }\r\n  taskTail = t0;\r\n  sleep(time);\r\n}\r\n\r\nfunction sleep(time) {\r\n  if (frame) return; // Soonest alarm already set, or will be.\r\n  if (timeout) timeout = clearTimeout(timeout);\r\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\r\n  if (delay > 24) {\r\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\r\n    if (interval) interval = clearInterval(interval);\r\n  } else {\r\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\r\n    frame = 1, setFrame(wake);\r\n  }\r\n}\r\n", "import {Timer} from \"./timer.js\";\r\n\r\nexport default function(callback, delay, time) {\r\n  var t = new Timer;\r\n  delay = delay == null ? 0 : +delay;\r\n  t.restart(elapsed => {\r\n    t.stop();\r\n    callback(elapsed + delay);\r\n  }, delay, time);\r\n  return t;\r\n}\r\n", "import {Timer, now} from \"./timer.js\";\r\n\r\nexport default function(callback, delay, time) {\r\n  var t = new Timer, total = delay;\r\n  if (delay == null) return t.restart(callback, delay, time), t;\r\n  t._restart = t.restart;\r\n  t.restart = function(callback, delay, time) {\r\n    delay = +delay, time = time == null ? now() : +time;\r\n    t._restart(function tick(elapsed) {\r\n      elapsed += total;\r\n      t._restart(tick, total += delay, time);\r\n      callback(elapsed);\r\n    }, delay, time);\r\n  }\r\n  t.restart(callback, delay, time);\r\n  return t;\r\n}\r\n", "import {dispatch} from \"d3-dispatch\";\r\nimport {timer, timeout} from \"d3-timer\";\r\n\r\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\r\nvar emptyTween = [];\r\n\r\nexport var CREATED = 0;\r\nexport var SCHEDULED = 1;\r\nexport var STARTING = 2;\r\nexport var STARTED = 3;\r\nexport var RUNNING = 4;\r\nexport var ENDING = 5;\r\nexport var ENDED = 6;\r\n\r\nexport default function(node, name, id, index, group, timing) {\r\n  var schedules = node.__transition;\r\n  if (!schedules) node.__transition = {};\r\n  else if (id in schedules) return;\r\n  create(node, id, {\r\n    name: name,\r\n    index: index, // For context during callback.\r\n    group: group, // For context during callback.\r\n    on: emptyOn,\r\n    tween: emptyTween,\r\n    time: timing.time,\r\n    delay: timing.delay,\r\n    duration: timing.duration,\r\n    ease: timing.ease,\r\n    timer: null,\r\n    state: CREATED\r\n  });\r\n}\r\n\r\nexport function init(node, id) {\r\n  var schedule = get(node, id);\r\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\r\n  return schedule;\r\n}\r\n\r\nexport function set(node, id) {\r\n  var schedule = get(node, id);\r\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\r\n  return schedule;\r\n}\r\n\r\nexport function get(node, id) {\r\n  var schedule = node.__transition;\r\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\r\n  return schedule;\r\n}\r\n\r\nfunction create(node, id, self) {\r\n  var schedules = node.__transition,\r\n      tween;\r\n\r\n  // Initialize the self timer when the transition is created.\r\n  // Note the actual delay is not known until the first callback!\r\n  schedules[id] = self;\r\n  self.timer = timer(schedule, 0, self.time);\r\n\r\n  function schedule(elapsed) {\r\n    self.state = SCHEDULED;\r\n    self.timer.restart(start, self.delay, self.time);\r\n\r\n    // If the elapsed delay is less than our first sleep, start immediately.\r\n    if (self.delay <= elapsed) start(elapsed - self.delay);\r\n  }\r\n\r\n  function start(elapsed) {\r\n    var i, j, n, o;\r\n\r\n    // If the state is not SCHEDULED, then we previously errored on start.\r\n    if (self.state !== SCHEDULED) return stop();\r\n\r\n    for (i in schedules) {\r\n      o = schedules[i];\r\n      if (o.name !== self.name) continue;\r\n\r\n      // While this element already has a starting transition during this frame,\r\n      // defer starting an interrupting transition until that transition has a\r\n      // chance to tick (and possibly end); see d3/d3-transition#54!\r\n      if (o.state === STARTED) return timeout(start);\r\n\r\n      // Interrupt the active transition, if any.\r\n      if (o.state === RUNNING) {\r\n        o.state = ENDED;\r\n        o.timer.stop();\r\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\r\n        delete schedules[i];\r\n      }\r\n\r\n      // Cancel any pre-empted transitions.\r\n      else if (+i < id) {\r\n        o.state = ENDED;\r\n        o.timer.stop();\r\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\r\n        delete schedules[i];\r\n      }\r\n    }\r\n\r\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\r\n    // Note the transition may be canceled after start and before the first tick!\r\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\r\n    // Assuming this is successful, subsequent callbacks go straight to tick.\r\n    timeout(function() {\r\n      if (self.state === STARTED) {\r\n        self.state = RUNNING;\r\n        self.timer.restart(tick, self.delay, self.time);\r\n        tick(elapsed);\r\n      }\r\n    });\r\n\r\n    // Dispatch the start event.\r\n    // Note this must be done before the tween are initialized.\r\n    self.state = STARTING;\r\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\r\n    if (self.state !== STARTING) return; // interrupted\r\n    self.state = STARTED;\r\n\r\n    // Initialize the tween, deleting null tween.\r\n    tween = new Array(n = self.tween.length);\r\n    for (i = 0, j = -1; i < n; ++i) {\r\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\r\n        tween[++j] = o;\r\n      }\r\n    }\r\n    tween.length = j + 1;\r\n  }\r\n\r\n  function tick(elapsed) {\r\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\r\n        i = -1,\r\n        n = tween.length;\r\n\r\n    while (++i < n) {\r\n      tween[i].call(node, t);\r\n    }\r\n\r\n    // Dispatch the end event.\r\n    if (self.state === ENDING) {\r\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\r\n      stop();\r\n    }\r\n  }\r\n\r\n  function stop() {\r\n    self.state = ENDED;\r\n    self.timer.stop();\r\n    delete schedules[id];\r\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\r\n    delete node.__transition;\r\n  }\r\n}\r\n", "import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\r\n\r\nexport default function(node, name) {\r\n  var schedules = node.__transition,\r\n      schedule,\r\n      active,\r\n      empty = true,\r\n      i;\r\n\r\n  if (!schedules) return;\r\n\r\n  name = name == null ? null : name + \"\";\r\n\r\n  for (i in schedules) {\r\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\r\n    active = schedule.state > STARTING && schedule.state < ENDING;\r\n    schedule.state = ENDED;\r\n    schedule.timer.stop();\r\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\r\n    delete schedules[i];\r\n  }\r\n\r\n  if (empty) delete node.__transition;\r\n}\r\n", "import interrupt from \"../interrupt.js\";\r\n\r\nexport default function(name) {\r\n  return this.each(function() {\r\n    interrupt(this, name);\r\n  });\r\n}\r\n", "import {get, set} from \"./schedule.js\";\r\n\r\nfunction tweenRemove(id, name) {\r\n  var tween0, tween1;\r\n  return function() {\r\n    var schedule = set(this, id),\r\n        tween = schedule.tween;\r\n\r\n    // If this node shared tween with the previous node,\r\n    // just assign the updated shared tween and we’re done!\r\n    // Otherwise, copy-on-write.\r\n    if (tween !== tween0) {\r\n      tween1 = tween0 = tween;\r\n      for (var i = 0, n = tween1.length; i < n; ++i) {\r\n        if (tween1[i].name === name) {\r\n          tween1 = tween1.slice();\r\n          tween1.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    schedule.tween = tween1;\r\n  };\r\n}\r\n\r\nfunction tweenFunction(id, name, value) {\r\n  var tween0, tween1;\r\n  if (typeof value !== \"function\") throw new Error;\r\n  return function() {\r\n    var schedule = set(this, id),\r\n        tween = schedule.tween;\r\n\r\n    // If this node shared tween with the previous node,\r\n    // just assign the updated shared tween and we’re done!\r\n    // Otherwise, copy-on-write.\r\n    if (tween !== tween0) {\r\n      tween1 = (tween0 = tween).slice();\r\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\r\n        if (tween1[i].name === name) {\r\n          tween1[i] = t;\r\n          break;\r\n        }\r\n      }\r\n      if (i === n) tween1.push(t);\r\n    }\r\n\r\n    schedule.tween = tween1;\r\n  };\r\n}\r\n\r\nexport default function(name, value) {\r\n  var id = this._id;\r\n\r\n  name += \"\";\r\n\r\n  if (arguments.length < 2) {\r\n    var tween = get(this.node(), id).tween;\r\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\r\n      if ((t = tween[i]).name === name) {\r\n        return t.value;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\r\n}\r\n\r\nexport function tweenValue(transition, name, value) {\r\n  var id = transition._id;\r\n\r\n  transition.each(function() {\r\n    var schedule = set(this, id);\r\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\r\n  });\r\n\r\n  return function(node) {\r\n    return get(node, id).value[name];\r\n  };\r\n}\r\n", "import {color} from \"d3-color\";\r\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\r\n\r\nexport default function(a, b) {\r\n  var c;\r\n  return (typeof b === \"number\" ? interpolateNumber\r\n      : b instanceof color ? interpolateRgb\r\n      : (c = color(b)) ? (b = c, interpolateRgb)\r\n      : interpolateString)(a, b);\r\n}\r\n", "import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\r\nimport {namespace} from \"d3-selection\";\r\nimport {tweenValue} from \"./tween.js\";\r\nimport interpolate from \"./interpolate.js\";\r\n\r\nfunction attrRemove(name) {\r\n  return function() {\r\n    this.removeAttribute(name);\r\n  };\r\n}\r\n\r\nfunction attrRemoveNS(fullname) {\r\n  return function() {\r\n    this.removeAttributeNS(fullname.space, fullname.local);\r\n  };\r\n}\r\n\r\nfunction attrConstant(name, interpolate, value1) {\r\n  var string00,\r\n      string1 = value1 + \"\",\r\n      interpolate0;\r\n  return function() {\r\n    var string0 = this.getAttribute(name);\r\n    return string0 === string1 ? null\r\n        : string0 === string00 ? interpolate0\r\n        : interpolate0 = interpolate(string00 = string0, value1);\r\n  };\r\n}\r\n\r\nfunction attrConstantNS(fullname, interpolate, value1) {\r\n  var string00,\r\n      string1 = value1 + \"\",\r\n      interpolate0;\r\n  return function() {\r\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\r\n    return string0 === string1 ? null\r\n        : string0 === string00 ? interpolate0\r\n        : interpolate0 = interpolate(string00 = string0, value1);\r\n  };\r\n}\r\n\r\nfunction attrFunction(name, interpolate, value) {\r\n  var string00,\r\n      string10,\r\n      interpolate0;\r\n  return function() {\r\n    var string0, value1 = value(this), string1;\r\n    if (value1 == null) return void this.removeAttribute(name);\r\n    string0 = this.getAttribute(name);\r\n    string1 = value1 + \"\";\r\n    return string0 === string1 ? null\r\n        : string0 === string00 && string1 === string10 ? interpolate0\r\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\r\n  };\r\n}\r\n\r\nfunction attrFunctionNS(fullname, interpolate, value) {\r\n  var string00,\r\n      string10,\r\n      interpolate0;\r\n  return function() {\r\n    var string0, value1 = value(this), string1;\r\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\r\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\r\n    string1 = value1 + \"\";\r\n    return string0 === string1 ? null\r\n        : string0 === string00 && string1 === string10 ? interpolate0\r\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\r\n  };\r\n}\r\n\r\nexport default function(name, value) {\r\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\r\n  return this.attrTween(name, typeof value === \"function\"\r\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\r\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\r\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\r\n}\r\n", "import {namespace} from \"d3-selection\";\r\n\r\nfunction attrInterpolate(name, i) {\r\n  return function(t) {\r\n    this.setAttribute(name, i.call(this, t));\r\n  };\r\n}\r\n\r\nfunction attrInterpolateNS(fullname, i) {\r\n  return function(t) {\r\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\r\n  };\r\n}\r\n\r\nfunction attrTweenNS(fullname, value) {\r\n  var t0, i0;\r\n  function tween() {\r\n    var i = value.apply(this, arguments);\r\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\r\n    return t0;\r\n  }\r\n  tween._value = value;\r\n  return tween;\r\n}\r\n\r\nfunction attrTween(name, value) {\r\n  var t0, i0;\r\n  function tween() {\r\n    var i = value.apply(this, arguments);\r\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\r\n    return t0;\r\n  }\r\n  tween._value = value;\r\n  return tween;\r\n}\r\n\r\nexport default function(name, value) {\r\n  var key = \"attr.\" + name;\r\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\r\n  if (value == null) return this.tween(key, null);\r\n  if (typeof value !== \"function\") throw new Error;\r\n  var fullname = namespace(name);\r\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\r\n}\r\n", "import {get, init} from \"./schedule.js\";\r\n\r\nfunction delayFunction(id, value) {\r\n  return function() {\r\n    init(this, id).delay = +value.apply(this, arguments);\r\n  };\r\n}\r\n\r\nfunction delayConstant(id, value) {\r\n  return value = +value, function() {\r\n    init(this, id).delay = value;\r\n  };\r\n}\r\n\r\nexport default function(value) {\r\n  var id = this._id;\r\n\r\n  return arguments.length\r\n      ? this.each((typeof value === \"function\"\r\n          ? delayFunction\r\n          : delayConstant)(id, value))\r\n      : get(this.node(), id).delay;\r\n}\r\n", "import {get, set} from \"./schedule.js\";\r\n\r\nfunction durationFunction(id, value) {\r\n  return function() {\r\n    set(this, id).duration = +value.apply(this, arguments);\r\n  };\r\n}\r\n\r\nfunction durationConstant(id, value) {\r\n  return value = +value, function() {\r\n    set(this, id).duration = value;\r\n  };\r\n}\r\n\r\nexport default function(value) {\r\n  var id = this._id;\r\n\r\n  return arguments.length\r\n      ? this.each((typeof value === \"function\"\r\n          ? durationFunction\r\n          : durationConstant)(id, value))\r\n      : get(this.node(), id).duration;\r\n}\r\n", "import {get, set} from \"./schedule.js\";\r\n\r\nfunction easeConstant(id, value) {\r\n  if (typeof value !== \"function\") throw new Error;\r\n  return function() {\r\n    set(this, id).ease = value;\r\n  };\r\n}\r\n\r\nexport default function(value) {\r\n  var id = this._id;\r\n\r\n  return arguments.length\r\n      ? this.each(easeConstant(id, value))\r\n      : get(this.node(), id).ease;\r\n}\r\n", "import {set} from \"./schedule.js\";\r\n\r\nfunction easeVarying(id, value) {\r\n  return function() {\r\n    var v = value.apply(this, arguments);\r\n    if (typeof v !== \"function\") throw new Error;\r\n    set(this, id).ease = v;\r\n  };\r\n}\r\n\r\nexport default function(value) {\r\n  if (typeof value !== \"function\") throw new Error;\r\n  return this.each(easeVarying(this._id, value));\r\n}\r\n", "import {matcher} from \"d3-selection\";\r\nimport {Transition} from \"./index.js\";\r\n\r\nexport default function(match) {\r\n  if (typeof match !== \"function\") match = matcher(match);\r\n\r\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\r\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\r\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\r\n        subgroup.push(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  return new Transition(subgroups, this._parents, this._name, this._id);\r\n}\r\n", "import {Transition} from \"./index.js\";\r\n\r\nexport default function(transition) {\r\n  if (transition._id !== this._id) throw new Error;\r\n\r\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\r\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\r\n      if (node = group0[i] || group1[i]) {\r\n        merge[i] = node;\r\n      }\r\n    }\r\n  }\r\n\r\n  for (; j < m0; ++j) {\r\n    merges[j] = groups0[j];\r\n  }\r\n\r\n  return new Transition(merges, this._parents, this._name, this._id);\r\n}\r\n", "import {get, set, init} from \"./schedule.js\";\r\n\r\nfunction start(name) {\r\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\r\n    var i = t.indexOf(\".\");\r\n    if (i >= 0) t = t.slice(0, i);\r\n    return !t || t === \"start\";\r\n  });\r\n}\r\n\r\nfunction onFunction(id, name, listener) {\r\n  var on0, on1, sit = start(name) ? init : set;\r\n  return function() {\r\n    var schedule = sit(this, id),\r\n        on = schedule.on;\r\n\r\n    // If this node shared a dispatch with the previous node,\r\n    // just assign the updated shared dispatch and we’re done!\r\n    // Otherwise, copy-on-write.\r\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\r\n\r\n    schedule.on = on1;\r\n  };\r\n}\r\n\r\nexport default function(name, listener) {\r\n  var id = this._id;\r\n\r\n  return arguments.length < 2\r\n      ? get(this.node(), id).on.on(name)\r\n      : this.each(onFunction(id, name, listener));\r\n}\r\n", "function removeFunction(id) {\r\n  return function() {\r\n    var parent = this.parentNode;\r\n    for (var i in this.__transition) if (+i !== id) return;\r\n    if (parent) parent.removeChild(this);\r\n  };\r\n}\r\n\r\nexport default function() {\r\n  return this.on(\"end.remove\", removeFunction(this._id));\r\n}\r\n", "import {selector} from \"d3-selection\";\r\nimport {Transition} from \"./index.js\";\r\nimport schedule, {get} from \"./schedule.js\";\r\n\r\nexport default function(select) {\r\n  var name = this._name,\r\n      id = this._id;\r\n\r\n  if (typeof select !== \"function\") select = selector(select);\r\n\r\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\r\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\r\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\r\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\r\n        subgroup[i] = subnode;\r\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\r\n      }\r\n    }\r\n  }\r\n\r\n  return new Transition(subgroups, this._parents, name, id);\r\n}\r\n", "import {selectorAll} from \"d3-selection\";\r\nimport {Transition} from \"./index.js\";\r\nimport schedule, {get} from \"./schedule.js\";\r\n\r\nexport default function(select) {\r\n  var name = this._name,\r\n      id = this._id;\r\n\r\n  if (typeof select !== \"function\") select = selectorAll(select);\r\n\r\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\r\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\r\n      if (node = group[i]) {\r\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\r\n          if (child = children[k]) {\r\n            schedule(child, name, id, k, children, inherit);\r\n          }\r\n        }\r\n        subgroups.push(children);\r\n        parents.push(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  return new Transition(subgroups, parents, name, id);\r\n}\r\n", "import {selection} from \"d3-selection\";\r\n\r\nvar Selection = selection.prototype.constructor;\r\n\r\nexport default function() {\r\n  return new Selection(this._groups, this._parents);\r\n}\r\n", "import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\r\nimport {style} from \"d3-selection\";\r\nimport {set} from \"./schedule.js\";\r\nimport {tweenValue} from \"./tween.js\";\r\nimport interpolate from \"./interpolate.js\";\r\n\r\nfunction styleNull(name, interpolate) {\r\n  var string00,\r\n      string10,\r\n      interpolate0;\r\n  return function() {\r\n    var string0 = style(this, name),\r\n        string1 = (this.style.removeProperty(name), style(this, name));\r\n    return string0 === string1 ? null\r\n        : string0 === string00 && string1 === string10 ? interpolate0\r\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\r\n  };\r\n}\r\n\r\nfunction styleRemove(name) {\r\n  return function() {\r\n    this.style.removeProperty(name);\r\n  };\r\n}\r\n\r\nfunction styleConstant(name, interpolate, value1) {\r\n  var string00,\r\n      string1 = value1 + \"\",\r\n      interpolate0;\r\n  return function() {\r\n    var string0 = style(this, name);\r\n    return string0 === string1 ? null\r\n        : string0 === string00 ? interpolate0\r\n        : interpolate0 = interpolate(string00 = string0, value1);\r\n  };\r\n}\r\n\r\nfunction styleFunction(name, interpolate, value) {\r\n  var string00,\r\n      string10,\r\n      interpolate0;\r\n  return function() {\r\n    var string0 = style(this, name),\r\n        value1 = value(this),\r\n        string1 = value1 + \"\";\r\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\r\n    return string0 === string1 ? null\r\n        : string0 === string00 && string1 === string10 ? interpolate0\r\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\r\n  };\r\n}\r\n\r\nfunction styleMaybeRemove(id, name) {\r\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\r\n  return function() {\r\n    var schedule = set(this, id),\r\n        on = schedule.on,\r\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\r\n\r\n    // If this node shared a dispatch with the previous node,\r\n    // just assign the updated shared dispatch and we’re done!\r\n    // Otherwise, copy-on-write.\r\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\r\n\r\n    schedule.on = on1;\r\n  };\r\n}\r\n\r\nexport default function(name, value, priority) {\r\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\r\n  return value == null ? this\r\n      .styleTween(name, styleNull(name, i))\r\n      .on(\"end.style.\" + name, styleRemove(name))\r\n    : typeof value === \"function\" ? this\r\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\r\n      .each(styleMaybeRemove(this._id, name))\r\n    : this\r\n      .styleTween(name, styleConstant(name, i, value), priority)\r\n      .on(\"end.style.\" + name, null);\r\n}\r\n", "function styleInterpolate(name, i, priority) {\r\n  return function(t) {\r\n    this.style.setProperty(name, i.call(this, t), priority);\r\n  };\r\n}\r\n\r\nfunction styleTween(name, value, priority) {\r\n  var t, i0;\r\n  function tween() {\r\n    var i = value.apply(this, arguments);\r\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\r\n    return t;\r\n  }\r\n  tween._value = value;\r\n  return tween;\r\n}\r\n\r\nexport default function(name, value, priority) {\r\n  var key = \"style.\" + (name += \"\");\r\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\r\n  if (value == null) return this.tween(key, null);\r\n  if (typeof value !== \"function\") throw new Error;\r\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\r\n}\r\n", "import {tweenValue} from \"./tween.js\";\r\n\r\nfunction textConstant(value) {\r\n  return function() {\r\n    this.textContent = value;\r\n  };\r\n}\r\n\r\nfunction textFunction(value) {\r\n  return function() {\r\n    var value1 = value(this);\r\n    this.textContent = value1 == null ? \"\" : value1;\r\n  };\r\n}\r\n\r\nexport default function(value) {\r\n  return this.tween(\"text\", typeof value === \"function\"\r\n      ? textFunction(tweenValue(this, \"text\", value))\r\n      : textConstant(value == null ? \"\" : value + \"\"));\r\n}\r\n", "function textInterpolate(i) {\r\n  return function(t) {\r\n    this.textContent = i.call(this, t);\r\n  };\r\n}\r\n\r\nfunction textTween(value) {\r\n  var t0, i0;\r\n  function tween() {\r\n    var i = value.apply(this, arguments);\r\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\r\n    return t0;\r\n  }\r\n  tween._value = value;\r\n  return tween;\r\n}\r\n\r\nexport default function(value) {\r\n  var key = \"text\";\r\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\r\n  if (value == null) return this.tween(key, null);\r\n  if (typeof value !== \"function\") throw new Error;\r\n  return this.tween(key, textTween(value));\r\n}\r\n", "import {Transition, newId} from \"./index.js\";\r\nimport schedule, {get} from \"./schedule.js\";\r\n\r\nexport default function() {\r\n  var name = this._name,\r\n      id0 = this._id,\r\n      id1 = newId();\r\n\r\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\r\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\r\n      if (node = group[i]) {\r\n        var inherit = get(node, id0);\r\n        schedule(node, name, id1, i, group, {\r\n          time: inherit.time + inherit.delay + inherit.duration,\r\n          delay: 0,\r\n          duration: inherit.duration,\r\n          ease: inherit.ease\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return new Transition(groups, this._parents, name, id1);\r\n}\r\n", "import {set} from \"./schedule.js\";\r\n\r\nexport default function() {\r\n  var on0, on1, that = this, id = that._id, size = that.size();\r\n  return new Promise(function(resolve, reject) {\r\n    var cancel = {value: reject},\r\n        end = {value: function() { if (--size === 0) resolve(); }};\r\n\r\n    that.each(function() {\r\n      var schedule = set(this, id),\r\n          on = schedule.on;\r\n\r\n      // If this node shared a dispatch with the previous node,\r\n      // just assign the updated shared dispatch and we’re done!\r\n      // Otherwise, copy-on-write.\r\n      if (on !== on0) {\r\n        on1 = (on0 = on).copy();\r\n        on1._.cancel.push(cancel);\r\n        on1._.interrupt.push(cancel);\r\n        on1._.end.push(end);\r\n      }\r\n\r\n      schedule.on = on1;\r\n    });\r\n\r\n    // The selection was empty, resolve end immediately\r\n    if (size === 0) resolve();\r\n  });\r\n}\r\n", "import {selection} from \"d3-selection\";\r\nimport transition_attr from \"./attr.js\";\r\nimport transition_attrTween from \"./attrTween.js\";\r\nimport transition_delay from \"./delay.js\";\r\nimport transition_duration from \"./duration.js\";\r\nimport transition_ease from \"./ease.js\";\r\nimport transition_easeVarying from \"./easeVarying.js\";\r\nimport transition_filter from \"./filter.js\";\r\nimport transition_merge from \"./merge.js\";\r\nimport transition_on from \"./on.js\";\r\nimport transition_remove from \"./remove.js\";\r\nimport transition_select from \"./select.js\";\r\nimport transition_selectAll from \"./selectAll.js\";\r\nimport transition_selection from \"./selection.js\";\r\nimport transition_style from \"./style.js\";\r\nimport transition_styleTween from \"./styleTween.js\";\r\nimport transition_text from \"./text.js\";\r\nimport transition_textTween from \"./textTween.js\";\r\nimport transition_transition from \"./transition.js\";\r\nimport transition_tween from \"./tween.js\";\r\nimport transition_end from \"./end.js\";\r\n\r\nvar id = 0;\r\n\r\nexport function Transition(groups, parents, name, id) {\r\n  this._groups = groups;\r\n  this._parents = parents;\r\n  this._name = name;\r\n  this._id = id;\r\n}\r\n\r\nexport default function transition(name) {\r\n  return selection().transition(name);\r\n}\r\n\r\nexport function newId() {\r\n  return ++id;\r\n}\r\n\r\nvar selection_prototype = selection.prototype;\r\n\r\nTransition.prototype = transition.prototype = {\r\n  constructor: Transition,\r\n  select: transition_select,\r\n  selectAll: transition_selectAll,\r\n  selectChild: selection_prototype.selectChild,\r\n  selectChildren: selection_prototype.selectChildren,\r\n  filter: transition_filter,\r\n  merge: transition_merge,\r\n  selection: transition_selection,\r\n  transition: transition_transition,\r\n  call: selection_prototype.call,\r\n  nodes: selection_prototype.nodes,\r\n  node: selection_prototype.node,\r\n  size: selection_prototype.size,\r\n  empty: selection_prototype.empty,\r\n  each: selection_prototype.each,\r\n  on: transition_on,\r\n  attr: transition_attr,\r\n  attrTween: transition_attrTween,\r\n  style: transition_style,\r\n  styleTween: transition_styleTween,\r\n  text: transition_text,\r\n  textTween: transition_textTween,\r\n  remove: transition_remove,\r\n  tween: transition_tween,\r\n  delay: transition_delay,\r\n  duration: transition_duration,\r\n  ease: transition_ease,\r\n  easeVarying: transition_easeVarying,\r\n  end: transition_end,\r\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\r\n};\r\n", "export const linear = t => +t;\r\n", "export function quadIn(t) {\r\n  return t * t;\r\n}\r\n\r\nexport function quadOut(t) {\r\n  return t * (2 - t);\r\n}\r\n\r\nexport function quadInOut(t) {\r\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\r\n}\r\n", "export function cubicIn(t) {\r\n  return t * t * t;\r\n}\r\n\r\nexport function cubicOut(t) {\r\n  return --t * t * t + 1;\r\n}\r\n\r\nexport function cubicInOut(t) {\r\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\r\n}\r\n", "var exponent = 3;\r\n\r\nexport var polyIn = (function custom(e) {\r\n  e = +e;\r\n\r\n  function polyIn(t) {\r\n    return Math.pow(t, e);\r\n  }\r\n\r\n  polyIn.exponent = custom;\r\n\r\n  return polyIn;\r\n})(exponent);\r\n\r\nexport var polyOut = (function custom(e) {\r\n  e = +e;\r\n\r\n  function polyOut(t) {\r\n    return 1 - Math.pow(1 - t, e);\r\n  }\r\n\r\n  polyOut.exponent = custom;\r\n\r\n  return polyOut;\r\n})(exponent);\r\n\r\nexport var polyInOut = (function custom(e) {\r\n  e = +e;\r\n\r\n  function polyInOut(t) {\r\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\r\n  }\r\n\r\n  polyInOut.exponent = custom;\r\n\r\n  return polyInOut;\r\n})(exponent);\r\n", "var pi = Math.PI,\r\n    halfPi = pi / 2;\r\n\r\nexport function sinIn(t) {\r\n  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);\r\n}\r\n\r\nexport function sinOut(t) {\r\n  return Math.sin(t * halfPi);\r\n}\r\n\r\nexport function sinInOut(t) {\r\n  return (1 - Math.cos(pi * t)) / 2;\r\n}\r\n", "// tpmt is two power minus ten times t scaled to [0,1]\r\nexport function tpmt(x) {\r\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\r\n}\r\n", "import {tpmt} from \"./math.js\";\r\n\r\nexport function expIn(t) {\r\n  return tpmt(1 - +t);\r\n}\r\n\r\nexport function expOut(t) {\r\n  return 1 - tpmt(t);\r\n}\r\n\r\nexport function expInOut(t) {\r\n  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\r\n}\r\n", "export function circleIn(t) {\r\n  return 1 - Math.sqrt(1 - t * t);\r\n}\r\n\r\nexport function circleOut(t) {\r\n  return Math.sqrt(1 - --t * t);\r\n}\r\n\r\nexport function circleInOut(t) {\r\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\r\n}\r\n", "var b1 = 4 / 11,\r\n    b2 = 6 / 11,\r\n    b3 = 8 / 11,\r\n    b4 = 3 / 4,\r\n    b5 = 9 / 11,\r\n    b6 = 10 / 11,\r\n    b7 = 15 / 16,\r\n    b8 = 21 / 22,\r\n    b9 = 63 / 64,\r\n    b0 = 1 / b1 / b1;\r\n\r\nexport function bounceIn(t) {\r\n  return 1 - bounceOut(1 - t);\r\n}\r\n\r\nexport function bounceOut(t) {\r\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\r\n}\r\n\r\nexport function bounceInOut(t) {\r\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\r\n}\r\n", "var overshoot = 1.70158;\r\n\r\nexport var backIn = (function custom(s) {\r\n  s = +s;\r\n\r\n  function backIn(t) {\r\n    return (t = +t) * t * (s * (t - 1) + t);\r\n  }\r\n\r\n  backIn.overshoot = custom;\r\n\r\n  return backIn;\r\n})(overshoot);\r\n\r\nexport var backOut = (function custom(s) {\r\n  s = +s;\r\n\r\n  function backOut(t) {\r\n    return --t * t * ((t + 1) * s + t) + 1;\r\n  }\r\n\r\n  backOut.overshoot = custom;\r\n\r\n  return backOut;\r\n})(overshoot);\r\n\r\nexport var backInOut = (function custom(s) {\r\n  s = +s;\r\n\r\n  function backInOut(t) {\r\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\r\n  }\r\n\r\n  backInOut.overshoot = custom;\r\n\r\n  return backInOut;\r\n})(overshoot);\r\n", "import {tpmt} from \"./math.js\";\r\n\r\nvar tau = 2 * Math.PI,\r\n    amplitude = 1,\r\n    period = 0.3;\r\n\r\nexport var elasticIn = (function custom(a, p) {\r\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\r\n\r\n  function elasticIn(t) {\r\n    return a * tpmt(-(--t)) * Math.sin((s - t) / p);\r\n  }\r\n\r\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\r\n  elasticIn.period = function(p) { return custom(a, p); };\r\n\r\n  return elasticIn;\r\n})(amplitude, period);\r\n\r\nexport var elasticOut = (function custom(a, p) {\r\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\r\n\r\n  function elasticOut(t) {\r\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\r\n  }\r\n\r\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\r\n  elasticOut.period = function(p) { return custom(a, p); };\r\n\r\n  return elasticOut;\r\n})(amplitude, period);\r\n\r\nexport var elasticInOut = (function custom(a, p) {\r\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\r\n\r\n  function elasticInOut(t) {\r\n    return ((t = t * 2 - 1) < 0\r\n        ? a * tpmt(-t) * Math.sin((s - t) / p)\r\n        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\r\n  }\r\n\r\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\r\n  elasticInOut.period = function(p) { return custom(a, p); };\r\n\r\n  return elasticInOut;\r\n})(amplitude, period);\r\n", "import {Transition, newId} from \"../transition/index.js\";\r\nimport schedule from \"../transition/schedule.js\";\r\nimport {easeCubicInOut} from \"d3-ease\";\r\nimport {now} from \"d3-timer\";\r\n\r\nvar defaultTiming = {\r\n  time: null, // Set on use.\r\n  delay: 0,\r\n  duration: 250,\r\n  ease: easeCubicInOut\r\n};\r\n\r\nfunction inherit(node, id) {\r\n  var timing;\r\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\r\n    if (!(node = node.parentNode)) {\r\n      throw new Error(`transition ${id} not found`);\r\n    }\r\n  }\r\n  return timing;\r\n}\r\n\r\nexport default function(name) {\r\n  var id,\r\n      timing;\r\n\r\n  if (name instanceof Transition) {\r\n    id = name._id, name = name._name;\r\n  } else {\r\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\r\n  }\r\n\r\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\r\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\r\n      if (node = group[i]) {\r\n        schedule(node, name, id, i, group, timing || inherit(node, id));\r\n      }\r\n    }\r\n  }\r\n\r\n  return new Transition(groups, this._parents, name, id);\r\n}\r\n", "import {selection} from \"d3-selection\";\r\nimport selection_interrupt from \"./interrupt.js\";\r\nimport selection_transition from \"./transition.js\";\r\n\r\nselection.prototype.interrupt = selection_interrupt;\r\nselection.prototype.transition = selection_transition;\r\n", "import {Transition} from \"./transition/index.js\";\r\nimport {SCHEDULED} from \"./transition/schedule.js\";\r\n\r\nvar root = [null];\r\n\r\nexport default function(node, name) {\r\n  var schedules = node.__transition,\r\n      schedule,\r\n      i;\r\n\r\n  if (schedules) {\r\n    name = name == null ? null : name + \"\";\r\n    for (i in schedules) {\r\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\r\n        return new Transition([[node]], root, name, +i);\r\n      }\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n", "export default x => () => x;\r\n", "export default function BrushEvent(type, {\r\n  sourceEvent,\r\n  target,\r\n  selection,\r\n  mode,\r\n  dispatch\r\n}) {\r\n  Object.defineProperties(this, {\r\n    type: {value: type, enumerable: true, configurable: true},\r\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\r\n    target: {value: target, enumerable: true, configurable: true},\r\n    selection: {value: selection, enumerable: true, configurable: true},\r\n    mode: {value: mode, enumerable: true, configurable: true},\r\n    _: {value: dispatch}\r\n  });\r\n}\r\n", "export function nopropagation(event) {\r\n  event.stopImmediatePropagation();\r\n}\r\n\r\nexport default function(event) {\r\n  event.preventDefault();\r\n  event.stopImmediatePropagation();\r\n}\r\n", "import {dispatch} from \"d3-dispatch\";\r\nimport {dragDisable, dragEnable} from \"d3-drag\";\r\nimport {interpolate} from \"d3-interpolate\";\r\nimport {pointer, select} from \"d3-selection\";\r\nimport {interrupt} from \"d3-transition\";\r\nimport constant from \"./constant.js\";\r\nimport BrushEvent from \"./event.js\";\r\nimport noevent, {nopropagation} from \"./noevent.js\";\r\n\r\nvar MODE_DRAG = {name: \"drag\"},\r\n    MODE_SPACE = {name: \"space\"},\r\n    MODE_HANDLE = {name: \"handle\"},\r\n    MODE_CENTER = {name: \"center\"};\r\n\r\nconst {abs, max, min} = Math;\r\n\r\nfunction number1(e) {\r\n  return [+e[0], +e[1]];\r\n}\r\n\r\nfunction number2(e) {\r\n  return [number1(e[0]), number1(e[1])];\r\n}\r\n\r\nvar X = {\r\n  name: \"x\",\r\n  handles: [\"w\", \"e\"].map(type),\r\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\r\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\r\n};\r\n\r\nvar Y = {\r\n  name: \"y\",\r\n  handles: [\"n\", \"s\"].map(type),\r\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\r\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\r\n};\r\n\r\nvar XY = {\r\n  name: \"xy\",\r\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\r\n  input: function(xy) { return xy == null ? null : number2(xy); },\r\n  output: function(xy) { return xy; }\r\n};\r\n\r\nvar cursors = {\r\n  overlay: \"crosshair\",\r\n  selection: \"move\",\r\n  n: \"ns-resize\",\r\n  e: \"ew-resize\",\r\n  s: \"ns-resize\",\r\n  w: \"ew-resize\",\r\n  nw: \"nwse-resize\",\r\n  ne: \"nesw-resize\",\r\n  se: \"nwse-resize\",\r\n  sw: \"nesw-resize\"\r\n};\r\n\r\nvar flipX = {\r\n  e: \"w\",\r\n  w: \"e\",\r\n  nw: \"ne\",\r\n  ne: \"nw\",\r\n  se: \"sw\",\r\n  sw: \"se\"\r\n};\r\n\r\nvar flipY = {\r\n  n: \"s\",\r\n  s: \"n\",\r\n  nw: \"sw\",\r\n  ne: \"se\",\r\n  se: \"ne\",\r\n  sw: \"nw\"\r\n};\r\n\r\nvar signsX = {\r\n  overlay: +1,\r\n  selection: +1,\r\n  n: null,\r\n  e: +1,\r\n  s: null,\r\n  w: -1,\r\n  nw: -1,\r\n  ne: +1,\r\n  se: +1,\r\n  sw: -1\r\n};\r\n\r\nvar signsY = {\r\n  overlay: +1,\r\n  selection: +1,\r\n  n: -1,\r\n  e: null,\r\n  s: +1,\r\n  w: null,\r\n  nw: -1,\r\n  ne: -1,\r\n  se: +1,\r\n  sw: +1\r\n};\r\n\r\nfunction type(t) {\r\n  return {type: t};\r\n}\r\n\r\n// Ignore right-click, since that should open the context menu.\r\nfunction defaultFilter(event) {\r\n  return !event.ctrlKey && !event.button;\r\n}\r\n\r\nfunction defaultExtent() {\r\n  var svg = this.ownerSVGElement || this;\r\n  if (svg.hasAttribute(\"viewBox\")) {\r\n    svg = svg.viewBox.baseVal;\r\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\r\n  }\r\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\r\n}\r\n\r\nfunction defaultTouchable() {\r\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\r\n}\r\n\r\n// Like d3.local, but with the name “__brush” rather than auto-generated.\r\nfunction local(node) {\r\n  while (!node.__brush) if (!(node = node.parentNode)) return;\r\n  return node.__brush;\r\n}\r\n\r\nfunction empty(extent) {\r\n  return extent[0][0] === extent[1][0]\r\n      || extent[0][1] === extent[1][1];\r\n}\r\n\r\nexport function brushSelection(node) {\r\n  var state = node.__brush;\r\n  return state ? state.dim.output(state.selection) : null;\r\n}\r\n\r\nexport function brushX() {\r\n  return brush(X);\r\n}\r\n\r\nexport function brushY() {\r\n  return brush(Y);\r\n}\r\n\r\nexport default function() {\r\n  return brush(XY);\r\n}\r\n\r\nfunction brush(dim) {\r\n  var extent = defaultExtent,\r\n      filter = defaultFilter,\r\n      touchable = defaultTouchable,\r\n      keys = true,\r\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\r\n      handleSize = 6,\r\n      touchending;\r\n\r\n  function brush(group) {\r\n    var overlay = group\r\n        .property(\"__brush\", initialize)\r\n      .selectAll(\".overlay\")\r\n      .data([type(\"overlay\")]);\r\n\r\n    overlay.enter().append(\"rect\")\r\n        .attr(\"class\", \"overlay\")\r\n        .attr(\"pointer-events\", \"all\")\r\n        .attr(\"cursor\", cursors.overlay)\r\n      .merge(overlay)\r\n        .each(function() {\r\n          var extent = local(this).extent;\r\n          select(this)\r\n              .attr(\"x\", extent[0][0])\r\n              .attr(\"y\", extent[0][1])\r\n              .attr(\"width\", extent[1][0] - extent[0][0])\r\n              .attr(\"height\", extent[1][1] - extent[0][1]);\r\n        });\r\n\r\n    group.selectAll(\".selection\")\r\n      .data([type(\"selection\")])\r\n      .enter().append(\"rect\")\r\n        .attr(\"class\", \"selection\")\r\n        .attr(\"cursor\", cursors.selection)\r\n        .attr(\"fill\", \"#777\")\r\n        .attr(\"fill-opacity\", 0.3)\r\n        .attr(\"stroke\", \"#fff\")\r\n        .attr(\"shape-rendering\", \"crispEdges\");\r\n\r\n    var handle = group.selectAll(\".handle\")\r\n      .data(dim.handles, function(d) { return d.type; });\r\n\r\n    handle.exit().remove();\r\n\r\n    handle.enter().append(\"rect\")\r\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\r\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\r\n\r\n    group\r\n        .each(redraw)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"pointer-events\", \"all\")\r\n        .on(\"mousedown.brush\", started)\r\n      .filter(touchable)\r\n        .on(\"touchstart.brush\", started)\r\n        .on(\"touchmove.brush\", touchmoved)\r\n        .on(\"touchend.brush touchcancel.brush\", touchended)\r\n        .style(\"touch-action\", \"none\")\r\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\r\n  }\r\n\r\n  brush.move = function(group, selection, event) {\r\n    if (group.tween) {\r\n      group\r\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\r\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\r\n          .tween(\"brush\", function() {\r\n            var that = this,\r\n                state = that.__brush,\r\n                emit = emitter(that, arguments),\r\n                selection0 = state.selection,\r\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\r\n                i = interpolate(selection0, selection1);\r\n\r\n            function tween(t) {\r\n              state.selection = t === 1 && selection1 === null ? null : i(t);\r\n              redraw.call(that);\r\n              emit.brush();\r\n            }\r\n\r\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\r\n          });\r\n    } else {\r\n      group\r\n          .each(function() {\r\n            var that = this,\r\n                args = arguments,\r\n                state = that.__brush,\r\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\r\n                emit = emitter(that, args).beforestart();\r\n\r\n            interrupt(that);\r\n            state.selection = selection1 === null ? null : selection1;\r\n            redraw.call(that);\r\n            emit.start(event).brush(event).end(event);\r\n          });\r\n    }\r\n  };\r\n\r\n  brush.clear = function(group, event) {\r\n    brush.move(group, null, event);\r\n  };\r\n\r\n  function redraw() {\r\n    var group = select(this),\r\n        selection = local(this).selection;\r\n\r\n    if (selection) {\r\n      group.selectAll(\".selection\")\r\n          .style(\"display\", null)\r\n          .attr(\"x\", selection[0][0])\r\n          .attr(\"y\", selection[0][1])\r\n          .attr(\"width\", selection[1][0] - selection[0][0])\r\n          .attr(\"height\", selection[1][1] - selection[0][1]);\r\n\r\n      group.selectAll(\".handle\")\r\n          .style(\"display\", null)\r\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\r\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\r\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\r\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\r\n    }\r\n\r\n    else {\r\n      group.selectAll(\".selection,.handle\")\r\n          .style(\"display\", \"none\")\r\n          .attr(\"x\", null)\r\n          .attr(\"y\", null)\r\n          .attr(\"width\", null)\r\n          .attr(\"height\", null);\r\n    }\r\n  }\r\n\r\n  function emitter(that, args, clean) {\r\n    var emit = that.__brush.emitter;\r\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\r\n  }\r\n\r\n  function Emitter(that, args, clean) {\r\n    this.that = that;\r\n    this.args = args;\r\n    this.state = that.__brush;\r\n    this.active = 0;\r\n    this.clean = clean;\r\n  }\r\n\r\n  Emitter.prototype = {\r\n    beforestart: function() {\r\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\r\n      return this;\r\n    },\r\n    start: function(event, mode) {\r\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\r\n      else this.emit(\"brush\", event);\r\n      return this;\r\n    },\r\n    brush: function(event, mode) {\r\n      this.emit(\"brush\", event, mode);\r\n      return this;\r\n    },\r\n    end: function(event, mode) {\r\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\r\n      return this;\r\n    },\r\n    emit: function(type, event, mode) {\r\n      var d = select(this.that).datum();\r\n      listeners.call(\r\n        type,\r\n        this.that,\r\n        new BrushEvent(type, {\r\n          sourceEvent: event,\r\n          target: brush,\r\n          selection: dim.output(this.state.selection),\r\n          mode,\r\n          dispatch: listeners\r\n        }),\r\n        d\r\n      );\r\n    }\r\n  };\r\n\r\n  function started(event) {\r\n    if (touchending && !event.touches) return;\r\n    if (!filter.apply(this, arguments)) return;\r\n\r\n    var that = this,\r\n        type = event.target.__data__.type,\r\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\r\n        signX = dim === Y ? null : signsX[type],\r\n        signY = dim === X ? null : signsY[type],\r\n        state = local(that),\r\n        extent = state.extent,\r\n        selection = state.selection,\r\n        W = extent[0][0], w0, w1,\r\n        N = extent[0][1], n0, n1,\r\n        E = extent[1][0], e0, e1,\r\n        S = extent[1][1], s0, s1,\r\n        dx = 0,\r\n        dy = 0,\r\n        moving,\r\n        shifting = signX && signY && keys && event.shiftKey,\r\n        lockX,\r\n        lockY,\r\n        points = Array.from(event.touches || [event], t => {\r\n          const i = t.identifier;\r\n          t = pointer(t, that);\r\n          t.point0 = t.slice();\r\n          t.identifier = i;\r\n          return t;\r\n        });\r\n\r\n    interrupt(that);\r\n    var emit = emitter(that, arguments, true).beforestart();\r\n\r\n    if (type === \"overlay\") {\r\n      if (selection) moving = true;\r\n      const pts = [points[0], points[1] || points[0]];\r\n      state.selection = selection = [[\r\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\r\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\r\n        ], [\r\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\r\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\r\n        ]];\r\n      if (points.length > 1) move(event);\r\n    } else {\r\n      w0 = selection[0][0];\r\n      n0 = selection[0][1];\r\n      e0 = selection[1][0];\r\n      s0 = selection[1][1];\r\n    }\r\n\r\n    w1 = w0;\r\n    n1 = n0;\r\n    e1 = e0;\r\n    s1 = s0;\r\n\r\n    var group = select(that)\r\n        .attr(\"pointer-events\", \"none\");\r\n\r\n    var overlay = group.selectAll(\".overlay\")\r\n        .attr(\"cursor\", cursors[type]);\r\n\r\n    if (event.touches) {\r\n      emit.moved = moved;\r\n      emit.ended = ended;\r\n    } else {\r\n      var view = select(event.view)\r\n          .on(\"mousemove.brush\", moved, true)\r\n          .on(\"mouseup.brush\", ended, true);\r\n      if (keys) view\r\n          .on(\"keydown.brush\", keydowned, true)\r\n          .on(\"keyup.brush\", keyupped, true)\r\n\r\n      dragDisable(event.view);\r\n    }\r\n\r\n    redraw.call(that);\r\n    emit.start(event, mode.name);\r\n\r\n    function moved(event) {\r\n      for (const p of event.changedTouches || [event]) {\r\n        for (const d of points)\r\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\r\n      }\r\n      if (shifting && !lockX && !lockY && points.length === 1) {\r\n        const point = points[0];\r\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\r\n          lockY = true;\r\n        else\r\n          lockX = true;\r\n      }\r\n      for (const point of points)\r\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\r\n      moving = true;\r\n      noevent(event);\r\n      move(event);\r\n    }\r\n\r\n    function move(event) {\r\n      const point = points[0], point0 = point.point0;\r\n      var t;\r\n\r\n      dx = point[0] - point0[0];\r\n      dy = point[1] - point0[1];\r\n\r\n      switch (mode) {\r\n        case MODE_SPACE:\r\n        case MODE_DRAG: {\r\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\r\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\r\n          break;\r\n        }\r\n        case MODE_HANDLE: {\r\n          if (points[1]) {\r\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\r\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\r\n          } else {\r\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\r\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\r\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\r\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\r\n          }\r\n          break;\r\n        }\r\n        case MODE_CENTER: {\r\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\r\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (e1 < w1) {\r\n        signX *= -1;\r\n        t = w0, w0 = e0, e0 = t;\r\n        t = w1, w1 = e1, e1 = t;\r\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\r\n      }\r\n\r\n      if (s1 < n1) {\r\n        signY *= -1;\r\n        t = n0, n0 = s0, s0 = t;\r\n        t = n1, n1 = s1, s1 = t;\r\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\r\n      }\r\n\r\n      if (state.selection) selection = state.selection; // May be set by brush.move!\r\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\r\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\r\n\r\n      if (selection[0][0] !== w1\r\n          || selection[0][1] !== n1\r\n          || selection[1][0] !== e1\r\n          || selection[1][1] !== s1) {\r\n        state.selection = [[w1, n1], [e1, s1]];\r\n        redraw.call(that);\r\n        emit.brush(event, mode.name);\r\n      }\r\n    }\r\n\r\n    function ended(event) {\r\n      nopropagation(event);\r\n      if (event.touches) {\r\n        if (event.touches.length) return;\r\n        if (touchending) clearTimeout(touchending);\r\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\r\n      } else {\r\n        dragEnable(event.view, moving);\r\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\r\n      }\r\n      group.attr(\"pointer-events\", \"all\");\r\n      overlay.attr(\"cursor\", cursors.overlay);\r\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\r\n      if (empty(selection)) state.selection = null, redraw.call(that);\r\n      emit.end(event, mode.name);\r\n    }\r\n\r\n    function keydowned(event) {\r\n      switch (event.keyCode) {\r\n        case 16: { // SHIFT\r\n          shifting = signX && signY;\r\n          break;\r\n        }\r\n        case 18: { // ALT\r\n          if (mode === MODE_HANDLE) {\r\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\r\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\r\n            mode = MODE_CENTER;\r\n            move(event);\r\n          }\r\n          break;\r\n        }\r\n        case 32: { // SPACE; takes priority over ALT\r\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\r\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\r\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\r\n            mode = MODE_SPACE;\r\n            overlay.attr(\"cursor\", cursors.selection);\r\n            move(event);\r\n          }\r\n          break;\r\n        }\r\n        default: return;\r\n      }\r\n      noevent(event);\r\n    }\r\n\r\n    function keyupped(event) {\r\n      switch (event.keyCode) {\r\n        case 16: { // SHIFT\r\n          if (shifting) {\r\n            lockX = lockY = shifting = false;\r\n            move(event);\r\n          }\r\n          break;\r\n        }\r\n        case 18: { // ALT\r\n          if (mode === MODE_CENTER) {\r\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\r\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\r\n            mode = MODE_HANDLE;\r\n            move(event);\r\n          }\r\n          break;\r\n        }\r\n        case 32: { // SPACE\r\n          if (mode === MODE_SPACE) {\r\n            if (event.altKey) {\r\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\r\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\r\n              mode = MODE_CENTER;\r\n            } else {\r\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\r\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\r\n              mode = MODE_HANDLE;\r\n            }\r\n            overlay.attr(\"cursor\", cursors[type]);\r\n            move(event);\r\n          }\r\n          break;\r\n        }\r\n        default: return;\r\n      }\r\n      noevent(event);\r\n    }\r\n  }\r\n\r\n  function touchmoved(event) {\r\n    emitter(this, arguments).moved(event);\r\n  }\r\n\r\n  function touchended(event) {\r\n    emitter(this, arguments).ended(event);\r\n  }\r\n\r\n  function initialize() {\r\n    var state = this.__brush || {selection: null};\r\n    state.extent = number2(extent.apply(this, arguments));\r\n    state.dim = dim;\r\n    return state;\r\n  }\r\n\r\n  brush.extent = function(_) {\r\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\r\n  };\r\n\r\n  brush.filter = function(_) {\r\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\r\n  };\r\n\r\n  brush.touchable = function(_) {\r\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\r\n  };\r\n\r\n  brush.handleSize = function(_) {\r\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\r\n  };\r\n\r\n  brush.keyModifiers = function(_) {\r\n    return arguments.length ? (keys = !!_, brush) : keys;\r\n  };\r\n\r\n  brush.on = function() {\r\n    var value = listeners.on.apply(listeners, arguments);\r\n    return value === listeners ? brush : value;\r\n  };\r\n\r\n  return brush;\r\n}\r\n", "export var abs = Math.abs;\r\nexport var cos = Math.cos;\r\nexport var sin = Math.sin;\r\nexport var pi = Math.PI;\r\nexport var halfPi = pi / 2;\r\nexport var tau = pi * 2;\r\nexport var max = Math.max;\r\nexport var epsilon = 1e-12;\r\n", "import {max, tau} from \"./math.js\";\r\n\r\nfunction range(i, j) {\r\n  return Array.from({length: j - i}, (_, k) => i + k);\r\n}\r\n\r\nfunction compareValue(compare) {\r\n  return function(a, b) {\r\n    return compare(\r\n      a.source.value + a.target.value,\r\n      b.source.value + b.target.value\r\n    );\r\n  };\r\n}\r\n\r\nexport default function() {\r\n  return chord(false, false);\r\n}\r\n\r\nexport function chordTranspose() {\r\n  return chord(false, true);\r\n}\r\n\r\nexport function chordDirected() {\r\n  return chord(true, false);\r\n}\r\n\r\nfunction chord(directed, transpose) {\r\n  var padAngle = 0,\r\n      sortGroups = null,\r\n      sortSubgroups = null,\r\n      sortChords = null;\r\n\r\n  function chord(matrix) {\r\n    var n = matrix.length,\r\n        groupSums = new Array(n),\r\n        groupIndex = range(0, n),\r\n        chords = new Array(n * n),\r\n        groups = new Array(n),\r\n        k = 0, dx;\r\n\r\n    matrix = Float64Array.from({length: n * n}, transpose\r\n        ? (_, i) => matrix[i % n][i / n | 0]\r\n        : (_, i) => matrix[i / n | 0][i % n]);\r\n\r\n    // Compute the scaling factor from value to angle in [0, 2pi].\r\n    for (let i = 0; i < n; ++i) {\r\n      let x = 0;\r\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\r\n      k += groupSums[i] = x;\r\n    }\r\n    k = max(0, tau - padAngle * n) / k;\r\n    dx = k ? padAngle : tau / n;\r\n\r\n    // Compute the angles for each group and constituent chord.\r\n    {\r\n      let x = 0;\r\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\r\n      for (const i of groupIndex) {\r\n        const x0 = x;\r\n        if (directed) {\r\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\r\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\r\n          for (const j of subgroupIndex) {\r\n            if (j < 0) {\r\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\r\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\r\n            } else {\r\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\r\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\r\n            }\r\n          }\r\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\r\n        } else {\r\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\r\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\r\n          for (const j of subgroupIndex) {\r\n            let chord;\r\n            if (i < j) {\r\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\r\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\r\n            } else {\r\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\r\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\r\n              if (i === j) chord.source = chord.target;\r\n            }\r\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\r\n              const source = chord.source;\r\n              chord.source = chord.target;\r\n              chord.target = source;\r\n            }\r\n          }\r\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\r\n        }\r\n        x += dx;\r\n      }\r\n    }\r\n\r\n    // Remove empty chords.\r\n    chords = Object.values(chords);\r\n    chords.groups = groups;\r\n    return sortChords ? chords.sort(sortChords) : chords;\r\n  }\r\n\r\n  chord.padAngle = function(_) {\r\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\r\n  };\r\n\r\n  chord.sortGroups = function(_) {\r\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\r\n  };\r\n\r\n  chord.sortSubgroups = function(_) {\r\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\r\n  };\r\n\r\n  chord.sortChords = function(_) {\r\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\r\n  };\r\n\r\n  return chord;\r\n}\r\n", "const pi = Math.PI,\r\n    tau = 2 * pi,\r\n    epsilon = 1e-6,\r\n    tauEpsilon = tau - epsilon;\r\n\r\nfunction append(strings) {\r\n  this._ += strings[0];\r\n  for (let i = 1, n = strings.length; i < n; ++i) {\r\n    this._ += arguments[i] + strings[i];\r\n  }\r\n}\r\n\r\nfunction appendRound(digits) {\r\n  let d = Math.floor(digits);\r\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\r\n  if (d > 15) return append;\r\n  const k = 10 ** d;\r\n  return function(strings) {\r\n    this._ += strings[0];\r\n    for (let i = 1, n = strings.length; i < n; ++i) {\r\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\r\n    }\r\n  };\r\n}\r\n\r\nexport class Path {\r\n  constructor(digits) {\r\n    this._x0 = this._y0 = // start of current subpath\r\n    this._x1 = this._y1 = null; // end of current subpath\r\n    this._ = \"\";\r\n    this._append = digits == null ? append : appendRound(digits);\r\n  }\r\n  moveTo(x, y) {\r\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\r\n  }\r\n  closePath() {\r\n    if (this._x1 !== null) {\r\n      this._x1 = this._x0, this._y1 = this._y0;\r\n      this._append`Z`;\r\n    }\r\n  }\r\n  lineTo(x, y) {\r\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\r\n  }\r\n  quadraticCurveTo(x1, y1, x, y) {\r\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\r\n  }\r\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\r\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\r\n  }\r\n  arcTo(x1, y1, x2, y2, r) {\r\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\r\n\r\n    // Is the radius negative? Error.\r\n    if (r < 0) throw new Error(`negative radius: ${r}`);\r\n\r\n    let x0 = this._x1,\r\n        y0 = this._y1,\r\n        x21 = x2 - x1,\r\n        y21 = y2 - y1,\r\n        x01 = x0 - x1,\r\n        y01 = y0 - y1,\r\n        l01_2 = x01 * x01 + y01 * y01;\r\n\r\n    // Is this path empty? Move to (x1,y1).\r\n    if (this._x1 === null) {\r\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\r\n    }\r\n\r\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\r\n    else if (!(l01_2 > epsilon));\r\n\r\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\r\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\r\n    // Or, is the radius zero? Line to (x1,y1).\r\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\r\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\r\n    }\r\n\r\n    // Otherwise, draw an arc!\r\n    else {\r\n      let x20 = x2 - x0,\r\n          y20 = y2 - y0,\r\n          l21_2 = x21 * x21 + y21 * y21,\r\n          l20_2 = x20 * x20 + y20 * y20,\r\n          l21 = Math.sqrt(l21_2),\r\n          l01 = Math.sqrt(l01_2),\r\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\r\n          t01 = l / l01,\r\n          t21 = l / l21;\r\n\r\n      // If the start tangent is not coincident with (x0,y0), line to.\r\n      if (Math.abs(t01 - 1) > epsilon) {\r\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\r\n      }\r\n\r\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\r\n    }\r\n  }\r\n  arc(x, y, r, a0, a1, ccw) {\r\n    x = +x, y = +y, r = +r, ccw = !!ccw;\r\n\r\n    // Is the radius negative? Error.\r\n    if (r < 0) throw new Error(`negative radius: ${r}`);\r\n\r\n    let dx = r * Math.cos(a0),\r\n        dy = r * Math.sin(a0),\r\n        x0 = x + dx,\r\n        y0 = y + dy,\r\n        cw = 1 ^ ccw,\r\n        da = ccw ? a0 - a1 : a1 - a0;\r\n\r\n    // Is this path empty? Move to (x0,y0).\r\n    if (this._x1 === null) {\r\n      this._append`M${x0},${y0}`;\r\n    }\r\n\r\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\r\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\r\n      this._append`L${x0},${y0}`;\r\n    }\r\n\r\n    // Is this arc empty? We’re done.\r\n    if (!r) return;\r\n\r\n    // Does the angle go the wrong way? Flip the direction.\r\n    if (da < 0) da = da % tau + tau;\r\n\r\n    // Is this a complete circle? Draw two arcs to complete the circle.\r\n    if (da > tauEpsilon) {\r\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\r\n    }\r\n\r\n    // Is this arc non-empty? Draw an arc!\r\n    else if (da > epsilon) {\r\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\r\n    }\r\n  }\r\n  rect(x, y, w, h) {\r\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\r\n  }\r\n  toString() {\r\n    return this._;\r\n  }\r\n}\r\n\r\nexport function path() {\r\n  return new Path;\r\n}\r\n\r\n// Allow instanceof d3.path\r\npath.prototype = Path.prototype;\r\n\r\nexport function pathRound(digits = 3) {\r\n  return new Path(+digits);\r\n}\r\n", "export var slice = Array.prototype.slice;\r\n", "export default function(x) {\r\n  return function() {\r\n    return x;\r\n  };\r\n}\r\n", "import {path} from \"d3-path\";\r\nimport {slice} from \"./array.js\";\r\nimport constant from \"./constant.js\";\r\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\r\n\r\nfunction defaultSource(d) {\r\n  return d.source;\r\n}\r\n\r\nfunction defaultTarget(d) {\r\n  return d.target;\r\n}\r\n\r\nfunction defaultRadius(d) {\r\n  return d.radius;\r\n}\r\n\r\nfunction defaultStartAngle(d) {\r\n  return d.startAngle;\r\n}\r\n\r\nfunction defaultEndAngle(d) {\r\n  return d.endAngle;\r\n}\r\n\r\nfunction defaultPadAngle() {\r\n  return 0;\r\n}\r\n\r\nfunction defaultArrowheadRadius() {\r\n  return 10;\r\n}\r\n\r\nfunction ribbon(headRadius) {\r\n  var source = defaultSource,\r\n      target = defaultTarget,\r\n      sourceRadius = defaultRadius,\r\n      targetRadius = defaultRadius,\r\n      startAngle = defaultStartAngle,\r\n      endAngle = defaultEndAngle,\r\n      padAngle = defaultPadAngle,\r\n      context = null;\r\n\r\n  function ribbon() {\r\n    var buffer,\r\n        s = source.apply(this, arguments),\r\n        t = target.apply(this, arguments),\r\n        ap = padAngle.apply(this, arguments) / 2,\r\n        argv = slice.call(arguments),\r\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\r\n        sa0 = startAngle.apply(this, argv) - halfPi,\r\n        sa1 = endAngle.apply(this, argv) - halfPi,\r\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\r\n        ta0 = startAngle.apply(this, argv) - halfPi,\r\n        ta1 = endAngle.apply(this, argv) - halfPi;\r\n\r\n    if (!context) context = buffer = path();\r\n\r\n    if (ap > epsilon) {\r\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\r\n      else sa0 = sa1 = (sa0 + sa1) / 2;\r\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\r\n      else ta0 = ta1 = (ta0 + ta1) / 2;\r\n    }\r\n\r\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\r\n    context.arc(0, 0, sr, sa0, sa1);\r\n    if (sa0 !== ta0 || sa1 !== ta1) {\r\n      if (headRadius) {\r\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\r\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\r\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\r\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\r\n      } else {\r\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\r\n        context.arc(0, 0, tr, ta0, ta1);\r\n      }\r\n    }\r\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\r\n    context.closePath();\r\n\r\n    if (buffer) return context = null, buffer + \"\" || null;\r\n  }\r\n\r\n  if (headRadius) ribbon.headRadius = function(_) {\r\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\r\n  };\r\n\r\n  ribbon.radius = function(_) {\r\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\r\n  };\r\n\r\n  ribbon.sourceRadius = function(_) {\r\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\r\n  };\r\n\r\n  ribbon.targetRadius = function(_) {\r\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\r\n  };\r\n\r\n  ribbon.startAngle = function(_) {\r\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\r\n  };\r\n\r\n  ribbon.endAngle = function(_) {\r\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\r\n  };\r\n\r\n  ribbon.padAngle = function(_) {\r\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\r\n  };\r\n\r\n  ribbon.source = function(_) {\r\n    return arguments.length ? (source = _, ribbon) : source;\r\n  };\r\n\r\n  ribbon.target = function(_) {\r\n    return arguments.length ? (target = _, ribbon) : target;\r\n  };\r\n\r\n  ribbon.context = function(_) {\r\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\r\n  };\r\n\r\n  return ribbon;\r\n}\r\n\r\nexport default function() {\r\n  return ribbon();\r\n}\r\n\r\nexport function ribbonArrow() {\r\n  return ribbon(defaultArrowheadRadius);\r\n}\r\n", "var array = Array.prototype;\r\n\r\nexport var slice = array.slice;\r\n", "export default function(a, b) {\r\n  return a - b;\r\n}\r\n", "export default function(ring) {\r\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\r\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\r\n  return area;\r\n}\r\n", "export default x => () => x;\r\n", "export default function(ring, hole) {\r\n  var i = -1, n = hole.length, c;\r\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\r\n  return 0;\r\n}\r\n\r\nfunction ringContains(ring, point) {\r\n  var x = point[0], y = point[1], contains = -1;\r\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\r\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\r\n    if (segmentContains(pi, pj, point)) return 0;\r\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\r\n  }\r\n  return contains;\r\n}\r\n\r\nfunction segmentContains(a, b, c) {\r\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\r\n}\r\n\r\nfunction collinear(a, b, c) {\r\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\r\n}\r\n\r\nfunction within(p, q, r) {\r\n  return p <= q && q <= r || r <= q && q <= p;\r\n}\r\n", "export default function() {}\r\n", "import {extent, nice, thresholdSturges, ticks} from \"d3-array\";\r\nimport {slice} from \"./array.js\";\r\nimport ascending from \"./ascending.js\";\r\nimport area from \"./area.js\";\r\nimport constant from \"./constant.js\";\r\nimport contains from \"./contains.js\";\r\nimport noop from \"./noop.js\";\r\n\r\nvar cases = [\r\n  [],\r\n  [[[1.0, 1.5], [0.5, 1.0]]],\r\n  [[[1.5, 1.0], [1.0, 1.5]]],\r\n  [[[1.5, 1.0], [0.5, 1.0]]],\r\n  [[[1.0, 0.5], [1.5, 1.0]]],\r\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\r\n  [[[1.0, 0.5], [1.0, 1.5]]],\r\n  [[[1.0, 0.5], [0.5, 1.0]]],\r\n  [[[0.5, 1.0], [1.0, 0.5]]],\r\n  [[[1.0, 1.5], [1.0, 0.5]]],\r\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\r\n  [[[1.5, 1.0], [1.0, 0.5]]],\r\n  [[[0.5, 1.0], [1.5, 1.0]]],\r\n  [[[1.0, 1.5], [1.5, 1.0]]],\r\n  [[[0.5, 1.0], [1.0, 1.5]]],\r\n  []\r\n];\r\n\r\nexport default function() {\r\n  var dx = 1,\r\n      dy = 1,\r\n      threshold = thresholdSturges,\r\n      smooth = smoothLinear;\r\n\r\n  function contours(values) {\r\n    var tz = threshold(values);\r\n\r\n    // Convert number of thresholds into uniform thresholds.\r\n    if (!Array.isArray(tz)) {\r\n      const e = extent(values, finite);\r\n      tz = ticks(...nice(e[0], e[1], tz), tz);\r\n      while (tz[tz.length - 1] >= e[1]) tz.pop();\r\n      while (tz[1] < e[0]) tz.shift();\r\n    } else {\r\n      tz = tz.slice().sort(ascending);\r\n    }\r\n\r\n    return tz.map(value => contour(values, value));\r\n  }\r\n\r\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\r\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\r\n  function contour(values, value) {\r\n    const v = value == null ? NaN : +value;\r\n    if (isNaN(v)) throw new Error(`invalid value: ${value}`);\r\n\r\n    var polygons = [],\r\n        holes = [];\r\n\r\n    isorings(values, v, function(ring) {\r\n      smooth(ring, values, v);\r\n      if (area(ring) > 0) polygons.push([ring]);\r\n      else holes.push(ring);\r\n    });\r\n\r\n    holes.forEach(function(hole) {\r\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\r\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\r\n          polygon.push(hole);\r\n          return;\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      type: \"MultiPolygon\",\r\n      value: value,\r\n      coordinates: polygons\r\n    };\r\n  }\r\n\r\n  // Marching squares with isolines stitched into rings.\r\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\r\n  function isorings(values, value, callback) {\r\n    var fragmentByStart = new Array,\r\n        fragmentByEnd = new Array,\r\n        x, y, t0, t1, t2, t3;\r\n\r\n    // Special case for the first row (y = -1, t2 = t3 = 0).\r\n    x = y = -1;\r\n    t1 = above(values[0], value);\r\n    cases[t1 << 1].forEach(stitch);\r\n    while (++x < dx - 1) {\r\n      t0 = t1, t1 = above(values[x + 1], value);\r\n      cases[t0 | t1 << 1].forEach(stitch);\r\n    }\r\n    cases[t1 << 0].forEach(stitch);\r\n\r\n    // General case for the intermediate rows.\r\n    while (++y < dy - 1) {\r\n      x = -1;\r\n      t1 = above(values[y * dx + dx], value);\r\n      t2 = above(values[y * dx], value);\r\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\r\n      while (++x < dx - 1) {\r\n        t0 = t1, t1 = above(values[y * dx + dx + x + 1], value);\r\n        t3 = t2, t2 = above(values[y * dx + x + 1], value);\r\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\r\n      }\r\n      cases[t1 | t2 << 3].forEach(stitch);\r\n    }\r\n\r\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\r\n    x = -1;\r\n    t2 = values[y * dx] >= value;\r\n    cases[t2 << 2].forEach(stitch);\r\n    while (++x < dx - 1) {\r\n      t3 = t2, t2 = above(values[y * dx + x + 1], value);\r\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\r\n    }\r\n    cases[t2 << 3].forEach(stitch);\r\n\r\n    function stitch(line) {\r\n      var start = [line[0][0] + x, line[0][1] + y],\r\n          end = [line[1][0] + x, line[1][1] + y],\r\n          startIndex = index(start),\r\n          endIndex = index(end),\r\n          f, g;\r\n      if (f = fragmentByEnd[startIndex]) {\r\n        if (g = fragmentByStart[endIndex]) {\r\n          delete fragmentByEnd[f.end];\r\n          delete fragmentByStart[g.start];\r\n          if (f === g) {\r\n            f.ring.push(end);\r\n            callback(f.ring);\r\n          } else {\r\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\r\n          }\r\n        } else {\r\n          delete fragmentByEnd[f.end];\r\n          f.ring.push(end);\r\n          fragmentByEnd[f.end = endIndex] = f;\r\n        }\r\n      } else if (f = fragmentByStart[endIndex]) {\r\n        if (g = fragmentByEnd[startIndex]) {\r\n          delete fragmentByStart[f.start];\r\n          delete fragmentByEnd[g.end];\r\n          if (f === g) {\r\n            f.ring.push(end);\r\n            callback(f.ring);\r\n          } else {\r\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\r\n          }\r\n        } else {\r\n          delete fragmentByStart[f.start];\r\n          f.ring.unshift(start);\r\n          fragmentByStart[f.start = startIndex] = f;\r\n        }\r\n      } else {\r\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\r\n      }\r\n    }\r\n  }\r\n\r\n  function index(point) {\r\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\r\n  }\r\n\r\n  function smoothLinear(ring, values, value) {\r\n    ring.forEach(function(point) {\r\n      var x = point[0],\r\n          y = point[1],\r\n          xt = x | 0,\r\n          yt = y | 0,\r\n          v1 = valid(values[yt * dx + xt]);\r\n      if (x > 0 && x < dx && xt === x) {\r\n        point[0] = smooth1(x, valid(values[yt * dx + xt - 1]), v1, value);\r\n      }\r\n      if (y > 0 && y < dy && yt === y) {\r\n        point[1] = smooth1(y, valid(values[(yt - 1) * dx + xt]), v1, value);\r\n      }\r\n    });\r\n  }\r\n\r\n  contours.contour = contour;\r\n\r\n  contours.size = function(_) {\r\n    if (!arguments.length) return [dx, dy];\r\n    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);\r\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\r\n    return dx = _0, dy = _1, contours;\r\n  };\r\n\r\n  contours.thresholds = function(_) {\r\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\r\n  };\r\n\r\n  contours.smooth = function(_) {\r\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\r\n  };\r\n\r\n  return contours;\r\n}\r\n\r\n// When computing the extent, ignore infinite values (as well as invalid ones).\r\nfunction finite(x) {\r\n  return isFinite(x) ? x : NaN;\r\n}\r\n\r\n// Is the (possibly invalid) x greater than or equal to the (known valid) value?\r\n// Treat any invalid value as below negative infinity.\r\nfunction above(x, value) {\r\n  return x == null ? false : +x >= value;\r\n}\r\n\r\n// During smoothing, treat any invalid value as negative infinity.\r\nfunction valid(v) {\r\n  return v == null || isNaN(v = +v) ? -Infinity : v;\r\n}\r\n\r\nfunction smooth1(x, v0, v1, value) {\r\n  const a = value - v0;\r\n  const b = v1 - v0;\r\n  const d = isFinite(a) || isFinite(b) ? a / b : Math.sign(a) / Math.sign(b);\r\n  return isNaN(d) ? x : x + d - 0.5;\r\n}\r\n", "import {blur2, max, ticks} from \"d3-array\";\r\nimport {slice} from \"./array.js\";\r\nimport constant from \"./constant.js\";\r\nimport Contours from \"./contours.js\";\r\n\r\nfunction defaultX(d) {\r\n  return d[0];\r\n}\r\n\r\nfunction defaultY(d) {\r\n  return d[1];\r\n}\r\n\r\nfunction defaultWeight() {\r\n  return 1;\r\n}\r\n\r\nexport default function() {\r\n  var x = defaultX,\r\n      y = defaultY,\r\n      weight = defaultWeight,\r\n      dx = 960,\r\n      dy = 500,\r\n      r = 20, // blur radius\r\n      k = 2, // log2(grid cell size)\r\n      o = r * 3, // grid offset, to pad for blur\r\n      n = (dx + o * 2) >> k, // grid width\r\n      m = (dy + o * 2) >> k, // grid height\r\n      threshold = constant(20);\r\n\r\n  function grid(data) {\r\n    var values = new Float32Array(n * m),\r\n        pow2k = Math.pow(2, -k),\r\n        i = -1;\r\n\r\n    for (const d of data) {\r\n      var xi = (x(d, ++i, data) + o) * pow2k,\r\n          yi = (y(d, i, data) + o) * pow2k,\r\n          wi = +weight(d, i, data);\r\n      if (wi && xi >= 0 && xi < n && yi >= 0 && yi < m) {\r\n        var x0 = Math.floor(xi),\r\n            y0 = Math.floor(yi),\r\n            xt = xi - x0 - 0.5,\r\n            yt = yi - y0 - 0.5;\r\n        values[x0 + y0 * n] += (1 - xt) * (1 - yt) * wi;\r\n        values[x0 + 1 + y0 * n] += xt * (1 - yt) * wi;\r\n        values[x0 + 1 + (y0 + 1) * n] += xt * yt * wi;\r\n        values[x0 + (y0 + 1) * n] += (1 - xt) * yt * wi;\r\n      }\r\n    }\r\n\r\n    blur2({data: values, width: n, height: m}, r * pow2k);\r\n    return values;\r\n  }\r\n\r\n  function density(data) {\r\n    var values = grid(data),\r\n        tz = threshold(values),\r\n        pow4k = Math.pow(2, 2 * k);\r\n\r\n    // Convert number of thresholds into uniform thresholds.\r\n    if (!Array.isArray(tz)) {\r\n      tz = ticks(Number.MIN_VALUE, max(values) / pow4k, tz);\r\n    }\r\n\r\n    return Contours()\r\n        .size([n, m])\r\n        .thresholds(tz.map(d => d * pow4k))\r\n      (values)\r\n        .map((c, i) => (c.value = +tz[i], transform(c)));\r\n  }\r\n\r\n  density.contours = function(data) {\r\n    var values = grid(data),\r\n        contours = Contours().size([n, m]),\r\n        pow4k = Math.pow(2, 2 * k),\r\n        contour = value => {\r\n          value = +value;\r\n          var c = transform(contours.contour(values, value * pow4k));\r\n          c.value = value; // preserve exact threshold value\r\n          return c;\r\n        };\r\n    Object.defineProperty(contour, \"max\", {get: () => max(values) / pow4k});\r\n    return contour;\r\n  };\r\n\r\n  function transform(geometry) {\r\n    geometry.coordinates.forEach(transformPolygon);\r\n    return geometry;\r\n  }\r\n\r\n  function transformPolygon(coordinates) {\r\n    coordinates.forEach(transformRing);\r\n  }\r\n\r\n  function transformRing(coordinates) {\r\n    coordinates.forEach(transformPoint);\r\n  }\r\n\r\n  // TODO Optimize.\r\n  function transformPoint(coordinates) {\r\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\r\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\r\n  }\r\n\r\n  function resize() {\r\n    o = r * 3;\r\n    n = (dx + o * 2) >> k;\r\n    m = (dy + o * 2) >> k;\r\n    return density;\r\n  }\r\n\r\n  density.x = function(_) {\r\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\r\n  };\r\n\r\n  density.y = function(_) {\r\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\r\n  };\r\n\r\n  density.weight = function(_) {\r\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\r\n  };\r\n\r\n  density.size = function(_) {\r\n    if (!arguments.length) return [dx, dy];\r\n    var _0 = +_[0], _1 = +_[1];\r\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\r\n    return dx = _0, dy = _1, resize();\r\n  };\r\n\r\n  density.cellSize = function(_) {\r\n    if (!arguments.length) return 1 << k;\r\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\r\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\r\n  };\r\n\r\n  density.thresholds = function(_) {\r\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\r\n  };\r\n\r\n  density.bandwidth = function(_) {\r\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\r\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\r\n    return r = (Math.sqrt(4 * _ * _ + 1) - 1) / 2, resize();\r\n  };\r\n\r\n  return density;\r\n}\r\n", "export const epsilon = 1.1102230246251565e-16;\r\nexport const splitter = 134217729;\r\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\r\n\r\n// fast_expansion_sum_zeroelim routine from oritinal code\r\nexport function sum(elen, e, flen, f, h) {\r\n    let Q, Qnew, hh, bvirt;\r\n    let enow = e[0];\r\n    let fnow = f[0];\r\n    let eindex = 0;\r\n    let findex = 0;\r\n    if ((fnow > enow) === (fnow > -enow)) {\r\n        Q = enow;\r\n        enow = e[++eindex];\r\n    } else {\r\n        Q = fnow;\r\n        fnow = f[++findex];\r\n    }\r\n    let hindex = 0;\r\n    if (eindex < elen && findex < flen) {\r\n        if ((fnow > enow) === (fnow > -enow)) {\r\n            Qnew = enow + Q;\r\n            hh = Q - (Qnew - enow);\r\n            enow = e[++eindex];\r\n        } else {\r\n            Qnew = fnow + Q;\r\n            hh = Q - (Qnew - fnow);\r\n            fnow = f[++findex];\r\n        }\r\n        Q = Qnew;\r\n        if (hh !== 0) {\r\n            h[hindex++] = hh;\r\n        }\r\n        while (eindex < elen && findex < flen) {\r\n            if ((fnow > enow) === (fnow > -enow)) {\r\n                Qnew = Q + enow;\r\n                bvirt = Qnew - Q;\r\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\r\n                enow = e[++eindex];\r\n            } else {\r\n                Qnew = Q + fnow;\r\n                bvirt = Qnew - Q;\r\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\r\n                fnow = f[++findex];\r\n            }\r\n            Q = Qnew;\r\n            if (hh !== 0) {\r\n                h[hindex++] = hh;\r\n            }\r\n        }\r\n    }\r\n    while (eindex < elen) {\r\n        Qnew = Q + enow;\r\n        bvirt = Qnew - Q;\r\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\r\n        enow = e[++eindex];\r\n        Q = Qnew;\r\n        if (hh !== 0) {\r\n            h[hindex++] = hh;\r\n        }\r\n    }\r\n    while (findex < flen) {\r\n        Qnew = Q + fnow;\r\n        bvirt = Qnew - Q;\r\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\r\n        fnow = f[++findex];\r\n        Q = Qnew;\r\n        if (hh !== 0) {\r\n            h[hindex++] = hh;\r\n        }\r\n    }\r\n    if (Q !== 0 || hindex === 0) {\r\n        h[hindex++] = Q;\r\n    }\r\n    return hindex;\r\n}\r\n\r\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\r\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\r\n}\r\n\r\n// scale_expansion_zeroelim routine from oritinal code\r\nexport function scale(elen, e, b, h) {\r\n    let Q, sum, hh, product1, product0;\r\n    let bvirt, c, ahi, alo, bhi, blo;\r\n\r\n    c = splitter * b;\r\n    bhi = c - (c - b);\r\n    blo = b - bhi;\r\n    let enow = e[0];\r\n    Q = enow * b;\r\n    c = splitter * enow;\r\n    ahi = c - (c - enow);\r\n    alo = enow - ahi;\r\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\r\n    let hindex = 0;\r\n    if (hh !== 0) {\r\n        h[hindex++] = hh;\r\n    }\r\n    for (let i = 1; i < elen; i++) {\r\n        enow = e[i];\r\n        product1 = enow * b;\r\n        c = splitter * enow;\r\n        ahi = c - (c - enow);\r\n        alo = enow - ahi;\r\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\r\n        sum = Q + product0;\r\n        bvirt = sum - Q;\r\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\r\n        if (hh !== 0) {\r\n            h[hindex++] = hh;\r\n        }\r\n        Q = product1 + sum;\r\n        hh = sum - (Q - product1);\r\n        if (hh !== 0) {\r\n            h[hindex++] = hh;\r\n        }\r\n    }\r\n    if (Q !== 0 || hindex === 0) {\r\n        h[hindex++] = Q;\r\n    }\r\n    return hindex;\r\n}\r\n\r\nexport function negate(elen, e) {\r\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\r\n    return elen;\r\n}\r\n\r\nexport function estimate(elen, e) {\r\n    let Q = e[0];\r\n    for (let i = 1; i < elen; i++) Q += e[i];\r\n    return Q;\r\n}\r\n\r\nexport function vec(n) {\r\n    return new Float64Array(n);\r\n}\r\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\r\n\r\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\r\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\r\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\r\n\r\nconst B = vec(4);\r\nconst C1 = vec(8);\r\nconst C2 = vec(12);\r\nconst D = vec(16);\r\nconst u = vec(4);\r\n\r\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\r\n    let acxtail, acytail, bcxtail, bcytail;\r\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\r\n\r\n    const acx = ax - cx;\r\n    const bcx = bx - cx;\r\n    const acy = ay - cy;\r\n    const bcy = by - cy;\r\n\r\n    s1 = acx * bcy;\r\n    c = splitter * acx;\r\n    ahi = c - (c - acx);\r\n    alo = acx - ahi;\r\n    c = splitter * bcy;\r\n    bhi = c - (c - bcy);\r\n    blo = bcy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = acy * bcx;\r\n    c = splitter * acy;\r\n    ahi = c - (c - acy);\r\n    alo = acy - ahi;\r\n    c = splitter * bcx;\r\n    bhi = c - (c - bcx);\r\n    blo = bcx - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    B[3] = u3;\r\n\r\n    let det = estimate(4, B);\r\n    let errbound = ccwerrboundB * detsum;\r\n    if (det >= errbound || -det >= errbound) {\r\n        return det;\r\n    }\r\n\r\n    bvirt = ax - acx;\r\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\r\n    bvirt = bx - bcx;\r\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\r\n    bvirt = ay - acy;\r\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\r\n    bvirt = by - bcy;\r\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\r\n\r\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\r\n        return det;\r\n    }\r\n\r\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\r\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\r\n    if (det >= errbound || -det >= errbound) return det;\r\n\r\n    s1 = acxtail * bcy;\r\n    c = splitter * acxtail;\r\n    ahi = c - (c - acxtail);\r\n    alo = acxtail - ahi;\r\n    c = splitter * bcy;\r\n    bhi = c - (c - bcy);\r\n    blo = bcy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = acytail * bcx;\r\n    c = splitter * acytail;\r\n    ahi = c - (c - acytail);\r\n    alo = acytail - ahi;\r\n    c = splitter * bcx;\r\n    bhi = c - (c - bcx);\r\n    blo = bcx - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    u[3] = u3;\r\n    const C1len = sum(4, B, 4, u, C1);\r\n\r\n    s1 = acx * bcytail;\r\n    c = splitter * acx;\r\n    ahi = c - (c - acx);\r\n    alo = acx - ahi;\r\n    c = splitter * bcytail;\r\n    bhi = c - (c - bcytail);\r\n    blo = bcytail - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = acy * bcxtail;\r\n    c = splitter * acy;\r\n    ahi = c - (c - acy);\r\n    alo = acy - ahi;\r\n    c = splitter * bcxtail;\r\n    bhi = c - (c - bcxtail);\r\n    blo = bcxtail - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    u[3] = u3;\r\n    const C2len = sum(C1len, C1, 4, u, C2);\r\n\r\n    s1 = acxtail * bcytail;\r\n    c = splitter * acxtail;\r\n    ahi = c - (c - acxtail);\r\n    alo = acxtail - ahi;\r\n    c = splitter * bcytail;\r\n    bhi = c - (c - bcytail);\r\n    blo = bcytail - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = acytail * bcxtail;\r\n    c = splitter * acytail;\r\n    ahi = c - (c - acytail);\r\n    alo = acytail - ahi;\r\n    c = splitter * bcxtail;\r\n    bhi = c - (c - bcxtail);\r\n    blo = bcxtail - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    u[3] = u3;\r\n    const Dlen = sum(C2len, C2, 4, u, D);\r\n\r\n    return D[Dlen - 1];\r\n}\r\n\r\nexport function orient2d(ax, ay, bx, by, cx, cy) {\r\n    const detleft = (ay - cy) * (bx - cx);\r\n    const detright = (ax - cx) * (by - cy);\r\n    const det = detleft - detright;\r\n\r\n    const detsum = Math.abs(detleft + detright);\r\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\r\n\r\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\r\n}\r\n\r\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\r\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\r\n}\r\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\r\n\r\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\r\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\r\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\r\n\r\nconst bc = vec(4);\r\nconst ca = vec(4);\r\nconst ab = vec(4);\r\nconst at_b = vec(4);\r\nconst at_c = vec(4);\r\nconst bt_c = vec(4);\r\nconst bt_a = vec(4);\r\nconst ct_a = vec(4);\r\nconst ct_b = vec(4);\r\nconst bct = vec(8);\r\nconst cat = vec(8);\r\nconst abt = vec(8);\r\nconst u = vec(4);\r\n\r\nconst _8 = vec(8);\r\nconst _8b = vec(8);\r\nconst _16 = vec(8);\r\nconst _12 = vec(12);\r\n\r\nlet fin = vec(192);\r\nlet fin2 = vec(192);\r\n\r\nfunction finadd(finlen, alen, a) {\r\n    finlen = sum(finlen, fin, alen, a, fin2);\r\n    const tmp = fin; fin = fin2; fin2 = tmp;\r\n    return finlen;\r\n}\r\n\r\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\r\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\r\n    if (xtail === 0) {\r\n        if (ytail === 0) {\r\n            a[0] = 0;\r\n            b[0] = 0;\r\n            return 1;\r\n        } else {\r\n            negate = -ytail;\r\n            s1 = negate * ax;\r\n            c = splitter * negate;\r\n            ahi = c - (c - negate);\r\n            alo = negate - ahi;\r\n            c = splitter * ax;\r\n            bhi = c - (c - ax);\r\n            blo = ax - bhi;\r\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            a[1] = s1;\r\n            s1 = ytail * bx;\r\n            c = splitter * ytail;\r\n            ahi = c - (c - ytail);\r\n            alo = ytail - ahi;\r\n            c = splitter * bx;\r\n            bhi = c - (c - bx);\r\n            blo = bx - bhi;\r\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            b[1] = s1;\r\n            return 2;\r\n        }\r\n    } else {\r\n        if (ytail === 0) {\r\n            s1 = xtail * ay;\r\n            c = splitter * xtail;\r\n            ahi = c - (c - xtail);\r\n            alo = xtail - ahi;\r\n            c = splitter * ay;\r\n            bhi = c - (c - ay);\r\n            blo = ay - bhi;\r\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            a[1] = s1;\r\n            negate = -xtail;\r\n            s1 = negate * by;\r\n            c = splitter * negate;\r\n            ahi = c - (c - negate);\r\n            alo = negate - ahi;\r\n            c = splitter * by;\r\n            bhi = c - (c - by);\r\n            blo = by - bhi;\r\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            b[1] = s1;\r\n            return 2;\r\n        } else {\r\n            s1 = xtail * ay;\r\n            c = splitter * xtail;\r\n            ahi = c - (c - xtail);\r\n            alo = xtail - ahi;\r\n            c = splitter * ay;\r\n            bhi = c - (c - ay);\r\n            blo = ay - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = ytail * ax;\r\n            c = splitter * ytail;\r\n            ahi = c - (c - ytail);\r\n            alo = ytail - ahi;\r\n            c = splitter * ax;\r\n            bhi = c - (c - ax);\r\n            blo = ax - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 - t0;\r\n            bvirt = s0 - _i;\r\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 - t1;\r\n            bvirt = _0 - _i;\r\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            a[3] = u3;\r\n            s1 = ytail * bx;\r\n            c = splitter * ytail;\r\n            ahi = c - (c - ytail);\r\n            alo = ytail - ahi;\r\n            c = splitter * bx;\r\n            bhi = c - (c - bx);\r\n            blo = bx - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = xtail * by;\r\n            c = splitter * xtail;\r\n            ahi = c - (c - xtail);\r\n            alo = xtail - ahi;\r\n            c = splitter * by;\r\n            bhi = c - (c - by);\r\n            blo = by - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 - t0;\r\n            bvirt = s0 - _i;\r\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 - t1;\r\n            bvirt = _0 - _i;\r\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            b[3] = u3;\r\n            return 4;\r\n        }\r\n    }\r\n}\r\n\r\nfunction tailadd(finlen, a, b, k, z) {\r\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\r\n    s1 = a * b;\r\n    c = splitter * a;\r\n    ahi = c - (c - a);\r\n    alo = a - ahi;\r\n    c = splitter * b;\r\n    bhi = c - (c - b);\r\n    blo = b - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    c = splitter * k;\r\n    bhi = c - (c - k);\r\n    blo = k - bhi;\r\n    _i = s0 * k;\r\n    c = splitter * s0;\r\n    ahi = c - (c - s0);\r\n    alo = s0 - ahi;\r\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\r\n    _j = s1 * k;\r\n    c = splitter * s1;\r\n    ahi = c - (c - s1);\r\n    alo = s1 - ahi;\r\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\r\n    _k = _i + _0;\r\n    bvirt = _k - _i;\r\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\r\n    u3 = _j + _k;\r\n    u[2] = _k - (u3 - _j);\r\n    u[3] = u3;\r\n    finlen = finadd(finlen, 4, u);\r\n    if (z !== 0) {\r\n        c = splitter * z;\r\n        bhi = c - (c - z);\r\n        blo = z - bhi;\r\n        _i = s0 * z;\r\n        c = splitter * s0;\r\n        ahi = c - (c - s0);\r\n        alo = s0 - ahi;\r\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\r\n        _j = s1 * z;\r\n        c = splitter * s1;\r\n        ahi = c - (c - s1);\r\n        alo = s1 - ahi;\r\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\r\n        _k = _i + _0;\r\n        bvirt = _k - _i;\r\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\r\n        u3 = _j + _k;\r\n        u[2] = _k - (u3 - _j);\r\n        u[3] = u3;\r\n        finlen = finadd(finlen, 4, u);\r\n    }\r\n    return finlen;\r\n}\r\n\r\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\r\n    let finlen;\r\n    let adxtail, bdxtail, cdxtail;\r\n    let adytail, bdytail, cdytail;\r\n    let adztail, bdztail, cdztail;\r\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\r\n\r\n    const adx = ax - dx;\r\n    const bdx = bx - dx;\r\n    const cdx = cx - dx;\r\n    const ady = ay - dy;\r\n    const bdy = by - dy;\r\n    const cdy = cy - dy;\r\n    const adz = az - dz;\r\n    const bdz = bz - dz;\r\n    const cdz = cz - dz;\r\n\r\n    s1 = bdx * cdy;\r\n    c = splitter * bdx;\r\n    ahi = c - (c - bdx);\r\n    alo = bdx - ahi;\r\n    c = splitter * cdy;\r\n    bhi = c - (c - cdy);\r\n    blo = cdy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = cdx * bdy;\r\n    c = splitter * cdx;\r\n    ahi = c - (c - cdx);\r\n    alo = cdx - ahi;\r\n    c = splitter * bdy;\r\n    bhi = c - (c - bdy);\r\n    blo = bdy - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    bc[3] = u3;\r\n    s1 = cdx * ady;\r\n    c = splitter * cdx;\r\n    ahi = c - (c - cdx);\r\n    alo = cdx - ahi;\r\n    c = splitter * ady;\r\n    bhi = c - (c - ady);\r\n    blo = ady - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = adx * cdy;\r\n    c = splitter * adx;\r\n    ahi = c - (c - adx);\r\n    alo = adx - ahi;\r\n    c = splitter * cdy;\r\n    bhi = c - (c - cdy);\r\n    blo = cdy - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    ca[3] = u3;\r\n    s1 = adx * bdy;\r\n    c = splitter * adx;\r\n    ahi = c - (c - adx);\r\n    alo = adx - ahi;\r\n    c = splitter * bdy;\r\n    bhi = c - (c - bdy);\r\n    blo = bdy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = bdx * ady;\r\n    c = splitter * bdx;\r\n    ahi = c - (c - bdx);\r\n    alo = bdx - ahi;\r\n    c = splitter * ady;\r\n    bhi = c - (c - ady);\r\n    blo = ady - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    ab[3] = u3;\r\n\r\n    finlen = sum(\r\n        sum(\r\n            scale(4, bc, adz, _8), _8,\r\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\r\n        scale(4, ab, cdz, _8), _8, fin);\r\n\r\n    let det = estimate(finlen, fin);\r\n    let errbound = o3derrboundB * permanent;\r\n    if (det >= errbound || -det >= errbound) {\r\n        return det;\r\n    }\r\n\r\n    bvirt = ax - adx;\r\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\r\n    bvirt = bx - bdx;\r\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\r\n    bvirt = cx - cdx;\r\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\r\n    bvirt = ay - ady;\r\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\r\n    bvirt = by - bdy;\r\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\r\n    bvirt = cy - cdy;\r\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\r\n    bvirt = az - adz;\r\n    adztail = az - (adz + bvirt) + (bvirt - dz);\r\n    bvirt = bz - bdz;\r\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\r\n    bvirt = cz - cdz;\r\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\r\n\r\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\r\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\r\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\r\n        return det;\r\n    }\r\n\r\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\r\n    det +=\r\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\r\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\r\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\r\n    if (det >= errbound || -det >= errbound) {\r\n        return det;\r\n    }\r\n\r\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\r\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\r\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\r\n\r\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\r\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\r\n\r\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\r\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\r\n\r\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\r\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\r\n\r\n    if (adztail !== 0) {\r\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\r\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\r\n    }\r\n    if (bdztail !== 0) {\r\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\r\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\r\n    }\r\n    if (cdztail !== 0) {\r\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\r\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\r\n    }\r\n\r\n    if (adxtail !== 0) {\r\n        if (bdytail !== 0) {\r\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\r\n        }\r\n        if (cdytail !== 0) {\r\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\r\n        }\r\n    }\r\n    if (bdxtail !== 0) {\r\n        if (cdytail !== 0) {\r\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\r\n        }\r\n        if (adytail !== 0) {\r\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\r\n        }\r\n    }\r\n    if (cdxtail !== 0) {\r\n        if (adytail !== 0) {\r\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\r\n        }\r\n        if (bdytail !== 0) {\r\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\r\n        }\r\n    }\r\n\r\n    return fin[finlen - 1];\r\n}\r\n\r\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\r\n    const adx = ax - dx;\r\n    const bdx = bx - dx;\r\n    const cdx = cx - dx;\r\n    const ady = ay - dy;\r\n    const bdy = by - dy;\r\n    const cdy = cy - dy;\r\n    const adz = az - dz;\r\n    const bdz = bz - dz;\r\n    const cdz = cz - dz;\r\n\r\n    const bdxcdy = bdx * cdy;\r\n    const cdxbdy = cdx * bdy;\r\n\r\n    const cdxady = cdx * ady;\r\n    const adxcdy = adx * cdy;\r\n\r\n    const adxbdy = adx * bdy;\r\n    const bdxady = bdx * ady;\r\n\r\n    const det =\r\n        adz * (bdxcdy - cdxbdy) +\r\n        bdz * (cdxady - adxcdy) +\r\n        cdz * (adxbdy - bdxady);\r\n\r\n    const permanent =\r\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\r\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\r\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\r\n\r\n    const errbound = o3derrboundA * permanent;\r\n    if (det > errbound || -det > errbound) {\r\n        return det;\r\n    }\r\n\r\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\r\n}\r\n\r\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\r\n    const adx = ax - dx;\r\n    const bdx = bx - dx;\r\n    const cdx = cx - dx;\r\n    const ady = ay - dy;\r\n    const bdy = by - dy;\r\n    const cdy = cy - dy;\r\n    const adz = az - dz;\r\n    const bdz = bz - dz;\r\n    const cdz = cz - dz;\r\n\r\n    return adx * (bdy * cdz - bdz * cdy) +\r\n        bdx * (cdy * adz - cdz * ady) +\r\n        cdx * (ady * bdz - adz * bdy);\r\n}\r\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\r\n\r\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\r\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\r\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\r\n\r\nconst bc = vec(4);\r\nconst ca = vec(4);\r\nconst ab = vec(4);\r\nconst aa = vec(4);\r\nconst bb = vec(4);\r\nconst cc = vec(4);\r\nconst u = vec(4);\r\nconst v = vec(4);\r\nconst axtbc = vec(8);\r\nconst aytbc = vec(8);\r\nconst bxtca = vec(8);\r\nconst bytca = vec(8);\r\nconst cxtab = vec(8);\r\nconst cytab = vec(8);\r\nconst abt = vec(8);\r\nconst bct = vec(8);\r\nconst cat = vec(8);\r\nconst abtt = vec(4);\r\nconst bctt = vec(4);\r\nconst catt = vec(4);\r\n\r\nconst _8 = vec(8);\r\nconst _16 = vec(16);\r\nconst _16b = vec(16);\r\nconst _16c = vec(16);\r\nconst _32 = vec(32);\r\nconst _32b = vec(32);\r\nconst _48 = vec(48);\r\nconst _64 = vec(64);\r\n\r\nlet fin = vec(1152);\r\nlet fin2 = vec(1152);\r\n\r\nfunction finadd(finlen, a, alen) {\r\n    finlen = sum(finlen, fin, a, alen, fin2);\r\n    const tmp = fin; fin = fin2; fin2 = tmp;\r\n    return finlen;\r\n}\r\n\r\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\r\n    let finlen;\r\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\r\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\r\n    let abtlen, bctlen, catlen;\r\n    let abttlen, bcttlen, cattlen;\r\n    let n1, n0;\r\n\r\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\r\n\r\n    const adx = ax - dx;\r\n    const bdx = bx - dx;\r\n    const cdx = cx - dx;\r\n    const ady = ay - dy;\r\n    const bdy = by - dy;\r\n    const cdy = cy - dy;\r\n\r\n    s1 = bdx * cdy;\r\n    c = splitter * bdx;\r\n    ahi = c - (c - bdx);\r\n    alo = bdx - ahi;\r\n    c = splitter * cdy;\r\n    bhi = c - (c - cdy);\r\n    blo = cdy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = cdx * bdy;\r\n    c = splitter * cdx;\r\n    ahi = c - (c - cdx);\r\n    alo = cdx - ahi;\r\n    c = splitter * bdy;\r\n    bhi = c - (c - bdy);\r\n    blo = bdy - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    bc[3] = u3;\r\n    s1 = cdx * ady;\r\n    c = splitter * cdx;\r\n    ahi = c - (c - cdx);\r\n    alo = cdx - ahi;\r\n    c = splitter * ady;\r\n    bhi = c - (c - ady);\r\n    blo = ady - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = adx * cdy;\r\n    c = splitter * adx;\r\n    ahi = c - (c - adx);\r\n    alo = adx - ahi;\r\n    c = splitter * cdy;\r\n    bhi = c - (c - cdy);\r\n    blo = cdy - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    ca[3] = u3;\r\n    s1 = adx * bdy;\r\n    c = splitter * adx;\r\n    ahi = c - (c - adx);\r\n    alo = adx - ahi;\r\n    c = splitter * bdy;\r\n    bhi = c - (c - bdy);\r\n    blo = bdy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = bdx * ady;\r\n    c = splitter * bdx;\r\n    ahi = c - (c - bdx);\r\n    alo = bdx - ahi;\r\n    c = splitter * ady;\r\n    bhi = c - (c - ady);\r\n    blo = ady - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    ab[3] = u3;\r\n\r\n    finlen = sum(\r\n        sum(\r\n            sum(\r\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\r\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\r\n            sum(\r\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\r\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\r\n        sum(\r\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\r\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\r\n\r\n    let det = estimate(finlen, fin);\r\n    let errbound = iccerrboundB * permanent;\r\n    if (det >= errbound || -det >= errbound) {\r\n        return det;\r\n    }\r\n\r\n    bvirt = ax - adx;\r\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\r\n    bvirt = ay - ady;\r\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\r\n    bvirt = bx - bdx;\r\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\r\n    bvirt = by - bdy;\r\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\r\n    bvirt = cx - cdx;\r\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\r\n    bvirt = cy - cdy;\r\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\r\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\r\n        return det;\r\n    }\r\n\r\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\r\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\r\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\r\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\r\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\r\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\r\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\r\n\r\n    if (det >= errbound || -det >= errbound) {\r\n        return det;\r\n    }\r\n\r\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\r\n        s1 = adx * adx;\r\n        c = splitter * adx;\r\n        ahi = c - (c - adx);\r\n        alo = adx - ahi;\r\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\r\n        t1 = ady * ady;\r\n        c = splitter * ady;\r\n        ahi = c - (c - ady);\r\n        alo = ady - ahi;\r\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\r\n        _i = s0 + t0;\r\n        bvirt = _i - s0;\r\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n        _j = s1 + _i;\r\n        bvirt = _j - s1;\r\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n        _i = _0 + t1;\r\n        bvirt = _i - _0;\r\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n        u3 = _j + _i;\r\n        bvirt = u3 - _j;\r\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n        aa[3] = u3;\r\n    }\r\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\r\n        s1 = bdx * bdx;\r\n        c = splitter * bdx;\r\n        ahi = c - (c - bdx);\r\n        alo = bdx - ahi;\r\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\r\n        t1 = bdy * bdy;\r\n        c = splitter * bdy;\r\n        ahi = c - (c - bdy);\r\n        alo = bdy - ahi;\r\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\r\n        _i = s0 + t0;\r\n        bvirt = _i - s0;\r\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n        _j = s1 + _i;\r\n        bvirt = _j - s1;\r\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n        _i = _0 + t1;\r\n        bvirt = _i - _0;\r\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n        u3 = _j + _i;\r\n        bvirt = u3 - _j;\r\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n        bb[3] = u3;\r\n    }\r\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\r\n        s1 = cdx * cdx;\r\n        c = splitter * cdx;\r\n        ahi = c - (c - cdx);\r\n        alo = cdx - ahi;\r\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\r\n        t1 = cdy * cdy;\r\n        c = splitter * cdy;\r\n        ahi = c - (c - cdy);\r\n        alo = cdy - ahi;\r\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\r\n        _i = s0 + t0;\r\n        bvirt = _i - s0;\r\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n        _j = s1 + _i;\r\n        bvirt = _j - s1;\r\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n        _i = _0 + t1;\r\n        bvirt = _i - _0;\r\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n        u3 = _j + _i;\r\n        bvirt = u3 - _j;\r\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n        cc[3] = u3;\r\n    }\r\n\r\n    if (adxtail !== 0) {\r\n        axtbclen = scale(4, bc, adxtail, axtbc);\r\n        finlen = finadd(finlen, sum_three(\r\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\r\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\r\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\r\n    }\r\n    if (adytail !== 0) {\r\n        aytbclen = scale(4, bc, adytail, aytbc);\r\n        finlen = finadd(finlen, sum_three(\r\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\r\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\r\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\r\n    }\r\n    if (bdxtail !== 0) {\r\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\r\n        finlen = finadd(finlen, sum_three(\r\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\r\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\r\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\r\n    }\r\n    if (bdytail !== 0) {\r\n        bytcalen = scale(4, ca, bdytail, bytca);\r\n        finlen = finadd(finlen, sum_three(\r\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\r\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\r\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\r\n    }\r\n    if (cdxtail !== 0) {\r\n        cxtablen = scale(4, ab, cdxtail, cxtab);\r\n        finlen = finadd(finlen, sum_three(\r\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\r\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\r\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\r\n    }\r\n    if (cdytail !== 0) {\r\n        cytablen = scale(4, ab, cdytail, cytab);\r\n        finlen = finadd(finlen, sum_three(\r\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\r\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\r\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\r\n    }\r\n\r\n    if (adxtail !== 0 || adytail !== 0) {\r\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\r\n            s1 = bdxtail * cdy;\r\n            c = splitter * bdxtail;\r\n            ahi = c - (c - bdxtail);\r\n            alo = bdxtail - ahi;\r\n            c = splitter * cdy;\r\n            bhi = c - (c - cdy);\r\n            blo = cdy - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = bdx * cdytail;\r\n            c = splitter * bdx;\r\n            ahi = c - (c - bdx);\r\n            alo = bdx - ahi;\r\n            c = splitter * cdytail;\r\n            bhi = c - (c - cdytail);\r\n            blo = cdytail - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 + t0;\r\n            bvirt = _i - s0;\r\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 + t1;\r\n            bvirt = _i - _0;\r\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            u[3] = u3;\r\n            s1 = cdxtail * -bdy;\r\n            c = splitter * cdxtail;\r\n            ahi = c - (c - cdxtail);\r\n            alo = cdxtail - ahi;\r\n            c = splitter * -bdy;\r\n            bhi = c - (c - -bdy);\r\n            blo = -bdy - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = cdx * -bdytail;\r\n            c = splitter * cdx;\r\n            ahi = c - (c - cdx);\r\n            alo = cdx - ahi;\r\n            c = splitter * -bdytail;\r\n            bhi = c - (c - -bdytail);\r\n            blo = -bdytail - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 + t0;\r\n            bvirt = _i - s0;\r\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 + t1;\r\n            bvirt = _i - _0;\r\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            v[3] = u3;\r\n            bctlen = sum(4, u, 4, v, bct);\r\n            s1 = bdxtail * cdytail;\r\n            c = splitter * bdxtail;\r\n            ahi = c - (c - bdxtail);\r\n            alo = bdxtail - ahi;\r\n            c = splitter * cdytail;\r\n            bhi = c - (c - cdytail);\r\n            blo = cdytail - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = cdxtail * bdytail;\r\n            c = splitter * cdxtail;\r\n            ahi = c - (c - cdxtail);\r\n            alo = cdxtail - ahi;\r\n            c = splitter * bdytail;\r\n            bhi = c - (c - bdytail);\r\n            blo = bdytail - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 - t0;\r\n            bvirt = s0 - _i;\r\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 - t1;\r\n            bvirt = _0 - _i;\r\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            bctt[3] = u3;\r\n            bcttlen = 4;\r\n        } else {\r\n            bct[0] = 0;\r\n            bctlen = 1;\r\n            bctt[0] = 0;\r\n            bcttlen = 1;\r\n        }\r\n        if (adxtail !== 0) {\r\n            const len = scale(bctlen, bct, adxtail, _16c);\r\n            finlen = finadd(finlen, sum(\r\n                scale(axtbclen, axtbc, adxtail, _16), _16,\r\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\r\n\r\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\r\n            finlen = finadd(finlen, sum_three(\r\n                scale(len2, _8, 2 * adx, _16), _16,\r\n                scale(len2, _8, adxtail, _16b), _16b,\r\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\r\n\r\n            if (bdytail !== 0) {\r\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\r\n            }\r\n            if (cdytail !== 0) {\r\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\r\n            }\r\n        }\r\n        if (adytail !== 0) {\r\n            const len = scale(bctlen, bct, adytail, _16c);\r\n            finlen = finadd(finlen, sum(\r\n                scale(aytbclen, aytbc, adytail, _16), _16,\r\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\r\n\r\n            const len2 = scale(bcttlen, bctt, adytail, _8);\r\n            finlen = finadd(finlen, sum_three(\r\n                scale(len2, _8, 2 * ady, _16), _16,\r\n                scale(len2, _8, adytail, _16b), _16b,\r\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\r\n        }\r\n    }\r\n    if (bdxtail !== 0 || bdytail !== 0) {\r\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\r\n            s1 = cdxtail * ady;\r\n            c = splitter * cdxtail;\r\n            ahi = c - (c - cdxtail);\r\n            alo = cdxtail - ahi;\r\n            c = splitter * ady;\r\n            bhi = c - (c - ady);\r\n            blo = ady - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = cdx * adytail;\r\n            c = splitter * cdx;\r\n            ahi = c - (c - cdx);\r\n            alo = cdx - ahi;\r\n            c = splitter * adytail;\r\n            bhi = c - (c - adytail);\r\n            blo = adytail - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 + t0;\r\n            bvirt = _i - s0;\r\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 + t1;\r\n            bvirt = _i - _0;\r\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            u[3] = u3;\r\n            n1 = -cdy;\r\n            n0 = -cdytail;\r\n            s1 = adxtail * n1;\r\n            c = splitter * adxtail;\r\n            ahi = c - (c - adxtail);\r\n            alo = adxtail - ahi;\r\n            c = splitter * n1;\r\n            bhi = c - (c - n1);\r\n            blo = n1 - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = adx * n0;\r\n            c = splitter * adx;\r\n            ahi = c - (c - adx);\r\n            alo = adx - ahi;\r\n            c = splitter * n0;\r\n            bhi = c - (c - n0);\r\n            blo = n0 - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 + t0;\r\n            bvirt = _i - s0;\r\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 + t1;\r\n            bvirt = _i - _0;\r\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            v[3] = u3;\r\n            catlen = sum(4, u, 4, v, cat);\r\n            s1 = cdxtail * adytail;\r\n            c = splitter * cdxtail;\r\n            ahi = c - (c - cdxtail);\r\n            alo = cdxtail - ahi;\r\n            c = splitter * adytail;\r\n            bhi = c - (c - adytail);\r\n            blo = adytail - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = adxtail * cdytail;\r\n            c = splitter * adxtail;\r\n            ahi = c - (c - adxtail);\r\n            alo = adxtail - ahi;\r\n            c = splitter * cdytail;\r\n            bhi = c - (c - cdytail);\r\n            blo = cdytail - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 - t0;\r\n            bvirt = s0 - _i;\r\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 - t1;\r\n            bvirt = _0 - _i;\r\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            catt[3] = u3;\r\n            cattlen = 4;\r\n        } else {\r\n            cat[0] = 0;\r\n            catlen = 1;\r\n            catt[0] = 0;\r\n            cattlen = 1;\r\n        }\r\n        if (bdxtail !== 0) {\r\n            const len = scale(catlen, cat, bdxtail, _16c);\r\n            finlen = finadd(finlen, sum(\r\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\r\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\r\n\r\n            const len2 = scale(cattlen, catt, bdxtail, _8);\r\n            finlen = finadd(finlen, sum_three(\r\n                scale(len2, _8, 2 * bdx, _16), _16,\r\n                scale(len2, _8, bdxtail, _16b), _16b,\r\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\r\n\r\n            if (cdytail !== 0) {\r\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\r\n            }\r\n            if (adytail !== 0) {\r\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\r\n            }\r\n        }\r\n        if (bdytail !== 0) {\r\n            const len = scale(catlen, cat, bdytail, _16c);\r\n            finlen = finadd(finlen, sum(\r\n                scale(bytcalen, bytca, bdytail, _16), _16,\r\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\r\n\r\n            const len2 = scale(cattlen, catt, bdytail, _8);\r\n            finlen = finadd(finlen, sum_three(\r\n                scale(len2, _8, 2 * bdy, _16), _16,\r\n                scale(len2, _8, bdytail, _16b), _16b,\r\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\r\n        }\r\n    }\r\n    if (cdxtail !== 0 || cdytail !== 0) {\r\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\r\n            s1 = adxtail * bdy;\r\n            c = splitter * adxtail;\r\n            ahi = c - (c - adxtail);\r\n            alo = adxtail - ahi;\r\n            c = splitter * bdy;\r\n            bhi = c - (c - bdy);\r\n            blo = bdy - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = adx * bdytail;\r\n            c = splitter * adx;\r\n            ahi = c - (c - adx);\r\n            alo = adx - ahi;\r\n            c = splitter * bdytail;\r\n            bhi = c - (c - bdytail);\r\n            blo = bdytail - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 + t0;\r\n            bvirt = _i - s0;\r\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 + t1;\r\n            bvirt = _i - _0;\r\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            u[3] = u3;\r\n            n1 = -ady;\r\n            n0 = -adytail;\r\n            s1 = bdxtail * n1;\r\n            c = splitter * bdxtail;\r\n            ahi = c - (c - bdxtail);\r\n            alo = bdxtail - ahi;\r\n            c = splitter * n1;\r\n            bhi = c - (c - n1);\r\n            blo = n1 - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = bdx * n0;\r\n            c = splitter * bdx;\r\n            ahi = c - (c - bdx);\r\n            alo = bdx - ahi;\r\n            c = splitter * n0;\r\n            bhi = c - (c - n0);\r\n            blo = n0 - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 + t0;\r\n            bvirt = _i - s0;\r\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 + t1;\r\n            bvirt = _i - _0;\r\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            v[3] = u3;\r\n            abtlen = sum(4, u, 4, v, abt);\r\n            s1 = adxtail * bdytail;\r\n            c = splitter * adxtail;\r\n            ahi = c - (c - adxtail);\r\n            alo = adxtail - ahi;\r\n            c = splitter * bdytail;\r\n            bhi = c - (c - bdytail);\r\n            blo = bdytail - bhi;\r\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            t1 = bdxtail * adytail;\r\n            c = splitter * bdxtail;\r\n            ahi = c - (c - bdxtail);\r\n            alo = bdxtail - ahi;\r\n            c = splitter * adytail;\r\n            bhi = c - (c - adytail);\r\n            blo = adytail - bhi;\r\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n            _i = s0 - t0;\r\n            bvirt = s0 - _i;\r\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n            _j = s1 + _i;\r\n            bvirt = _j - s1;\r\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n            _i = _0 - t1;\r\n            bvirt = _0 - _i;\r\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n            u3 = _j + _i;\r\n            bvirt = u3 - _j;\r\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n            abtt[3] = u3;\r\n            abttlen = 4;\r\n        } else {\r\n            abt[0] = 0;\r\n            abtlen = 1;\r\n            abtt[0] = 0;\r\n            abttlen = 1;\r\n        }\r\n        if (cdxtail !== 0) {\r\n            const len = scale(abtlen, abt, cdxtail, _16c);\r\n            finlen = finadd(finlen, sum(\r\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\r\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\r\n\r\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\r\n            finlen = finadd(finlen, sum_three(\r\n                scale(len2, _8, 2 * cdx, _16), _16,\r\n                scale(len2, _8, cdxtail, _16b), _16b,\r\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\r\n\r\n            if (adytail !== 0) {\r\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\r\n            }\r\n            if (bdytail !== 0) {\r\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\r\n            }\r\n        }\r\n        if (cdytail !== 0) {\r\n            const len = scale(abtlen, abt, cdytail, _16c);\r\n            finlen = finadd(finlen, sum(\r\n                scale(cytablen, cytab, cdytail, _16), _16,\r\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\r\n\r\n            const len2 = scale(abttlen, abtt, cdytail, _8);\r\n            finlen = finadd(finlen, sum_three(\r\n                scale(len2, _8, 2 * cdy, _16), _16,\r\n                scale(len2, _8, cdytail, _16b), _16b,\r\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\r\n        }\r\n    }\r\n\r\n    return fin[finlen - 1];\r\n}\r\n\r\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\r\n    const adx = ax - dx;\r\n    const bdx = bx - dx;\r\n    const cdx = cx - dx;\r\n    const ady = ay - dy;\r\n    const bdy = by - dy;\r\n    const cdy = cy - dy;\r\n\r\n    const bdxcdy = bdx * cdy;\r\n    const cdxbdy = cdx * bdy;\r\n    const alift = adx * adx + ady * ady;\r\n\r\n    const cdxady = cdx * ady;\r\n    const adxcdy = adx * cdy;\r\n    const blift = bdx * bdx + bdy * bdy;\r\n\r\n    const adxbdy = adx * bdy;\r\n    const bdxady = bdx * ady;\r\n    const clift = cdx * cdx + cdy * cdy;\r\n\r\n    const det =\r\n        alift * (bdxcdy - cdxbdy) +\r\n        blift * (cdxady - adxcdy) +\r\n        clift * (adxbdy - bdxady);\r\n\r\n    const permanent =\r\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\r\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\r\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\r\n\r\n    const errbound = iccerrboundA * permanent;\r\n\r\n    if (det > errbound || -det > errbound) {\r\n        return det;\r\n    }\r\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\r\n}\r\n\r\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\r\n    const adx = ax - dx;\r\n    const ady = ay - dy;\r\n    const bdx = bx - dx;\r\n    const bdy = by - dy;\r\n    const cdx = cx - dx;\r\n    const cdy = cy - dy;\r\n\r\n    const abdet = adx * bdy - bdx * ady;\r\n    const bcdet = bdx * cdy - cdx * bdy;\r\n    const cadet = cdx * ady - adx * cdy;\r\n    const alift = adx * adx + ady * ady;\r\n    const blift = bdx * bdx + bdy * bdy;\r\n    const clift = cdx * cdx + cdy * cdy;\r\n\r\n    return alift * bcdet + blift * cadet + clift * abdet;\r\n}\r\n", "import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\r\n\r\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\r\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\r\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\r\n\r\nconst ab = vec(4);\r\nconst bc = vec(4);\r\nconst cd = vec(4);\r\nconst de = vec(4);\r\nconst ea = vec(4);\r\nconst ac = vec(4);\r\nconst bd = vec(4);\r\nconst ce = vec(4);\r\nconst da = vec(4);\r\nconst eb = vec(4);\r\n\r\nconst abc = vec(24);\r\nconst bcd = vec(24);\r\nconst cde = vec(24);\r\nconst dea = vec(24);\r\nconst eab = vec(24);\r\nconst abd = vec(24);\r\nconst bce = vec(24);\r\nconst cda = vec(24);\r\nconst deb = vec(24);\r\nconst eac = vec(24);\r\n\r\nconst adet = vec(1152);\r\nconst bdet = vec(1152);\r\nconst cdet = vec(1152);\r\nconst ddet = vec(1152);\r\nconst edet = vec(1152);\r\nconst abdet = vec(2304);\r\nconst cddet = vec(2304);\r\nconst cdedet = vec(3456);\r\nconst deter = vec(5760);\r\n\r\nconst _8 = vec(8);\r\nconst _8b = vec(8);\r\nconst _8c = vec(8);\r\nconst _16 = vec(16);\r\nconst _24 = vec(24);\r\nconst _48 = vec(48);\r\nconst _48b = vec(48);\r\nconst _96 = vec(96);\r\nconst _192 = vec(192);\r\nconst _384x = vec(384);\r\nconst _384y = vec(384);\r\nconst _384z = vec(384);\r\nconst _768 = vec(768);\r\n\r\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\r\n    return sum_three(\r\n        scale(4, a, az, _8), _8,\r\n        scale(4, b, bz, _8b), _8b,\r\n        scale(4, c, cz, _8c), _8c, _16, out);\r\n}\r\n\r\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\r\n    const len = sum(\r\n        sum(alen, a, blen, b, _48), _48,\r\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\r\n\r\n    return sum_three(\r\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\r\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\r\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\r\n}\r\n\r\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\r\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\r\n\r\n    s1 = ax * by;\r\n    c = splitter * ax;\r\n    ahi = c - (c - ax);\r\n    alo = ax - ahi;\r\n    c = splitter * by;\r\n    bhi = c - (c - by);\r\n    blo = by - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = bx * ay;\r\n    c = splitter * bx;\r\n    ahi = c - (c - bx);\r\n    alo = bx - ahi;\r\n    c = splitter * ay;\r\n    bhi = c - (c - ay);\r\n    blo = ay - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    ab[3] = u3;\r\n    s1 = bx * cy;\r\n    c = splitter * bx;\r\n    ahi = c - (c - bx);\r\n    alo = bx - ahi;\r\n    c = splitter * cy;\r\n    bhi = c - (c - cy);\r\n    blo = cy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = cx * by;\r\n    c = splitter * cx;\r\n    ahi = c - (c - cx);\r\n    alo = cx - ahi;\r\n    c = splitter * by;\r\n    bhi = c - (c - by);\r\n    blo = by - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    bc[3] = u3;\r\n    s1 = cx * dy;\r\n    c = splitter * cx;\r\n    ahi = c - (c - cx);\r\n    alo = cx - ahi;\r\n    c = splitter * dy;\r\n    bhi = c - (c - dy);\r\n    blo = dy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = dx * cy;\r\n    c = splitter * dx;\r\n    ahi = c - (c - dx);\r\n    alo = dx - ahi;\r\n    c = splitter * cy;\r\n    bhi = c - (c - cy);\r\n    blo = cy - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    cd[3] = u3;\r\n    s1 = dx * ey;\r\n    c = splitter * dx;\r\n    ahi = c - (c - dx);\r\n    alo = dx - ahi;\r\n    c = splitter * ey;\r\n    bhi = c - (c - ey);\r\n    blo = ey - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = ex * dy;\r\n    c = splitter * ex;\r\n    ahi = c - (c - ex);\r\n    alo = ex - ahi;\r\n    c = splitter * dy;\r\n    bhi = c - (c - dy);\r\n    blo = dy - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    de[3] = u3;\r\n    s1 = ex * ay;\r\n    c = splitter * ex;\r\n    ahi = c - (c - ex);\r\n    alo = ex - ahi;\r\n    c = splitter * ay;\r\n    bhi = c - (c - ay);\r\n    blo = ay - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = ax * ey;\r\n    c = splitter * ax;\r\n    ahi = c - (c - ax);\r\n    alo = ax - ahi;\r\n    c = splitter * ey;\r\n    bhi = c - (c - ey);\r\n    blo = ey - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    ea[3] = u3;\r\n    s1 = ax * cy;\r\n    c = splitter * ax;\r\n    ahi = c - (c - ax);\r\n    alo = ax - ahi;\r\n    c = splitter * cy;\r\n    bhi = c - (c - cy);\r\n    blo = cy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = cx * ay;\r\n    c = splitter * cx;\r\n    ahi = c - (c - cx);\r\n    alo = cx - ahi;\r\n    c = splitter * ay;\r\n    bhi = c - (c - ay);\r\n    blo = ay - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    ac[3] = u3;\r\n    s1 = bx * dy;\r\n    c = splitter * bx;\r\n    ahi = c - (c - bx);\r\n    alo = bx - ahi;\r\n    c = splitter * dy;\r\n    bhi = c - (c - dy);\r\n    blo = dy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = dx * by;\r\n    c = splitter * dx;\r\n    ahi = c - (c - dx);\r\n    alo = dx - ahi;\r\n    c = splitter * by;\r\n    bhi = c - (c - by);\r\n    blo = by - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    bd[3] = u3;\r\n    s1 = cx * ey;\r\n    c = splitter * cx;\r\n    ahi = c - (c - cx);\r\n    alo = cx - ahi;\r\n    c = splitter * ey;\r\n    bhi = c - (c - ey);\r\n    blo = ey - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = ex * cy;\r\n    c = splitter * ex;\r\n    ahi = c - (c - ex);\r\n    alo = ex - ahi;\r\n    c = splitter * cy;\r\n    bhi = c - (c - cy);\r\n    blo = cy - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    ce[3] = u3;\r\n    s1 = dx * ay;\r\n    c = splitter * dx;\r\n    ahi = c - (c - dx);\r\n    alo = dx - ahi;\r\n    c = splitter * ay;\r\n    bhi = c - (c - ay);\r\n    blo = ay - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = ax * dy;\r\n    c = splitter * ax;\r\n    ahi = c - (c - ax);\r\n    alo = ax - ahi;\r\n    c = splitter * dy;\r\n    bhi = c - (c - dy);\r\n    blo = dy - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    da[3] = u3;\r\n    s1 = ex * by;\r\n    c = splitter * ex;\r\n    ahi = c - (c - ex);\r\n    alo = ex - ahi;\r\n    c = splitter * by;\r\n    bhi = c - (c - by);\r\n    blo = by - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = bx * ey;\r\n    c = splitter * bx;\r\n    ahi = c - (c - bx);\r\n    alo = bx - ahi;\r\n    c = splitter * ey;\r\n    bhi = c - (c - ey);\r\n    blo = ey - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    eb[3] = u3;\r\n\r\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\r\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\r\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\r\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\r\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\r\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\r\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\r\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\r\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\r\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\r\n\r\n    const deterlen = sum_three(\r\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\r\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\r\n        sum_three(\r\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\r\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\r\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\r\n\r\n    return deter[deterlen - 1];\r\n}\r\n\r\nconst xdet = vec(96);\r\nconst ydet = vec(96);\r\nconst zdet = vec(96);\r\nconst fin = vec(1152);\r\n\r\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\r\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\r\n    return sum_three(\r\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\r\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\r\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\r\n}\r\n\r\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\r\n    let ab3, bc3, cd3, da3, ac3, bd3;\r\n\r\n    let aextail, bextail, cextail, dextail;\r\n    let aeytail, beytail, ceytail, deytail;\r\n    let aeztail, beztail, ceztail, deztail;\r\n\r\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\r\n\r\n    const aex = ax - ex;\r\n    const bex = bx - ex;\r\n    const cex = cx - ex;\r\n    const dex = dx - ex;\r\n    const aey = ay - ey;\r\n    const bey = by - ey;\r\n    const cey = cy - ey;\r\n    const dey = dy - ey;\r\n    const aez = az - ez;\r\n    const bez = bz - ez;\r\n    const cez = cz - ez;\r\n    const dez = dz - ez;\r\n\r\n    s1 = aex * bey;\r\n    c = splitter * aex;\r\n    ahi = c - (c - aex);\r\n    alo = aex - ahi;\r\n    c = splitter * bey;\r\n    bhi = c - (c - bey);\r\n    blo = bey - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = bex * aey;\r\n    c = splitter * bex;\r\n    ahi = c - (c - bex);\r\n    alo = bex - ahi;\r\n    c = splitter * aey;\r\n    bhi = c - (c - aey);\r\n    blo = aey - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    ab3 = _j + _i;\r\n    bvirt = ab3 - _j;\r\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\r\n    ab[3] = ab3;\r\n    s1 = bex * cey;\r\n    c = splitter * bex;\r\n    ahi = c - (c - bex);\r\n    alo = bex - ahi;\r\n    c = splitter * cey;\r\n    bhi = c - (c - cey);\r\n    blo = cey - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = cex * bey;\r\n    c = splitter * cex;\r\n    ahi = c - (c - cex);\r\n    alo = cex - ahi;\r\n    c = splitter * bey;\r\n    bhi = c - (c - bey);\r\n    blo = bey - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    bc3 = _j + _i;\r\n    bvirt = bc3 - _j;\r\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\r\n    bc[3] = bc3;\r\n    s1 = cex * dey;\r\n    c = splitter * cex;\r\n    ahi = c - (c - cex);\r\n    alo = cex - ahi;\r\n    c = splitter * dey;\r\n    bhi = c - (c - dey);\r\n    blo = dey - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = dex * cey;\r\n    c = splitter * dex;\r\n    ahi = c - (c - dex);\r\n    alo = dex - ahi;\r\n    c = splitter * cey;\r\n    bhi = c - (c - cey);\r\n    blo = cey - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    cd3 = _j + _i;\r\n    bvirt = cd3 - _j;\r\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\r\n    cd[3] = cd3;\r\n    s1 = dex * aey;\r\n    c = splitter * dex;\r\n    ahi = c - (c - dex);\r\n    alo = dex - ahi;\r\n    c = splitter * aey;\r\n    bhi = c - (c - aey);\r\n    blo = aey - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = aex * dey;\r\n    c = splitter * aex;\r\n    ahi = c - (c - aex);\r\n    alo = aex - ahi;\r\n    c = splitter * dey;\r\n    bhi = c - (c - dey);\r\n    blo = dey - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    da3 = _j + _i;\r\n    bvirt = da3 - _j;\r\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\r\n    da[3] = da3;\r\n    s1 = aex * cey;\r\n    c = splitter * aex;\r\n    ahi = c - (c - aex);\r\n    alo = aex - ahi;\r\n    c = splitter * cey;\r\n    bhi = c - (c - cey);\r\n    blo = cey - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = cex * aey;\r\n    c = splitter * cex;\r\n    ahi = c - (c - cex);\r\n    alo = cex - ahi;\r\n    c = splitter * aey;\r\n    bhi = c - (c - aey);\r\n    blo = aey - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    ac3 = _j + _i;\r\n    bvirt = ac3 - _j;\r\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\r\n    ac[3] = ac3;\r\n    s1 = bex * dey;\r\n    c = splitter * bex;\r\n    ahi = c - (c - bex);\r\n    alo = bex - ahi;\r\n    c = splitter * dey;\r\n    bhi = c - (c - dey);\r\n    blo = dey - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = dex * bey;\r\n    c = splitter * dex;\r\n    ahi = c - (c - dex);\r\n    alo = dex - ahi;\r\n    c = splitter * bey;\r\n    bhi = c - (c - bey);\r\n    blo = bey - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    bd3 = _j + _i;\r\n    bvirt = bd3 - _j;\r\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\r\n    bd[3] = bd3;\r\n\r\n    const finlen = sum(\r\n        sum(\r\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\r\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\r\n        sum(\r\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\r\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\r\n\r\n    let det = estimate(finlen, fin);\r\n    let errbound = isperrboundB * permanent;\r\n    if (det >= errbound || -det >= errbound) {\r\n        return det;\r\n    }\r\n\r\n    bvirt = ax - aex;\r\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\r\n    bvirt = ay - aey;\r\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\r\n    bvirt = az - aez;\r\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\r\n    bvirt = bx - bex;\r\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\r\n    bvirt = by - bey;\r\n    beytail = by - (bey + bvirt) + (bvirt - ey);\r\n    bvirt = bz - bez;\r\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\r\n    bvirt = cx - cex;\r\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\r\n    bvirt = cy - cey;\r\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\r\n    bvirt = cz - cez;\r\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\r\n    bvirt = dx - dex;\r\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\r\n    bvirt = dy - dey;\r\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\r\n    bvirt = dz - dez;\r\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\r\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\r\n        bextail === 0 && beytail === 0 && beztail === 0 &&\r\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\r\n        dextail === 0 && deytail === 0 && deztail === 0) {\r\n        return det;\r\n    }\r\n\r\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\r\n\r\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\r\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\r\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\r\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\r\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\r\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\r\n    det +=\r\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\r\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\r\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\r\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\r\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\r\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\r\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\r\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\r\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\r\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\r\n\r\n    if (det >= errbound || -det >= errbound) {\r\n        return det;\r\n    }\r\n\r\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\r\n}\r\n\r\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\r\n    const aex = ax - ex;\r\n    const bex = bx - ex;\r\n    const cex = cx - ex;\r\n    const dex = dx - ex;\r\n    const aey = ay - ey;\r\n    const bey = by - ey;\r\n    const cey = cy - ey;\r\n    const dey = dy - ey;\r\n    const aez = az - ez;\r\n    const bez = bz - ez;\r\n    const cez = cz - ez;\r\n    const dez = dz - ez;\r\n\r\n    const aexbey = aex * bey;\r\n    const bexaey = bex * aey;\r\n    const ab = aexbey - bexaey;\r\n    const bexcey = bex * cey;\r\n    const cexbey = cex * bey;\r\n    const bc = bexcey - cexbey;\r\n    const cexdey = cex * dey;\r\n    const dexcey = dex * cey;\r\n    const cd = cexdey - dexcey;\r\n    const dexaey = dex * aey;\r\n    const aexdey = aex * dey;\r\n    const da = dexaey - aexdey;\r\n    const aexcey = aex * cey;\r\n    const cexaey = cex * aey;\r\n    const ac = aexcey - cexaey;\r\n    const bexdey = bex * dey;\r\n    const dexbey = dex * bey;\r\n    const bd = bexdey - dexbey;\r\n\r\n    const alift = aex * aex + aey * aey + aez * aez;\r\n    const blift = bex * bex + bey * bey + bez * bez;\r\n    const clift = cex * cex + cey * cey + cez * cez;\r\n    const dlift = dex * dex + dey * dey + dez * dez;\r\n\r\n    const det =\r\n        (clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab)) +\r\n        (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\r\n\r\n    const aezplus = Math.abs(aez);\r\n    const bezplus = Math.abs(bez);\r\n    const cezplus = Math.abs(cez);\r\n    const dezplus = Math.abs(dez);\r\n    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\r\n    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\r\n    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\r\n    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\r\n    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\r\n    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\r\n    const permanent =\r\n        (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift +\r\n        (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift +\r\n        (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift +\r\n        (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\r\n\r\n    const errbound = isperrboundA * permanent;\r\n    if (det > errbound || -det > errbound) {\r\n        return det;\r\n    }\r\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\r\n}\r\n\r\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\r\n    const aex = pax - pex;\r\n    const bex = pbx - pex;\r\n    const cex = pcx - pex;\r\n    const dex = pdx - pex;\r\n    const aey = pay - pey;\r\n    const bey = pby - pey;\r\n    const cey = pcy - pey;\r\n    const dey = pdy - pey;\r\n    const aez = paz - pez;\r\n    const bez = pbz - pez;\r\n    const cez = pcz - pez;\r\n    const dez = pdz - pez;\r\n\r\n    const ab = aex * bey - bex * aey;\r\n    const bc = bex * cey - cex * bey;\r\n    const cd = cex * dey - dex * cey;\r\n    const da = dex * aey - aex * dey;\r\n    const ac = aex * cey - cex * aey;\r\n    const bd = bex * dey - dex * bey;\r\n\r\n    const abc = aez * bc - bez * ac + cez * ab;\r\n    const bcd = bez * cd - cez * bd + dez * bc;\r\n    const cda = cez * da + dez * ac + aez * cd;\r\n    const dab = dez * ab + aez * bd + bez * da;\r\n\r\n    const alift = aex * aex + aey * aey + aez * aez;\r\n    const blift = bex * bex + bey * bey + bez * bez;\r\n    const clift = cex * cex + cey * cey + cez * cez;\r\n    const dlift = dex * dex + dey * dey + dez * dez;\r\n\r\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\r\n}\r\n", "\r\nconst EPSILON = Math.pow(2, -52);\r\nconst EDGE_STACK = new Uint32Array(512);\r\n\r\nimport {orient2d} from 'robust-predicates';\r\n\r\nexport default class Delaunator {\r\n\r\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\r\n        const n = points.length;\r\n        const coords = new Float64Array(n * 2);\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            const p = points[i];\r\n            coords[2 * i] = getX(p);\r\n            coords[2 * i + 1] = getY(p);\r\n        }\r\n\r\n        return new Delaunator(coords);\r\n    }\r\n\r\n    constructor(coords) {\r\n        const n = coords.length >> 1;\r\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\r\n\r\n        this.coords = coords;\r\n\r\n        // arrays that will store the triangulation graph\r\n        const maxTriangles = Math.max(2 * n - 5, 0);\r\n        this._triangles = new Uint32Array(maxTriangles * 3);\r\n        this._halfedges = new Int32Array(maxTriangles * 3);\r\n\r\n        // temporary arrays for tracking the edges of the advancing convex hull\r\n        this._hashSize = Math.ceil(Math.sqrt(n));\r\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\r\n        this._hullNext = new Uint32Array(n); // edge to next edge\r\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\r\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\r\n\r\n        // temporary arrays for sorting points\r\n        this._ids = new Uint32Array(n);\r\n        this._dists = new Float64Array(n);\r\n\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\r\n        const n = coords.length >> 1;\r\n\r\n        // populate an array of point indices; calculate input data bbox\r\n        let minX = Infinity;\r\n        let minY = Infinity;\r\n        let maxX = -Infinity;\r\n        let maxY = -Infinity;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            const x = coords[2 * i];\r\n            const y = coords[2 * i + 1];\r\n            if (x < minX) minX = x;\r\n            if (y < minY) minY = y;\r\n            if (x > maxX) maxX = x;\r\n            if (y > maxY) maxY = y;\r\n            this._ids[i] = i;\r\n        }\r\n        const cx = (minX + maxX) / 2;\r\n        const cy = (minY + maxY) / 2;\r\n\r\n        let minDist = Infinity;\r\n        let i0, i1, i2;\r\n\r\n        // pick a seed point close to the center\r\n        for (let i = 0; i < n; i++) {\r\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\r\n            if (d < minDist) {\r\n                i0 = i;\r\n                minDist = d;\r\n            }\r\n        }\r\n        const i0x = coords[2 * i0];\r\n        const i0y = coords[2 * i0 + 1];\r\n\r\n        minDist = Infinity;\r\n\r\n        // find the point closest to the seed\r\n        for (let i = 0; i < n; i++) {\r\n            if (i === i0) continue;\r\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\r\n            if (d < minDist && d > 0) {\r\n                i1 = i;\r\n                minDist = d;\r\n            }\r\n        }\r\n        let i1x = coords[2 * i1];\r\n        let i1y = coords[2 * i1 + 1];\r\n\r\n        let minRadius = Infinity;\r\n\r\n        // find the third point which forms the smallest circumcircle with the first two\r\n        for (let i = 0; i < n; i++) {\r\n            if (i === i0 || i === i1) continue;\r\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\r\n            if (r < minRadius) {\r\n                i2 = i;\r\n                minRadius = r;\r\n            }\r\n        }\r\n        let i2x = coords[2 * i2];\r\n        let i2y = coords[2 * i2 + 1];\r\n\r\n        if (minRadius === Infinity) {\r\n            // order collinear points by dx (or dy if all x are identical)\r\n            // and return the list as a hull\r\n            for (let i = 0; i < n; i++) {\r\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\r\n            }\r\n            quicksort(this._ids, this._dists, 0, n - 1);\r\n            const hull = new Uint32Array(n);\r\n            let j = 0;\r\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\r\n                const id = this._ids[i];\r\n                if (this._dists[id] > d0) {\r\n                    hull[j++] = id;\r\n                    d0 = this._dists[id];\r\n                }\r\n            }\r\n            this.hull = hull.subarray(0, j);\r\n            this.triangles = new Uint32Array(0);\r\n            this.halfedges = new Uint32Array(0);\r\n            return;\r\n        }\r\n\r\n        // swap the order of the seed points for counter-clockwise orientation\r\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\r\n            const i = i1;\r\n            const x = i1x;\r\n            const y = i1y;\r\n            i1 = i2;\r\n            i1x = i2x;\r\n            i1y = i2y;\r\n            i2 = i;\r\n            i2x = x;\r\n            i2y = y;\r\n        }\r\n\r\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\r\n        this._cx = center.x;\r\n        this._cy = center.y;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\r\n        }\r\n\r\n        // sort the points by distance from the seed triangle circumcenter\r\n        quicksort(this._ids, this._dists, 0, n - 1);\r\n\r\n        // set up the seed triangle as the starting hull\r\n        this._hullStart = i0;\r\n        let hullSize = 3;\r\n\r\n        hullNext[i0] = hullPrev[i2] = i1;\r\n        hullNext[i1] = hullPrev[i0] = i2;\r\n        hullNext[i2] = hullPrev[i1] = i0;\r\n\r\n        hullTri[i0] = 0;\r\n        hullTri[i1] = 1;\r\n        hullTri[i2] = 2;\r\n\r\n        hullHash.fill(-1);\r\n        hullHash[this._hashKey(i0x, i0y)] = i0;\r\n        hullHash[this._hashKey(i1x, i1y)] = i1;\r\n        hullHash[this._hashKey(i2x, i2y)] = i2;\r\n\r\n        this.trianglesLen = 0;\r\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\r\n\r\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\r\n            const i = this._ids[k];\r\n            const x = coords[2 * i];\r\n            const y = coords[2 * i + 1];\r\n\r\n            // skip near-duplicate points\r\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\r\n            xp = x;\r\n            yp = y;\r\n\r\n            // skip seed triangle points\r\n            if (i === i0 || i === i1 || i === i2) continue;\r\n\r\n            // find a visible edge on the convex hull using edge hash\r\n            let start = 0;\r\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\r\n                start = hullHash[(key + j) % this._hashSize];\r\n                if (start !== -1 && start !== hullNext[start]) break;\r\n            }\r\n\r\n            start = hullPrev[start];\r\n            let e = start, q;\r\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\r\n                e = q;\r\n                if (e === start) {\r\n                    e = -1;\r\n                    break;\r\n                }\r\n            }\r\n            if (e === -1) continue; // likely a near-duplicate point; skip it\r\n\r\n            // add the first triangle from the point\r\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\r\n\r\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\r\n            hullTri[i] = this._legalize(t + 2);\r\n            hullTri[e] = t; // keep track of boundary triangles on the hull\r\n            hullSize++;\r\n\r\n            // walk forward through the hull, adding more triangles and flipping recursively\r\n            let n = hullNext[e];\r\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\r\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\r\n                hullTri[i] = this._legalize(t + 2);\r\n                hullNext[n] = n; // mark as removed\r\n                hullSize--;\r\n                n = q;\r\n            }\r\n\r\n            // walk backward from the other side, adding more triangles and flipping\r\n            if (e === start) {\r\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\r\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\r\n                    this._legalize(t + 2);\r\n                    hullTri[q] = t;\r\n                    hullNext[e] = e; // mark as removed\r\n                    hullSize--;\r\n                    e = q;\r\n                }\r\n            }\r\n\r\n            // update the hull indices\r\n            this._hullStart = hullPrev[i] = e;\r\n            hullNext[e] = hullPrev[n] = i;\r\n            hullNext[i] = n;\r\n\r\n            // save the two new edges in the hash table\r\n            hullHash[this._hashKey(x, y)] = i;\r\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\r\n        }\r\n\r\n        this.hull = new Uint32Array(hullSize);\r\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\r\n            this.hull[i] = e;\r\n            e = hullNext[e];\r\n        }\r\n\r\n        // trim typed triangle mesh arrays\r\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\r\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\r\n    }\r\n\r\n    _hashKey(x, y) {\r\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\r\n    }\r\n\r\n    _legalize(a) {\r\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\r\n\r\n        let i = 0;\r\n        let ar = 0;\r\n\r\n        // recursion eliminated with a fixed-size stack\r\n        while (true) {\r\n            const b = halfedges[a];\r\n\r\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\r\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\r\n             * then do the same check/flip recursively for the new pair of triangles\r\n             *\r\n             *           pl                    pl\r\n             *          /||\\                  /  \\\r\n             *       al/ || \\bl            al/    \\a\r\n             *        /  ||  \\              /      \\\r\n             *       /  a||b  \\    flip    /___ar___\\\r\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\r\n             *        \\  ||  /              \\      /\r\n             *       ar\\ || /br             b\\    /br\r\n             *          \\||/                  \\  /\r\n             *           pr                    pr\r\n             */\r\n            const a0 = a - a % 3;\r\n            ar = a0 + (a + 2) % 3;\r\n\r\n            if (b === -1) { // convex hull edge\r\n                if (i === 0) break;\r\n                a = EDGE_STACK[--i];\r\n                continue;\r\n            }\r\n\r\n            const b0 = b - b % 3;\r\n            const al = a0 + (a + 1) % 3;\r\n            const bl = b0 + (b + 2) % 3;\r\n\r\n            const p0 = triangles[ar];\r\n            const pr = triangles[a];\r\n            const pl = triangles[al];\r\n            const p1 = triangles[bl];\r\n\r\n            const illegal = inCircle(\r\n                coords[2 * p0], coords[2 * p0 + 1],\r\n                coords[2 * pr], coords[2 * pr + 1],\r\n                coords[2 * pl], coords[2 * pl + 1],\r\n                coords[2 * p1], coords[2 * p1 + 1]);\r\n\r\n            if (illegal) {\r\n                triangles[a] = p1;\r\n                triangles[b] = p0;\r\n\r\n                const hbl = halfedges[bl];\r\n\r\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\r\n                if (hbl === -1) {\r\n                    let e = this._hullStart;\r\n                    do {\r\n                        if (this._hullTri[e] === bl) {\r\n                            this._hullTri[e] = a;\r\n                            break;\r\n                        }\r\n                        e = this._hullPrev[e];\r\n                    } while (e !== this._hullStart);\r\n                }\r\n                this._link(a, hbl);\r\n                this._link(b, halfedges[ar]);\r\n                this._link(ar, bl);\r\n\r\n                const br = b0 + (b + 1) % 3;\r\n\r\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\r\n                if (i < EDGE_STACK.length) {\r\n                    EDGE_STACK[i++] = br;\r\n                }\r\n            } else {\r\n                if (i === 0) break;\r\n                a = EDGE_STACK[--i];\r\n            }\r\n        }\r\n\r\n        return ar;\r\n    }\r\n\r\n    _link(a, b) {\r\n        this._halfedges[a] = b;\r\n        if (b !== -1) this._halfedges[b] = a;\r\n    }\r\n\r\n    // add a new triangle given vertex indices and adjacent half-edge ids\r\n    _addTriangle(i0, i1, i2, a, b, c) {\r\n        const t = this.trianglesLen;\r\n\r\n        this._triangles[t] = i0;\r\n        this._triangles[t + 1] = i1;\r\n        this._triangles[t + 2] = i2;\r\n\r\n        this._link(t, a);\r\n        this._link(t + 1, b);\r\n        this._link(t + 2, c);\r\n\r\n        this.trianglesLen += 3;\r\n\r\n        return t;\r\n    }\r\n}\r\n\r\n// monotonically increases with real angle, but doesn't need expensive trigonometry\r\nfunction pseudoAngle(dx, dy) {\r\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\r\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\r\n}\r\n\r\nfunction dist(ax, ay, bx, by) {\r\n    const dx = ax - bx;\r\n    const dy = ay - by;\r\n    return dx * dx + dy * dy;\r\n}\r\n\r\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\r\n    const dx = ax - px;\r\n    const dy = ay - py;\r\n    const ex = bx - px;\r\n    const ey = by - py;\r\n    const fx = cx - px;\r\n    const fy = cy - py;\r\n\r\n    const ap = dx * dx + dy * dy;\r\n    const bp = ex * ex + ey * ey;\r\n    const cp = fx * fx + fy * fy;\r\n\r\n    return dx * (ey * cp - bp * fy) -\r\n           dy * (ex * cp - bp * fx) +\r\n           ap * (ex * fy - ey * fx) < 0;\r\n}\r\n\r\nfunction circumradius(ax, ay, bx, by, cx, cy) {\r\n    const dx = bx - ax;\r\n    const dy = by - ay;\r\n    const ex = cx - ax;\r\n    const ey = cy - ay;\r\n\r\n    const bl = dx * dx + dy * dy;\r\n    const cl = ex * ex + ey * ey;\r\n    const d = 0.5 / (dx * ey - dy * ex);\r\n\r\n    const x = (ey * bl - dy * cl) * d;\r\n    const y = (dx * cl - ex * bl) * d;\r\n\r\n    return x * x + y * y;\r\n}\r\n\r\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\r\n    const dx = bx - ax;\r\n    const dy = by - ay;\r\n    const ex = cx - ax;\r\n    const ey = cy - ay;\r\n\r\n    const bl = dx * dx + dy * dy;\r\n    const cl = ex * ex + ey * ey;\r\n    const d = 0.5 / (dx * ey - dy * ex);\r\n\r\n    const x = ax + (ey * bl - dy * cl) * d;\r\n    const y = ay + (dx * cl - ex * bl) * d;\r\n\r\n    return {x, y};\r\n}\r\n\r\nfunction quicksort(ids, dists, left, right) {\r\n    if (right - left <= 20) {\r\n        for (let i = left + 1; i <= right; i++) {\r\n            const temp = ids[i];\r\n            const tempDist = dists[temp];\r\n            let j = i - 1;\r\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\r\n            ids[j + 1] = temp;\r\n        }\r\n    } else {\r\n        const median = (left + right) >> 1;\r\n        let i = left + 1;\r\n        let j = right;\r\n        swap(ids, median, i);\r\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\r\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\r\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\r\n\r\n        const temp = ids[i];\r\n        const tempDist = dists[temp];\r\n        while (true) {\r\n            do i++; while (dists[ids[i]] < tempDist);\r\n            do j--; while (dists[ids[j]] > tempDist);\r\n            if (j < i) break;\r\n            swap(ids, i, j);\r\n        }\r\n        ids[left + 1] = ids[j];\r\n        ids[j] = temp;\r\n\r\n        if (right - i + 1 >= j - left) {\r\n            quicksort(ids, dists, i, right);\r\n            quicksort(ids, dists, left, j - 1);\r\n        } else {\r\n            quicksort(ids, dists, left, j - 1);\r\n            quicksort(ids, dists, i, right);\r\n        }\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    const tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n\r\nfunction defaultGetX(p) {\r\n    return p[0];\r\n}\r\nfunction defaultGetY(p) {\r\n    return p[1];\r\n}\r\n", "const epsilon = 1e-6;\r\n\r\nexport default class Path {\r\n  constructor() {\r\n    this._x0 = this._y0 = // start of current subpath\r\n    this._x1 = this._y1 = null; // end of current subpath\r\n    this._ = \"\";\r\n  }\r\n  moveTo(x, y) {\r\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\r\n  }\r\n  closePath() {\r\n    if (this._x1 !== null) {\r\n      this._x1 = this._x0, this._y1 = this._y0;\r\n      this._ += \"Z\";\r\n    }\r\n  }\r\n  lineTo(x, y) {\r\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\r\n  }\r\n  arc(x, y, r) {\r\n    x = +x, y = +y, r = +r;\r\n    const x0 = x + r;\r\n    const y0 = y;\r\n    if (r < 0) throw new Error(\"negative radius\");\r\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\r\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\r\n    if (!r) return;\r\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\r\n  }\r\n  rect(x, y, w, h) {\r\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\r\n  }\r\n  value() {\r\n    return this._ || null;\r\n  }\r\n}\r\n", "export default class Polygon {\r\n  constructor() {\r\n    this._ = [];\r\n  }\r\n  moveTo(x, y) {\r\n    this._.push([x, y]);\r\n  }\r\n  closePath() {\r\n    this._.push(this._[0].slice());\r\n  }\r\n  lineTo(x, y) {\r\n    this._.push([x, y]);\r\n  }\r\n  value() {\r\n    return this._.length ? this._ : null;\r\n  }\r\n}\r\n", "import Path from \"./path.js\";\r\nimport Polygon from \"./polygon.js\";\r\n\r\nexport default class Voronoi {\r\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\r\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\r\n    this.delaunay = delaunay;\r\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\r\n    this.vectors = new Float64Array(delaunay.points.length * 2);\r\n    this.xmax = xmax, this.xmin = xmin;\r\n    this.ymax = ymax, this.ymin = ymin;\r\n    this._init();\r\n  }\r\n  update() {\r\n    this.delaunay.update();\r\n    this._init();\r\n    return this;\r\n  }\r\n  _init() {\r\n    const {delaunay: {points, hull, triangles}, vectors} = this;\r\n    let bx, by; // lazily computed barycenter of the hull\r\n\r\n    // Compute circumcenters.\r\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\r\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\r\n      const t1 = triangles[i] * 2;\r\n      const t2 = triangles[i + 1] * 2;\r\n      const t3 = triangles[i + 2] * 2;\r\n      const x1 = points[t1];\r\n      const y1 = points[t1 + 1];\r\n      const x2 = points[t2];\r\n      const y2 = points[t2 + 1];\r\n      const x3 = points[t3];\r\n      const y3 = points[t3 + 1];\r\n\r\n      const dx = x2 - x1;\r\n      const dy = y2 - y1;\r\n      const ex = x3 - x1;\r\n      const ey = y3 - y1;\r\n      const ab = (dx * ey - dy * ex) * 2;\r\n\r\n      if (Math.abs(ab) < 1e-9) {\r\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\r\n        // direction orthogonal to the halfedge and away from the “center” of\r\n        // the diagram <bx, by>, defined as the hull’s barycenter.\r\n        if (bx === undefined) {\r\n          bx = by = 0;\r\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\r\n          bx /= hull.length, by /= hull.length;\r\n        }\r\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\r\n        x = (x1 + x3) / 2 - a * ey;\r\n        y = (y1 + y3) / 2 + a * ex;\r\n      } else {\r\n        const d = 1 / ab;\r\n        const bl = dx * dx + dy * dy;\r\n        const cl = ex * ex + ey * ey;\r\n        x = x1 + (ey * bl - dy * cl) * d;\r\n        y = y1 + (dx * cl - ex * bl) * d;\r\n      }\r\n      circumcenters[j] = x;\r\n      circumcenters[j + 1] = y;\r\n    }\r\n\r\n    // Compute exterior cell rays.\r\n    let h = hull[hull.length - 1];\r\n    let p0, p1 = h * 4;\r\n    let x0, x1 = points[2 * h];\r\n    let y0, y1 = points[2 * h + 1];\r\n    vectors.fill(0);\r\n    for (let i = 0; i < hull.length; ++i) {\r\n      h = hull[i];\r\n      p0 = p1, x0 = x1, y0 = y1;\r\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\r\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\r\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\r\n    }\r\n  }\r\n  render(context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\r\n    if (hull.length <= 1) return null;\r\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\r\n      const j = halfedges[i];\r\n      if (j < i) continue;\r\n      const ti = Math.floor(i / 3) * 2;\r\n      const tj = Math.floor(j / 3) * 2;\r\n      const xi = circumcenters[ti];\r\n      const yi = circumcenters[ti + 1];\r\n      const xj = circumcenters[tj];\r\n      const yj = circumcenters[tj + 1];\r\n      this._renderSegment(xi, yi, xj, yj, context);\r\n    }\r\n    let h0, h1 = hull[hull.length - 1];\r\n    for (let i = 0; i < hull.length; ++i) {\r\n      h0 = h1, h1 = hull[i];\r\n      const t = Math.floor(inedges[h1] / 3) * 2;\r\n      const x = circumcenters[t];\r\n      const y = circumcenters[t + 1];\r\n      const v = h0 * 4;\r\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\r\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\r\n    }\r\n    return buffer && buffer.value();\r\n  }\r\n  renderBounds(context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\r\n    return buffer && buffer.value();\r\n  }\r\n  renderCell(i, context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const points = this._clip(i);\r\n    if (points === null || !points.length) return;\r\n    context.moveTo(points[0], points[1]);\r\n    let n = points.length;\r\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\r\n    for (let i = 2; i < n; i += 2) {\r\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\r\n        context.lineTo(points[i], points[i + 1]);\r\n    }\r\n    context.closePath();\r\n    return buffer && buffer.value();\r\n  }\r\n  *cellPolygons() {\r\n    const {delaunay: {points}} = this;\r\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\r\n      const cell = this.cellPolygon(i);\r\n      if (cell) cell.index = i, yield cell;\r\n    }\r\n  }\r\n  cellPolygon(i) {\r\n    const polygon = new Polygon;\r\n    this.renderCell(i, polygon);\r\n    return polygon.value();\r\n  }\r\n  _renderSegment(x0, y0, x1, y1, context) {\r\n    let S;\r\n    const c0 = this._regioncode(x0, y0);\r\n    const c1 = this._regioncode(x1, y1);\r\n    if (c0 === 0 && c1 === 0) {\r\n      context.moveTo(x0, y0);\r\n      context.lineTo(x1, y1);\r\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\r\n      context.moveTo(S[0], S[1]);\r\n      context.lineTo(S[2], S[3]);\r\n    }\r\n  }\r\n  contains(i, x, y) {\r\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\r\n    return this.delaunay._step(i, x, y) === i;\r\n  }\r\n  *neighbors(i) {\r\n    const ci = this._clip(i);\r\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\r\n      const cj = this._clip(j);\r\n      // find the common edge\r\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\r\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\r\n          if (ci[ai] === cj[aj]\r\n              && ci[ai + 1] === cj[aj + 1]\r\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\r\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\r\n            yield j;\r\n            break loop;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _cell(i) {\r\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\r\n    const e0 = inedges[i];\r\n    if (e0 === -1) return null; // coincident point\r\n    const points = [];\r\n    let e = e0;\r\n    do {\r\n      const t = Math.floor(e / 3);\r\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\r\n      e = e % 3 === 2 ? e - 2 : e + 1;\r\n      if (triangles[e] !== i) break; // bad triangulation\r\n      e = halfedges[e];\r\n    } while (e !== e0 && e !== -1);\r\n    return points;\r\n  }\r\n  _clip(i) {\r\n    // degenerate case (1 valid point: return the box)\r\n    if (i === 0 && this.delaunay.hull.length === 1) {\r\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\r\n    }\r\n    const points = this._cell(i);\r\n    if (points === null) return null;\r\n    const {vectors: V} = this;\r\n    const v = i * 4;\r\n    return this._simplify(V[v] || V[v + 1]\r\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\r\n        : this._clipFinite(i, points));\r\n  }\r\n  _clipFinite(i, points) {\r\n    const n = points.length;\r\n    let P = null;\r\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\r\n    let c0, c1 = this._regioncode(x1, y1);\r\n    let e0, e1 = 0;\r\n    for (let j = 0; j < n; j += 2) {\r\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\r\n      c0 = c1, c1 = this._regioncode(x1, y1);\r\n      if (c0 === 0 && c1 === 0) {\r\n        e0 = e1, e1 = 0;\r\n        if (P) P.push(x1, y1);\r\n        else P = [x1, y1];\r\n      } else {\r\n        let S, sx0, sy0, sx1, sy1;\r\n        if (c0 === 0) {\r\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\r\n          [sx0, sy0, sx1, sy1] = S;\r\n        } else {\r\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\r\n          [sx1, sy1, sx0, sy0] = S;\r\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\r\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\r\n          if (P) P.push(sx0, sy0);\r\n          else P = [sx0, sy0];\r\n        }\r\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\r\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\r\n        if (P) P.push(sx1, sy1);\r\n        else P = [sx1, sy1];\r\n      }\r\n    }\r\n    if (P) {\r\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\r\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\r\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\r\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\r\n    }\r\n    return P;\r\n  }\r\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\r\n    // for more robustness, always consider the segment in the same order\r\n    const flip = c0 < c1;\r\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\r\n    while (true) {\r\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\r\n      if (c0 & c1) return null;\r\n      let x, y, c = c0 || c1;\r\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\r\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\r\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\r\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\r\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\r\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\r\n    }\r\n  }\r\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\r\n    let P = Array.from(points), p;\r\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\r\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\r\n    if (P = this._clipFinite(i, P)) {\r\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\r\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\r\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\r\n      }\r\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\r\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\r\n    }\r\n    return P;\r\n  }\r\n  _edge(i, e0, e1, P, j) {\r\n    while (e0 !== e1) {\r\n      let x, y;\r\n      switch (e0) {\r\n        case 0b0101: e0 = 0b0100; continue; // top-left\r\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\r\n        case 0b0110: e0 = 0b0010; continue; // top-right\r\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\r\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\r\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\r\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\r\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\r\n      }\r\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\r\n      // undefined, the conditional statement will be executed.\r\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\r\n        P.splice(j, 0, x, y), j += 2;\r\n      }\r\n    }\r\n    return j;\r\n  }\r\n  _project(x0, y0, vx, vy) {\r\n    let t = Infinity, c, x, y;\r\n    if (vy < 0) { // top\r\n      if (y0 <= this.ymin) return null;\r\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\r\n    } else if (vy > 0) { // bottom\r\n      if (y0 >= this.ymax) return null;\r\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\r\n    }\r\n    if (vx > 0) { // right\r\n      if (x0 >= this.xmax) return null;\r\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\r\n    } else if (vx < 0) { // left\r\n      if (x0 <= this.xmin) return null;\r\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\r\n    }\r\n    return [x, y];\r\n  }\r\n  _edgecode(x, y) {\r\n    return (x === this.xmin ? 0b0001\r\n        : x === this.xmax ? 0b0010 : 0b0000)\r\n        | (y === this.ymin ? 0b0100\r\n        : y === this.ymax ? 0b1000 : 0b0000);\r\n  }\r\n  _regioncode(x, y) {\r\n    return (x < this.xmin ? 0b0001\r\n        : x > this.xmax ? 0b0010 : 0b0000)\r\n        | (y < this.ymin ? 0b0100\r\n        : y > this.ymax ? 0b1000 : 0b0000);\r\n  }\r\n  _simplify(P) {\r\n    if (P && P.length > 4) {\r\n      for (let i = 0; i < P.length; i+= 2) {\r\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\r\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\r\n          P.splice(j, 2), i -= 2;\r\n        }\r\n      }\r\n      if (!P.length) P = null;\r\n    }\r\n    return P;\r\n  }\r\n}\r\n", "import Delaunator from \"delaunator\";\r\nimport Path from \"./path.js\";\r\nimport Polygon from \"./polygon.js\";\r\nimport Voronoi from \"./voronoi.js\";\r\n\r\nconst tau = 2 * Math.PI, pow = Math.pow;\r\n\r\nfunction pointX(p) {\r\n  return p[0];\r\n}\r\n\r\nfunction pointY(p) {\r\n  return p[1];\r\n}\r\n\r\n// A triangulation is collinear if all its triangles have a non-null area\r\nfunction collinear(d) {\r\n  const {triangles, coords} = d;\r\n  for (let i = 0; i < triangles.length; i += 3) {\r\n    const a = 2 * triangles[i],\r\n          b = 2 * triangles[i + 1],\r\n          c = 2 * triangles[i + 2],\r\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\r\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\r\n    if (cross > 1e-10) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction jitter(x, y, r) {\r\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\r\n}\r\n\r\nexport default class Delaunay {\r\n  static from(points, fx = pointX, fy = pointY, that) {\r\n    return new Delaunay(\"length\" in points\r\n        ? flatArray(points, fx, fy, that)\r\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\r\n  }\r\n  constructor(points) {\r\n    this._delaunator = new Delaunator(points);\r\n    this.inedges = new Int32Array(points.length / 2);\r\n    this._hullIndex = new Int32Array(points.length / 2);\r\n    this.points = this._delaunator.coords;\r\n    this._init();\r\n  }\r\n  update() {\r\n    this._delaunator.update();\r\n    this._init();\r\n    return this;\r\n  }\r\n  _init() {\r\n    const d = this._delaunator, points = this.points;\r\n\r\n    // check for collinear\r\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\r\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\r\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\r\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\r\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\r\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\r\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\r\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\r\n        points[2 * i] = p[0];\r\n        points[2 * i + 1] = p[1];\r\n      }\r\n      this._delaunator = new Delaunator(points);\r\n    } else {\r\n      delete this.collinear;\r\n    }\r\n\r\n    const halfedges = this.halfedges = this._delaunator.halfedges;\r\n    const hull = this.hull = this._delaunator.hull;\r\n    const triangles = this.triangles = this._delaunator.triangles;\r\n    const inedges = this.inedges.fill(-1);\r\n    const hullIndex = this._hullIndex.fill(-1);\r\n\r\n    // Compute an index from each point to an (arbitrary) incoming halfedge\r\n    // Used to give the first neighbor of each point; for this reason,\r\n    // on the hull we give priority to exterior halfedges\r\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\r\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\r\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\r\n    }\r\n    for (let i = 0, n = hull.length; i < n; ++i) {\r\n      hullIndex[hull[i]] = i;\r\n    }\r\n\r\n    // degenerate case: 1 or 2 (distinct) points\r\n    if (hull.length <= 2 && hull.length > 0) {\r\n      this.triangles = new Int32Array(3).fill(-1);\r\n      this.halfedges = new Int32Array(3).fill(-1);\r\n      this.triangles[0] = hull[0];\r\n      inedges[hull[0]] = 1;\r\n      if (hull.length === 2) {\r\n        inedges[hull[1]] = 0;\r\n        this.triangles[1] = hull[1];\r\n        this.triangles[2] = hull[1];\r\n      }\r\n    }\r\n  }\r\n  voronoi(bounds) {\r\n    return new Voronoi(this, bounds);\r\n  }\r\n  *neighbors(i) {\r\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\r\n\r\n    // degenerate case with several collinear points\r\n    if (collinear) {\r\n      const l = collinear.indexOf(i);\r\n      if (l > 0) yield collinear[l - 1];\r\n      if (l < collinear.length - 1) yield collinear[l + 1];\r\n      return;\r\n    }\r\n\r\n    const e0 = inedges[i];\r\n    if (e0 === -1) return; // coincident point\r\n    let e = e0, p0 = -1;\r\n    do {\r\n      yield p0 = triangles[e];\r\n      e = e % 3 === 2 ? e - 2 : e + 1;\r\n      if (triangles[e] !== i) return; // bad triangulation\r\n      e = halfedges[e];\r\n      if (e === -1) {\r\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\r\n        if (p !== p0) yield p;\r\n        return;\r\n      }\r\n    } while (e !== e0);\r\n  }\r\n  find(x, y, i = 0) {\r\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\r\n    const i0 = i;\r\n    let c;\r\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\r\n    return c;\r\n  }\r\n  _step(i, x, y) {\r\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\r\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\r\n    let c = i;\r\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\r\n    const e0 = inedges[i];\r\n    let e = e0;\r\n    do {\r\n      let t = triangles[e];\r\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\r\n      if (dt < dc) dc = dt, c = t;\r\n      e = e % 3 === 2 ? e - 2 : e + 1;\r\n      if (triangles[e] !== i) break; // bad triangulation\r\n      e = halfedges[e];\r\n      if (e === -1) {\r\n        e = hull[(_hullIndex[i] + 1) % hull.length];\r\n        if (e !== t) {\r\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\r\n        }\r\n        break;\r\n      }\r\n    } while (e !== e0);\r\n    return c;\r\n  }\r\n  render(context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {points, halfedges, triangles} = this;\r\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\r\n      const j = halfedges[i];\r\n      if (j < i) continue;\r\n      const ti = triangles[i] * 2;\r\n      const tj = triangles[j] * 2;\r\n      context.moveTo(points[ti], points[ti + 1]);\r\n      context.lineTo(points[tj], points[tj + 1]);\r\n    }\r\n    this.renderHull(context);\r\n    return buffer && buffer.value();\r\n  }\r\n  renderPoints(context, r) {\r\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\r\n    r = r == undefined ? 2 : +r;\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {points} = this;\r\n    for (let i = 0, n = points.length; i < n; i += 2) {\r\n      const x = points[i], y = points[i + 1];\r\n      context.moveTo(x + r, y);\r\n      context.arc(x, y, r, 0, tau);\r\n    }\r\n    return buffer && buffer.value();\r\n  }\r\n  renderHull(context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {hull, points} = this;\r\n    const h = hull[0] * 2, n = hull.length;\r\n    context.moveTo(points[h], points[h + 1]);\r\n    for (let i = 1; i < n; ++i) {\r\n      const h = 2 * hull[i];\r\n      context.lineTo(points[h], points[h + 1]);\r\n    }\r\n    context.closePath();\r\n    return buffer && buffer.value();\r\n  }\r\n  hullPolygon() {\r\n    const polygon = new Polygon;\r\n    this.renderHull(polygon);\r\n    return polygon.value();\r\n  }\r\n  renderTriangle(i, context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {points, triangles} = this;\r\n    const t0 = triangles[i *= 3] * 2;\r\n    const t1 = triangles[i + 1] * 2;\r\n    const t2 = triangles[i + 2] * 2;\r\n    context.moveTo(points[t0], points[t0 + 1]);\r\n    context.lineTo(points[t1], points[t1 + 1]);\r\n    context.lineTo(points[t2], points[t2 + 1]);\r\n    context.closePath();\r\n    return buffer && buffer.value();\r\n  }\r\n  *trianglePolygons() {\r\n    const {triangles} = this;\r\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\r\n      yield this.trianglePolygon(i);\r\n    }\r\n  }\r\n  trianglePolygon(i) {\r\n    const polygon = new Polygon;\r\n    this.renderTriangle(i, polygon);\r\n    return polygon.value();\r\n  }\r\n}\r\n\r\nfunction flatArray(points, fx, fy, that) {\r\n  const n = points.length;\r\n  const array = new Float64Array(n * 2);\r\n  for (let i = 0; i < n; ++i) {\r\n    const p = points[i];\r\n    array[i * 2] = fx.call(that, p, i, points);\r\n    array[i * 2 + 1] = fy.call(that, p, i, points);\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction* flatIterable(points, fx, fy, that) {\r\n  let i = 0;\r\n  for (const p of points) {\r\n    yield fx.call(that, p, i, points);\r\n    yield fy.call(that, p, i, points);\r\n    ++i;\r\n  }\r\n}\r\n", "var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n", "import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n", "import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n", "export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();", "function responseBlob(response) {\r\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n  return response.blob();\r\n}\r\n\r\nexport default function(input, init) {\r\n  return fetch(input, init).then(responseBlob);\r\n}\r\n", "function responseArrayBuffer(response) {\r\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n  return response.arrayBuffer();\r\n}\r\n\r\nexport default function(input, init) {\r\n  return fetch(input, init).then(responseArrayBuffer);\r\n}\r\n", "function responseText(response) {\r\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n  return response.text();\r\n}\r\n\r\nexport default function(input, init) {\r\n  return fetch(input, init).then(responseText);\r\n}\r\n", "import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\r\nimport text from \"./text.js\";\r\n\r\nfunction dsvParse(parse) {\r\n  return function(input, init, row) {\r\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\r\n    return text(input, init).then(function(response) {\r\n      return parse(response, row);\r\n    });\r\n  };\r\n}\r\n\r\nexport default function dsv(delimiter, input, init, row) {\r\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\r\n  var format = dsvFormat(delimiter);\r\n  return text(input, init).then(function(response) {\r\n    return format.parse(response, row);\r\n  });\r\n}\r\n\r\nexport var csv = dsvParse(csvParse);\r\nexport var tsv = dsvParse(tsvParse);\r\n", "export default function(input, init) {\r\n  return new Promise(function(resolve, reject) {\r\n    var image = new Image;\r\n    for (var key in init) image[key] = init[key];\r\n    image.onerror = reject;\r\n    image.onload = function() { resolve(image); };\r\n    image.src = input;\r\n  });\r\n}\r\n", "function responseJson(response) {\r\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n  if (response.status === 204 || response.status === 205) return;\r\n  return response.json();\r\n}\r\n\r\nexport default function(input, init) {\r\n  return fetch(input, init).then(responseJson);\r\n}\r\n", "import text from \"./text.js\";\r\n\r\nfunction parser(type) {\r\n  return (input, init) => text(input, init)\r\n    .then(text => (new DOMParser).parseFromString(text, type));\r\n}\r\n\r\nexport default parser(\"application/xml\");\r\n\r\nexport var html = parser(\"text/html\");\r\n\r\nexport var svg = parser(\"image/svg+xml\");\r\n", "export default function(x, y) {\r\n  var nodes, strength = 1;\r\n\r\n  if (x == null) x = 0;\r\n  if (y == null) y = 0;\r\n\r\n  function force() {\r\n    var i,\r\n        n = nodes.length,\r\n        node,\r\n        sx = 0,\r\n        sy = 0;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      node = nodes[i], sx += node.x, sy += node.y;\r\n    }\r\n\r\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\r\n      node = nodes[i], node.x -= sx, node.y -= sy;\r\n    }\r\n  }\r\n\r\n  force.initialize = function(_) {\r\n    nodes = _;\r\n  };\r\n\r\n  force.x = function(_) {\r\n    return arguments.length ? (x = +_, force) : x;\r\n  };\r\n\r\n  force.y = function(_) {\r\n    return arguments.length ? (y = +_, force) : y;\r\n  };\r\n\r\n  force.strength = function(_) {\r\n    return arguments.length ? (strength = +_, force) : strength;\r\n  };\r\n\r\n  return force;\r\n}\r\n", "export default function(d) {\r\n  const x = +this._x.call(null, d),\r\n      y = +this._y.call(null, d);\r\n  return add(this.cover(x, y), x, y, d);\r\n}\r\n\r\nfunction add(tree, x, y, d) {\r\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\r\n\r\n  var parent,\r\n      node = tree._root,\r\n      leaf = {data: d},\r\n      x0 = tree._x0,\r\n      y0 = tree._y0,\r\n      x1 = tree._x1,\r\n      y1 = tree._y1,\r\n      xm,\r\n      ym,\r\n      xp,\r\n      yp,\r\n      right,\r\n      bottom,\r\n      i,\r\n      j;\r\n\r\n  // If the tree is empty, initialize the root as a leaf.\r\n  if (!node) return tree._root = leaf, tree;\r\n\r\n  // Find the existing leaf for the new point, or add it.\r\n  while (node.length) {\r\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\r\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\r\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\r\n  }\r\n\r\n  // Is the new point is exactly coincident with the existing point?\r\n  xp = +tree._x.call(null, node.data);\r\n  yp = +tree._y.call(null, node.data);\r\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\r\n\r\n  // Otherwise, split the leaf node until the old and new point are separated.\r\n  do {\r\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\r\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\r\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\r\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\r\n  return parent[j] = node, parent[i] = leaf, tree;\r\n}\r\n\r\nexport function addAll(data) {\r\n  var d, i, n = data.length,\r\n      x,\r\n      y,\r\n      xz = new Array(n),\r\n      yz = new Array(n),\r\n      x0 = Infinity,\r\n      y0 = Infinity,\r\n      x1 = -Infinity,\r\n      y1 = -Infinity;\r\n\r\n  // Compute the points and their extent.\r\n  for (i = 0; i < n; ++i) {\r\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\r\n    xz[i] = x;\r\n    yz[i] = y;\r\n    if (x < x0) x0 = x;\r\n    if (x > x1) x1 = x;\r\n    if (y < y0) y0 = y;\r\n    if (y > y1) y1 = y;\r\n  }\r\n\r\n  // If there were no (valid) points, abort.\r\n  if (x0 > x1 || y0 > y1) return this;\r\n\r\n  // Expand the tree to cover the new points.\r\n  this.cover(x0, y0).cover(x1, y1);\r\n\r\n  // Add the new points.\r\n  for (i = 0; i < n; ++i) {\r\n    add(this, xz[i], yz[i], data[i]);\r\n  }\r\n\r\n  return this;\r\n}\r\n", "export default function(x, y) {\r\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\r\n\r\n  var x0 = this._x0,\r\n      y0 = this._y0,\r\n      x1 = this._x1,\r\n      y1 = this._y1;\r\n\r\n  // If the quadtree has no extent, initialize them.\r\n  // Integer extent are necessary so that if we later double the extent,\r\n  // the existing quadrant boundaries don’t change due to floating point error!\r\n  if (isNaN(x0)) {\r\n    x1 = (x0 = Math.floor(x)) + 1;\r\n    y1 = (y0 = Math.floor(y)) + 1;\r\n  }\r\n\r\n  // Otherwise, double repeatedly to cover.\r\n  else {\r\n    var z = x1 - x0 || 1,\r\n        node = this._root,\r\n        parent,\r\n        i;\r\n\r\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\r\n      i = (y < y0) << 1 | (x < x0);\r\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\r\n      switch (i) {\r\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\r\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\r\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\r\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\r\n      }\r\n    }\r\n\r\n    if (this._root && this._root.length) this._root = node;\r\n  }\r\n\r\n  this._x0 = x0;\r\n  this._y0 = y0;\r\n  this._x1 = x1;\r\n  this._y1 = y1;\r\n  return this;\r\n}\r\n", "export default function() {\r\n  var data = [];\r\n  this.visit(function(node) {\r\n    if (!node.length) do data.push(node.data); while (node = node.next)\r\n  });\r\n  return data;\r\n}\r\n", "export default function(_) {\r\n  return arguments.length\r\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\r\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\r\n}\r\n", "export default function(node, x0, y0, x1, y1) {\r\n  this.node = node;\r\n  this.x0 = x0;\r\n  this.y0 = y0;\r\n  this.x1 = x1;\r\n  this.y1 = y1;\r\n}\r\n", "import Quad from \"./quad.js\";\r\n\r\nexport default function(x, y, radius) {\r\n  var data,\r\n      x0 = this._x0,\r\n      y0 = this._y0,\r\n      x1,\r\n      y1,\r\n      x2,\r\n      y2,\r\n      x3 = this._x1,\r\n      y3 = this._y1,\r\n      quads = [],\r\n      node = this._root,\r\n      q,\r\n      i;\r\n\r\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\r\n  if (radius == null) radius = Infinity;\r\n  else {\r\n    x0 = x - radius, y0 = y - radius;\r\n    x3 = x + radius, y3 = y + radius;\r\n    radius *= radius;\r\n  }\r\n\r\n  while (q = quads.pop()) {\r\n\r\n    // Stop searching if this quadrant can’t contain a closer node.\r\n    if (!(node = q.node)\r\n        || (x1 = q.x0) > x3\r\n        || (y1 = q.y0) > y3\r\n        || (x2 = q.x1) < x0\r\n        || (y2 = q.y1) < y0) continue;\r\n\r\n    // Bisect the current quadrant.\r\n    if (node.length) {\r\n      var xm = (x1 + x2) / 2,\r\n          ym = (y1 + y2) / 2;\r\n\r\n      quads.push(\r\n        new Quad(node[3], xm, ym, x2, y2),\r\n        new Quad(node[2], x1, ym, xm, y2),\r\n        new Quad(node[1], xm, y1, x2, ym),\r\n        new Quad(node[0], x1, y1, xm, ym)\r\n      );\r\n\r\n      // Visit the closest quadrant first.\r\n      if (i = (y >= ym) << 1 | (x >= xm)) {\r\n        q = quads[quads.length - 1];\r\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\r\n        quads[quads.length - 1 - i] = q;\r\n      }\r\n    }\r\n\r\n    // Visit this point. (Visiting coincident points isn’t necessary!)\r\n    else {\r\n      var dx = x - +this._x.call(null, node.data),\r\n          dy = y - +this._y.call(null, node.data),\r\n          d2 = dx * dx + dy * dy;\r\n      if (d2 < radius) {\r\n        var d = Math.sqrt(radius = d2);\r\n        x0 = x - d, y0 = y - d;\r\n        x3 = x + d, y3 = y + d;\r\n        data = node.data;\r\n      }\r\n    }\r\n  }\r\n\r\n  return data;\r\n}\r\n", "export default function(d) {\r\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\r\n\r\n  var parent,\r\n      node = this._root,\r\n      retainer,\r\n      previous,\r\n      next,\r\n      x0 = this._x0,\r\n      y0 = this._y0,\r\n      x1 = this._x1,\r\n      y1 = this._y1,\r\n      x,\r\n      y,\r\n      xm,\r\n      ym,\r\n      right,\r\n      bottom,\r\n      i,\r\n      j;\r\n\r\n  // If the tree is empty, initialize the root as a leaf.\r\n  if (!node) return this;\r\n\r\n  // Find the leaf node for the point.\r\n  // While descending, also retain the deepest parent with a non-removed sibling.\r\n  if (node.length) while (true) {\r\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\r\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\r\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\r\n    if (!node.length) break;\r\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\r\n  }\r\n\r\n  // Find the point to remove.\r\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\r\n  if (next = node.next) delete node.next;\r\n\r\n  // If there are multiple coincident points, remove just the point.\r\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\r\n\r\n  // If this is the root point, remove it.\r\n  if (!parent) return this._root = next, this;\r\n\r\n  // Remove this leaf.\r\n  next ? parent[i] = next : delete parent[i];\r\n\r\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\r\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\r\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\r\n      && !node.length) {\r\n    if (retainer) retainer[j] = node;\r\n    else this._root = node;\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\nexport function removeAll(data) {\r\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\r\n  return this;\r\n}\r\n", "export default function() {\r\n  return this._root;\r\n}\r\n", "export default function() {\r\n  var size = 0;\r\n  this.visit(function(node) {\r\n    if (!node.length) do ++size; while (node = node.next)\r\n  });\r\n  return size;\r\n}\r\n", "import Quad from \"./quad.js\";\r\n\r\nexport default function(callback) {\r\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\r\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\r\n  while (q = quads.pop()) {\r\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\r\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\r\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\r\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\r\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\r\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\r\n    }\r\n  }\r\n  return this;\r\n}\r\n", "import Quad from \"./quad.js\";\r\n\r\nexport default function(callback) {\r\n  var quads = [], next = [], q;\r\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\r\n  while (q = quads.pop()) {\r\n    var node = q.node;\r\n    if (node.length) {\r\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\r\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\r\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\r\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\r\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\r\n    }\r\n    next.push(q);\r\n  }\r\n  while (q = next.pop()) {\r\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\r\n  }\r\n  return this;\r\n}\r\n", "export function defaultX(d) {\r\n  return d[0];\r\n}\r\n\r\nexport default function(_) {\r\n  return arguments.length ? (this._x = _, this) : this._x;\r\n}\r\n", "export function defaultY(d) {\r\n  return d[1];\r\n}\r\n\r\nexport default function(_) {\r\n  return arguments.length ? (this._y = _, this) : this._y;\r\n}\r\n", "import tree_add, {addAll as tree_addAll} from \"./add.js\";\r\nimport tree_cover from \"./cover.js\";\r\nimport tree_data from \"./data.js\";\r\nimport tree_extent from \"./extent.js\";\r\nimport tree_find from \"./find.js\";\r\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\r\nimport tree_root from \"./root.js\";\r\nimport tree_size from \"./size.js\";\r\nimport tree_visit from \"./visit.js\";\r\nimport tree_visitAfter from \"./visitAfter.js\";\r\nimport tree_x, {defaultX} from \"./x.js\";\r\nimport tree_y, {defaultY} from \"./y.js\";\r\n\r\nexport default function quadtree(nodes, x, y) {\r\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\r\n  return nodes == null ? tree : tree.addAll(nodes);\r\n}\r\n\r\nfunction Quadtree(x, y, x0, y0, x1, y1) {\r\n  this._x = x;\r\n  this._y = y;\r\n  this._x0 = x0;\r\n  this._y0 = y0;\r\n  this._x1 = x1;\r\n  this._y1 = y1;\r\n  this._root = undefined;\r\n}\r\n\r\nfunction leaf_copy(leaf) {\r\n  var copy = {data: leaf.data}, next = copy;\r\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\r\n  return copy;\r\n}\r\n\r\nvar treeProto = quadtree.prototype = Quadtree.prototype;\r\n\r\ntreeProto.copy = function() {\r\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\r\n      node = this._root,\r\n      nodes,\r\n      child;\r\n\r\n  if (!node) return copy;\r\n\r\n  if (!node.length) return copy._root = leaf_copy(node), copy;\r\n\r\n  nodes = [{source: node, target: copy._root = new Array(4)}];\r\n  while (node = nodes.pop()) {\r\n    for (var i = 0; i < 4; ++i) {\r\n      if (child = node.source[i]) {\r\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\r\n        else node.target[i] = leaf_copy(child);\r\n      }\r\n    }\r\n  }\r\n\r\n  return copy;\r\n};\r\n\r\ntreeProto.add = tree_add;\r\ntreeProto.addAll = tree_addAll;\r\ntreeProto.cover = tree_cover;\r\ntreeProto.data = tree_data;\r\ntreeProto.extent = tree_extent;\r\ntreeProto.find = tree_find;\r\ntreeProto.remove = tree_remove;\r\ntreeProto.removeAll = tree_removeAll;\r\ntreeProto.root = tree_root;\r\ntreeProto.size = tree_size;\r\ntreeProto.visit = tree_visit;\r\ntreeProto.visitAfter = tree_visitAfter;\r\ntreeProto.x = tree_x;\r\ntreeProto.y = tree_y;\r\n", "export default function(x) {\r\n  return function() {\r\n    return x;\r\n  };\r\n}\r\n", "export default function(random) {\r\n  return (random() - 0.5) * 1e-6;\r\n}\r\n", "import {quadtree} from \"d3-quadtree\";\r\nimport constant from \"./constant.js\";\r\nimport jiggle from \"./jiggle.js\";\r\n\r\nfunction x(d) {\r\n  return d.x + d.vx;\r\n}\r\n\r\nfunction y(d) {\r\n  return d.y + d.vy;\r\n}\r\n\r\nexport default function(radius) {\r\n  var nodes,\r\n      radii,\r\n      random,\r\n      strength = 1,\r\n      iterations = 1;\r\n\r\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\r\n\r\n  function force() {\r\n    var i, n = nodes.length,\r\n        tree,\r\n        node,\r\n        xi,\r\n        yi,\r\n        ri,\r\n        ri2;\r\n\r\n    for (var k = 0; k < iterations; ++k) {\r\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\r\n      for (i = 0; i < n; ++i) {\r\n        node = nodes[i];\r\n        ri = radii[node.index], ri2 = ri * ri;\r\n        xi = node.x + node.vx;\r\n        yi = node.y + node.vy;\r\n        tree.visit(apply);\r\n      }\r\n    }\r\n\r\n    function apply(quad, x0, y0, x1, y1) {\r\n      var data = quad.data, rj = quad.r, r = ri + rj;\r\n      if (data) {\r\n        if (data.index > node.index) {\r\n          var x = xi - data.x - data.vx,\r\n              y = yi - data.y - data.vy,\r\n              l = x * x + y * y;\r\n          if (l < r * r) {\r\n            if (x === 0) x = jiggle(random), l += x * x;\r\n            if (y === 0) y = jiggle(random), l += y * y;\r\n            l = (r - (l = Math.sqrt(l))) / l * strength;\r\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\r\n            node.vy += (y *= l) * r;\r\n            data.vx -= x * (r = 1 - r);\r\n            data.vy -= y * r;\r\n          }\r\n        }\r\n        return;\r\n      }\r\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\r\n    }\r\n  }\r\n\r\n  function prepare(quad) {\r\n    if (quad.data) return quad.r = radii[quad.data.index];\r\n    for (var i = quad.r = 0; i < 4; ++i) {\r\n      if (quad[i] && quad[i].r > quad.r) {\r\n        quad.r = quad[i].r;\r\n      }\r\n    }\r\n  }\r\n\r\n  function initialize() {\r\n    if (!nodes) return;\r\n    var i, n = nodes.length, node;\r\n    radii = new Array(n);\r\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\r\n  }\r\n\r\n  force.initialize = function(_nodes, _random) {\r\n    nodes = _nodes;\r\n    random = _random;\r\n    initialize();\r\n  };\r\n\r\n  force.iterations = function(_) {\r\n    return arguments.length ? (iterations = +_, force) : iterations;\r\n  };\r\n\r\n  force.strength = function(_) {\r\n    return arguments.length ? (strength = +_, force) : strength;\r\n  };\r\n\r\n  force.radius = function(_) {\r\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\r\n  };\r\n\r\n  return force;\r\n}\r\n", "import constant from \"./constant.js\";\r\nimport jiggle from \"./jiggle.js\";\r\n\r\nfunction index(d) {\r\n  return d.index;\r\n}\r\n\r\nfunction find(nodeById, nodeId) {\r\n  var node = nodeById.get(nodeId);\r\n  if (!node) throw new Error(\"node not found: \" + nodeId);\r\n  return node;\r\n}\r\n\r\nexport default function(links) {\r\n  var id = index,\r\n      strength = defaultStrength,\r\n      strengths,\r\n      distance = constant(30),\r\n      distances,\r\n      nodes,\r\n      count,\r\n      bias,\r\n      random,\r\n      iterations = 1;\r\n\r\n  if (links == null) links = [];\r\n\r\n  function defaultStrength(link) {\r\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\r\n  }\r\n\r\n  function force(alpha) {\r\n    for (var k = 0, n = links.length; k < iterations; ++k) {\r\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\r\n        link = links[i], source = link.source, target = link.target;\r\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\r\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\r\n        l = Math.sqrt(x * x + y * y);\r\n        l = (l - distances[i]) / l * alpha * strengths[i];\r\n        x *= l, y *= l;\r\n        target.vx -= x * (b = bias[i]);\r\n        target.vy -= y * b;\r\n        source.vx += x * (b = 1 - b);\r\n        source.vy += y * b;\r\n      }\r\n    }\r\n  }\r\n\r\n  function initialize() {\r\n    if (!nodes) return;\r\n\r\n    var i,\r\n        n = nodes.length,\r\n        m = links.length,\r\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\r\n        link;\r\n\r\n    for (i = 0, count = new Array(n); i < m; ++i) {\r\n      link = links[i], link.index = i;\r\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\r\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\r\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\r\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\r\n    }\r\n\r\n    for (i = 0, bias = new Array(m); i < m; ++i) {\r\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\r\n    }\r\n\r\n    strengths = new Array(m), initializeStrength();\r\n    distances = new Array(m), initializeDistance();\r\n  }\r\n\r\n  function initializeStrength() {\r\n    if (!nodes) return;\r\n\r\n    for (var i = 0, n = links.length; i < n; ++i) {\r\n      strengths[i] = +strength(links[i], i, links);\r\n    }\r\n  }\r\n\r\n  function initializeDistance() {\r\n    if (!nodes) return;\r\n\r\n    for (var i = 0, n = links.length; i < n; ++i) {\r\n      distances[i] = +distance(links[i], i, links);\r\n    }\r\n  }\r\n\r\n  force.initialize = function(_nodes, _random) {\r\n    nodes = _nodes;\r\n    random = _random;\r\n    initialize();\r\n  };\r\n\r\n  force.links = function(_) {\r\n    return arguments.length ? (links = _, initialize(), force) : links;\r\n  };\r\n\r\n  force.id = function(_) {\r\n    return arguments.length ? (id = _, force) : id;\r\n  };\r\n\r\n  force.iterations = function(_) {\r\n    return arguments.length ? (iterations = +_, force) : iterations;\r\n  };\r\n\r\n  force.strength = function(_) {\r\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\r\n  };\r\n\r\n  force.distance = function(_) {\r\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\r\n  };\r\n\r\n  return force;\r\n}\r\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\r\nconst a = 1664525;\r\nconst c = 1013904223;\r\nconst m = 4294967296; // 2^32\r\n\r\nexport default function() {\r\n  let s = 1;\r\n  return () => (s = (a * s + c) % m) / m;\r\n}\r\n", "import {dispatch} from \"d3-dispatch\";\r\nimport {timer} from \"d3-timer\";\r\nimport lcg from \"./lcg.js\";\r\n\r\nexport function x(d) {\r\n  return d.x;\r\n}\r\n\r\nexport function y(d) {\r\n  return d.y;\r\n}\r\n\r\nvar initialRadius = 10,\r\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\r\n\r\nexport default function(nodes) {\r\n  var simulation,\r\n      alpha = 1,\r\n      alphaMin = 0.001,\r\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\r\n      alphaTarget = 0,\r\n      velocityDecay = 0.6,\r\n      forces = new Map(),\r\n      stepper = timer(step),\r\n      event = dispatch(\"tick\", \"end\"),\r\n      random = lcg();\r\n\r\n  if (nodes == null) nodes = [];\r\n\r\n  function step() {\r\n    tick();\r\n    event.call(\"tick\", simulation);\r\n    if (alpha < alphaMin) {\r\n      stepper.stop();\r\n      event.call(\"end\", simulation);\r\n    }\r\n  }\r\n\r\n  function tick(iterations) {\r\n    var i, n = nodes.length, node;\r\n\r\n    if (iterations === undefined) iterations = 1;\r\n\r\n    for (var k = 0; k < iterations; ++k) {\r\n      alpha += (alphaTarget - alpha) * alphaDecay;\r\n\r\n      forces.forEach(function(force) {\r\n        force(alpha);\r\n      });\r\n\r\n      for (i = 0; i < n; ++i) {\r\n        node = nodes[i];\r\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\r\n        else node.x = node.fx, node.vx = 0;\r\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\r\n        else node.y = node.fy, node.vy = 0;\r\n      }\r\n    }\r\n\r\n    return simulation;\r\n  }\r\n\r\n  function initializeNodes() {\r\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\r\n      node = nodes[i], node.index = i;\r\n      if (node.fx != null) node.x = node.fx;\r\n      if (node.fy != null) node.y = node.fy;\r\n      if (isNaN(node.x) || isNaN(node.y)) {\r\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\r\n        node.x = radius * Math.cos(angle);\r\n        node.y = radius * Math.sin(angle);\r\n      }\r\n      if (isNaN(node.vx) || isNaN(node.vy)) {\r\n        node.vx = node.vy = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  function initializeForce(force) {\r\n    if (force.initialize) force.initialize(nodes, random);\r\n    return force;\r\n  }\r\n\r\n  initializeNodes();\r\n\r\n  return simulation = {\r\n    tick: tick,\r\n\r\n    restart: function() {\r\n      return stepper.restart(step), simulation;\r\n    },\r\n\r\n    stop: function() {\r\n      return stepper.stop(), simulation;\r\n    },\r\n\r\n    nodes: function(_) {\r\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\r\n    },\r\n\r\n    alpha: function(_) {\r\n      return arguments.length ? (alpha = +_, simulation) : alpha;\r\n    },\r\n\r\n    alphaMin: function(_) {\r\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\r\n    },\r\n\r\n    alphaDecay: function(_) {\r\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\r\n    },\r\n\r\n    alphaTarget: function(_) {\r\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\r\n    },\r\n\r\n    velocityDecay: function(_) {\r\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\r\n    },\r\n\r\n    randomSource: function(_) {\r\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\r\n    },\r\n\r\n    force: function(name, _) {\r\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\r\n    },\r\n\r\n    find: function(x, y, radius) {\r\n      var i = 0,\r\n          n = nodes.length,\r\n          dx,\r\n          dy,\r\n          d2,\r\n          node,\r\n          closest;\r\n\r\n      if (radius == null) radius = Infinity;\r\n      else radius *= radius;\r\n\r\n      for (i = 0; i < n; ++i) {\r\n        node = nodes[i];\r\n        dx = x - node.x;\r\n        dy = y - node.y;\r\n        d2 = dx * dx + dy * dy;\r\n        if (d2 < radius) closest = node, radius = d2;\r\n      }\r\n\r\n      return closest;\r\n    },\r\n\r\n    on: function(name, _) {\r\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\r\n    }\r\n  };\r\n}\r\n", "import {quadtree} from \"d3-quadtree\";\r\nimport constant from \"./constant.js\";\r\nimport jiggle from \"./jiggle.js\";\r\nimport {x, y} from \"./simulation.js\";\r\n\r\nexport default function() {\r\n  var nodes,\r\n      node,\r\n      random,\r\n      alpha,\r\n      strength = constant(-30),\r\n      strengths,\r\n      distanceMin2 = 1,\r\n      distanceMax2 = Infinity,\r\n      theta2 = 0.81;\r\n\r\n  function force(_) {\r\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\r\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\r\n  }\r\n\r\n  function initialize() {\r\n    if (!nodes) return;\r\n    var i, n = nodes.length, node;\r\n    strengths = new Array(n);\r\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\r\n  }\r\n\r\n  function accumulate(quad) {\r\n    var strength = 0, q, c, weight = 0, x, y, i;\r\n\r\n    // For internal nodes, accumulate forces from child quadrants.\r\n    if (quad.length) {\r\n      for (x = y = i = 0; i < 4; ++i) {\r\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\r\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\r\n        }\r\n      }\r\n      quad.x = x / weight;\r\n      quad.y = y / weight;\r\n    }\r\n\r\n    // For leaf nodes, accumulate forces from coincident quadrants.\r\n    else {\r\n      q = quad;\r\n      q.x = q.data.x;\r\n      q.y = q.data.y;\r\n      do strength += strengths[q.data.index];\r\n      while (q = q.next);\r\n    }\r\n\r\n    quad.value = strength;\r\n  }\r\n\r\n  function apply(quad, x1, _, x2) {\r\n    if (!quad.value) return true;\r\n\r\n    var x = quad.x - node.x,\r\n        y = quad.y - node.y,\r\n        w = x2 - x1,\r\n        l = x * x + y * y;\r\n\r\n    // Apply the Barnes-Hut approximation if possible.\r\n    // Limit forces for very close nodes; randomize direction if coincident.\r\n    if (w * w / theta2 < l) {\r\n      if (l < distanceMax2) {\r\n        if (x === 0) x = jiggle(random), l += x * x;\r\n        if (y === 0) y = jiggle(random), l += y * y;\r\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\r\n        node.vx += x * quad.value * alpha / l;\r\n        node.vy += y * quad.value * alpha / l;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // Otherwise, process points directly.\r\n    else if (quad.length || l >= distanceMax2) return;\r\n\r\n    // Limit forces for very close nodes; randomize direction if coincident.\r\n    if (quad.data !== node || quad.next) {\r\n      if (x === 0) x = jiggle(random), l += x * x;\r\n      if (y === 0) y = jiggle(random), l += y * y;\r\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\r\n    }\r\n\r\n    do if (quad.data !== node) {\r\n      w = strengths[quad.data.index] * alpha / l;\r\n      node.vx += x * w;\r\n      node.vy += y * w;\r\n    } while (quad = quad.next);\r\n  }\r\n\r\n  force.initialize = function(_nodes, _random) {\r\n    nodes = _nodes;\r\n    random = _random;\r\n    initialize();\r\n  };\r\n\r\n  force.strength = function(_) {\r\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\r\n  };\r\n\r\n  force.distanceMin = function(_) {\r\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\r\n  };\r\n\r\n  force.distanceMax = function(_) {\r\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\r\n  };\r\n\r\n  force.theta = function(_) {\r\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\r\n  };\r\n\r\n  return force;\r\n}\r\n", "import constant from \"./constant.js\";\r\n\r\nexport default function(radius, x, y) {\r\n  var nodes,\r\n      strength = constant(0.1),\r\n      strengths,\r\n      radiuses;\r\n\r\n  if (typeof radius !== \"function\") radius = constant(+radius);\r\n  if (x == null) x = 0;\r\n  if (y == null) y = 0;\r\n\r\n  function force(alpha) {\r\n    for (var i = 0, n = nodes.length; i < n; ++i) {\r\n      var node = nodes[i],\r\n          dx = node.x - x || 1e-6,\r\n          dy = node.y - y || 1e-6,\r\n          r = Math.sqrt(dx * dx + dy * dy),\r\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\r\n      node.vx += dx * k;\r\n      node.vy += dy * k;\r\n    }\r\n  }\r\n\r\n  function initialize() {\r\n    if (!nodes) return;\r\n    var i, n = nodes.length;\r\n    strengths = new Array(n);\r\n    radiuses = new Array(n);\r\n    for (i = 0; i < n; ++i) {\r\n      radiuses[i] = +radius(nodes[i], i, nodes);\r\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\r\n    }\r\n  }\r\n\r\n  force.initialize = function(_) {\r\n    nodes = _, initialize();\r\n  };\r\n\r\n  force.strength = function(_) {\r\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\r\n  };\r\n\r\n  force.radius = function(_) {\r\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\r\n  };\r\n\r\n  force.x = function(_) {\r\n    return arguments.length ? (x = +_, force) : x;\r\n  };\r\n\r\n  force.y = function(_) {\r\n    return arguments.length ? (y = +_, force) : y;\r\n  };\r\n\r\n  return force;\r\n}\r\n", "import constant from \"./constant.js\";\r\n\r\nexport default function(x) {\r\n  var strength = constant(0.1),\r\n      nodes,\r\n      strengths,\r\n      xz;\r\n\r\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\r\n\r\n  function force(alpha) {\r\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\r\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\r\n    }\r\n  }\r\n\r\n  function initialize() {\r\n    if (!nodes) return;\r\n    var i, n = nodes.length;\r\n    strengths = new Array(n);\r\n    xz = new Array(n);\r\n    for (i = 0; i < n; ++i) {\r\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\r\n    }\r\n  }\r\n\r\n  force.initialize = function(_) {\r\n    nodes = _;\r\n    initialize();\r\n  };\r\n\r\n  force.strength = function(_) {\r\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\r\n  };\r\n\r\n  force.x = function(_) {\r\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\r\n  };\r\n\r\n  return force;\r\n}\r\n", "import constant from \"./constant.js\";\r\n\r\nexport default function(y) {\r\n  var strength = constant(0.1),\r\n      nodes,\r\n      strengths,\r\n      yz;\r\n\r\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\r\n\r\n  function force(alpha) {\r\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\r\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\r\n    }\r\n  }\r\n\r\n  function initialize() {\r\n    if (!nodes) return;\r\n    var i, n = nodes.length;\r\n    strengths = new Array(n);\r\n    yz = new Array(n);\r\n    for (i = 0; i < n; ++i) {\r\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\r\n    }\r\n  }\r\n\r\n  force.initialize = function(_) {\r\n    nodes = _;\r\n    initialize();\r\n  };\r\n\r\n  force.strength = function(_) {\r\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\r\n  };\r\n\r\n  force.y = function(_) {\r\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\r\n  };\r\n\r\n  return force;\r\n}\r\n", "export var epsilon = 1e-6;\r\nexport var epsilon2 = 1e-12;\r\nexport var pi = Math.PI;\r\nexport var halfPi = pi / 2;\r\nexport var quarterPi = pi / 4;\r\nexport var tau = pi * 2;\r\n\r\nexport var degrees = 180 / pi;\r\nexport var radians = pi / 180;\r\n\r\nexport var abs = Math.abs;\r\nexport var atan = Math.atan;\r\nexport var atan2 = Math.atan2;\r\nexport var cos = Math.cos;\r\nexport var ceil = Math.ceil;\r\nexport var exp = Math.exp;\r\nexport var floor = Math.floor;\r\nexport var hypot = Math.hypot;\r\nexport var log = Math.log;\r\nexport var pow = Math.pow;\r\nexport var sin = Math.sin;\r\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\r\nexport var sqrt = Math.sqrt;\r\nexport var tan = Math.tan;\r\n\r\nexport function acos(x) {\r\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\r\n}\r\n\r\nexport function asin(x) {\r\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\r\n}\r\n\r\nexport function haversin(x) {\r\n  return (x = sin(x / 2)) * x;\r\n}\r\n", "export default function noop() {}\r\n", "function streamGeometry(geometry, stream) {\r\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\r\n    streamGeometryType[geometry.type](geometry, stream);\r\n  }\r\n}\r\n\r\nvar streamObjectType = {\r\n  Feature: function(object, stream) {\r\n    streamGeometry(object.geometry, stream);\r\n  },\r\n  FeatureCollection: function(object, stream) {\r\n    var features = object.features, i = -1, n = features.length;\r\n    while (++i < n) streamGeometry(features[i].geometry, stream);\r\n  }\r\n};\r\n\r\nvar streamGeometryType = {\r\n  Sphere: function(object, stream) {\r\n    stream.sphere();\r\n  },\r\n  Point: function(object, stream) {\r\n    object = object.coordinates;\r\n    stream.point(object[0], object[1], object[2]);\r\n  },\r\n  MultiPoint: function(object, stream) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\r\n  },\r\n  LineString: function(object, stream) {\r\n    streamLine(object.coordinates, stream, 0);\r\n  },\r\n  MultiLineString: function(object, stream) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) streamLine(coordinates[i], stream, 0);\r\n  },\r\n  Polygon: function(object, stream) {\r\n    streamPolygon(object.coordinates, stream);\r\n  },\r\n  MultiPolygon: function(object, stream) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) streamPolygon(coordinates[i], stream);\r\n  },\r\n  GeometryCollection: function(object, stream) {\r\n    var geometries = object.geometries, i = -1, n = geometries.length;\r\n    while (++i < n) streamGeometry(geometries[i], stream);\r\n  }\r\n};\r\n\r\nfunction streamLine(coordinates, stream, closed) {\r\n  var i = -1, n = coordinates.length - closed, coordinate;\r\n  stream.lineStart();\r\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\r\n  stream.lineEnd();\r\n}\r\n\r\nfunction streamPolygon(coordinates, stream) {\r\n  var i = -1, n = coordinates.length;\r\n  stream.polygonStart();\r\n  while (++i < n) streamLine(coordinates[i], stream, 1);\r\n  stream.polygonEnd();\r\n}\r\n\r\nexport default function(object, stream) {\r\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\r\n    streamObjectType[object.type](object, stream);\r\n  } else {\r\n    streamGeometry(object, stream);\r\n  }\r\n}\r\n", "import {Adder} from \"d3-array\";\r\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\r\nimport noop from \"./noop.js\";\r\nimport stream from \"./stream.js\";\r\n\r\nexport var areaRingSum = new Adder();\r\n\r\n// hello?\r\n\r\nvar areaSum = new Adder(),\r\n    lambda00,\r\n    phi00,\r\n    lambda0,\r\n    cosPhi0,\r\n    sinPhi0;\r\n\r\nexport var areaStream = {\r\n  point: noop,\r\n  lineStart: noop,\r\n  lineEnd: noop,\r\n  polygonStart: function() {\r\n    areaRingSum = new Adder();\r\n    areaStream.lineStart = areaRingStart;\r\n    areaStream.lineEnd = areaRingEnd;\r\n  },\r\n  polygonEnd: function() {\r\n    var areaRing = +areaRingSum;\r\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\r\n    this.lineStart = this.lineEnd = this.point = noop;\r\n  },\r\n  sphere: function() {\r\n    areaSum.add(tau);\r\n  }\r\n};\r\n\r\nfunction areaRingStart() {\r\n  areaStream.point = areaPointFirst;\r\n}\r\n\r\nfunction areaRingEnd() {\r\n  areaPoint(lambda00, phi00);\r\n}\r\n\r\nfunction areaPointFirst(lambda, phi) {\r\n  areaStream.point = areaPoint;\r\n  lambda00 = lambda, phi00 = phi;\r\n  lambda *= radians, phi *= radians;\r\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\r\n}\r\n\r\nfunction areaPoint(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\r\n\r\n  // Spherical excess E for a spherical triangle with vertices: south pole,\r\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\r\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\r\n  var dLambda = lambda - lambda0,\r\n      sdLambda = dLambda >= 0 ? 1 : -1,\r\n      adLambda = sdLambda * dLambda,\r\n      cosPhi = cos(phi),\r\n      sinPhi = sin(phi),\r\n      k = sinPhi0 * sinPhi,\r\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\r\n      v = k * sdLambda * sin(adLambda);\r\n  areaRingSum.add(atan2(v, u));\r\n\r\n  // Advance the previous points.\r\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\r\n}\r\n\r\nexport default function(object) {\r\n  areaSum = new Adder();\r\n  stream(object, areaStream);\r\n  return areaSum * 2;\r\n}\r\n", "import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\r\n\r\nexport function spherical(cartesian) {\r\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\r\n}\r\n\r\nexport function cartesian(spherical) {\r\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\r\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\r\n}\r\n\r\nexport function cartesianDot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\nexport function cartesianCross(a, b) {\r\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\r\n}\r\n\r\n// TODO return a\r\nexport function cartesianAddInPlace(a, b) {\r\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\r\n}\r\n\r\nexport function cartesianScale(vector, k) {\r\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\r\n}\r\n\r\n// TODO return d\r\nexport function cartesianNormalizeInPlace(d) {\r\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\r\n  d[0] /= l, d[1] /= l, d[2] /= l;\r\n}\r\n", "import {Adder} from \"d3-array\";\r\nimport {areaStream, areaRingSum} from \"./area.js\";\r\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\r\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\r\nimport stream from \"./stream.js\";\r\n\r\nvar lambda0, phi0, lambda1, phi1, // bounds\r\n    lambda2, // previous lambda-coordinate\r\n    lambda00, phi00, // first point\r\n    p0, // previous 3D point\r\n    deltaSum,\r\n    ranges,\r\n    range;\r\n\r\nvar boundsStream = {\r\n  point: boundsPoint,\r\n  lineStart: boundsLineStart,\r\n  lineEnd: boundsLineEnd,\r\n  polygonStart: function() {\r\n    boundsStream.point = boundsRingPoint;\r\n    boundsStream.lineStart = boundsRingStart;\r\n    boundsStream.lineEnd = boundsRingEnd;\r\n    deltaSum = new Adder();\r\n    areaStream.polygonStart();\r\n  },\r\n  polygonEnd: function() {\r\n    areaStream.polygonEnd();\r\n    boundsStream.point = boundsPoint;\r\n    boundsStream.lineStart = boundsLineStart;\r\n    boundsStream.lineEnd = boundsLineEnd;\r\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\r\n    else if (deltaSum > epsilon) phi1 = 90;\r\n    else if (deltaSum < -epsilon) phi0 = -90;\r\n    range[0] = lambda0, range[1] = lambda1;\r\n  },\r\n  sphere: function() {\r\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\r\n  }\r\n};\r\n\r\nfunction boundsPoint(lambda, phi) {\r\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\r\n  if (phi < phi0) phi0 = phi;\r\n  if (phi > phi1) phi1 = phi;\r\n}\r\n\r\nfunction linePoint(lambda, phi) {\r\n  var p = cartesian([lambda * radians, phi * radians]);\r\n  if (p0) {\r\n    var normal = cartesianCross(p0, p),\r\n        equatorial = [normal[1], -normal[0], 0],\r\n        inflection = cartesianCross(equatorial, normal);\r\n    cartesianNormalizeInPlace(inflection);\r\n    inflection = spherical(inflection);\r\n    var delta = lambda - lambda2,\r\n        sign = delta > 0 ? 1 : -1,\r\n        lambdai = inflection[0] * degrees * sign,\r\n        phii,\r\n        antimeridian = abs(delta) > 180;\r\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\r\n      phii = inflection[1] * degrees;\r\n      if (phii > phi1) phi1 = phii;\r\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\r\n      phii = -inflection[1] * degrees;\r\n      if (phii < phi0) phi0 = phii;\r\n    } else {\r\n      if (phi < phi0) phi0 = phi;\r\n      if (phi > phi1) phi1 = phi;\r\n    }\r\n    if (antimeridian) {\r\n      if (lambda < lambda2) {\r\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\r\n      } else {\r\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\r\n      }\r\n    } else {\r\n      if (lambda1 >= lambda0) {\r\n        if (lambda < lambda0) lambda0 = lambda;\r\n        if (lambda > lambda1) lambda1 = lambda;\r\n      } else {\r\n        if (lambda > lambda2) {\r\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\r\n        } else {\r\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\r\n  }\r\n  if (phi < phi0) phi0 = phi;\r\n  if (phi > phi1) phi1 = phi;\r\n  p0 = p, lambda2 = lambda;\r\n}\r\n\r\nfunction boundsLineStart() {\r\n  boundsStream.point = linePoint;\r\n}\r\n\r\nfunction boundsLineEnd() {\r\n  range[0] = lambda0, range[1] = lambda1;\r\n  boundsStream.point = boundsPoint;\r\n  p0 = null;\r\n}\r\n\r\nfunction boundsRingPoint(lambda, phi) {\r\n  if (p0) {\r\n    var delta = lambda - lambda2;\r\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\r\n  } else {\r\n    lambda00 = lambda, phi00 = phi;\r\n  }\r\n  areaStream.point(lambda, phi);\r\n  linePoint(lambda, phi);\r\n}\r\n\r\nfunction boundsRingStart() {\r\n  areaStream.lineStart();\r\n}\r\n\r\nfunction boundsRingEnd() {\r\n  boundsRingPoint(lambda00, phi00);\r\n  areaStream.lineEnd();\r\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\r\n  range[0] = lambda0, range[1] = lambda1;\r\n  p0 = null;\r\n}\r\n\r\n// Finds the left-right distance between two longitudes.\r\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\r\n// the distance between ±180° to be 360°.\r\nfunction angle(lambda0, lambda1) {\r\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\r\n}\r\n\r\nfunction rangeCompare(a, b) {\r\n  return a[0] - b[0];\r\n}\r\n\r\nfunction rangeContains(range, x) {\r\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\r\n}\r\n\r\nexport default function(feature) {\r\n  var i, n, a, b, merged, deltaMax, delta;\r\n\r\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\r\n  ranges = [];\r\n  stream(feature, boundsStream);\r\n\r\n  // First, sort ranges by their minimum longitudes.\r\n  if (n = ranges.length) {\r\n    ranges.sort(rangeCompare);\r\n\r\n    // Then, merge any ranges that overlap.\r\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\r\n      b = ranges[i];\r\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\r\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\r\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\r\n      } else {\r\n        merged.push(a = b);\r\n      }\r\n    }\r\n\r\n    // Finally, find the largest gap between the merged ranges.\r\n    // The final bounding box will be the inverse of this gap.\r\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\r\n      b = merged[i];\r\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\r\n    }\r\n  }\r\n\r\n  ranges = range = null;\r\n\r\n  return lambda0 === Infinity || phi0 === Infinity\r\n      ? [[NaN, NaN], [NaN, NaN]]\r\n      : [[lambda0, phi0], [lambda1, phi1]];\r\n}\r\n", "import {Adder} from \"d3-array\";\r\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\r\nimport noop from \"./noop.js\";\r\nimport stream from \"./stream.js\";\r\n\r\nvar W0, W1,\r\n    X0, Y0, Z0,\r\n    X1, Y1, Z1,\r\n    X2, Y2, Z2,\r\n    lambda00, phi00, // first point\r\n    x0, y0, z0; // previous point\r\n\r\nvar centroidStream = {\r\n  sphere: noop,\r\n  point: centroidPoint,\r\n  lineStart: centroidLineStart,\r\n  lineEnd: centroidLineEnd,\r\n  polygonStart: function() {\r\n    centroidStream.lineStart = centroidRingStart;\r\n    centroidStream.lineEnd = centroidRingEnd;\r\n  },\r\n  polygonEnd: function() {\r\n    centroidStream.lineStart = centroidLineStart;\r\n    centroidStream.lineEnd = centroidLineEnd;\r\n  }\r\n};\r\n\r\n// Arithmetic mean of Cartesian vectors.\r\nfunction centroidPoint(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  var cosPhi = cos(phi);\r\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\r\n}\r\n\r\nfunction centroidPointCartesian(x, y, z) {\r\n  ++W0;\r\n  X0 += (x - X0) / W0;\r\n  Y0 += (y - Y0) / W0;\r\n  Z0 += (z - Z0) / W0;\r\n}\r\n\r\nfunction centroidLineStart() {\r\n  centroidStream.point = centroidLinePointFirst;\r\n}\r\n\r\nfunction centroidLinePointFirst(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  var cosPhi = cos(phi);\r\n  x0 = cosPhi * cos(lambda);\r\n  y0 = cosPhi * sin(lambda);\r\n  z0 = sin(phi);\r\n  centroidStream.point = centroidLinePoint;\r\n  centroidPointCartesian(x0, y0, z0);\r\n}\r\n\r\nfunction centroidLinePoint(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  var cosPhi = cos(phi),\r\n      x = cosPhi * cos(lambda),\r\n      y = cosPhi * sin(lambda),\r\n      z = sin(phi),\r\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\r\n  W1 += w;\r\n  X1 += w * (x0 + (x0 = x));\r\n  Y1 += w * (y0 + (y0 = y));\r\n  Z1 += w * (z0 + (z0 = z));\r\n  centroidPointCartesian(x0, y0, z0);\r\n}\r\n\r\nfunction centroidLineEnd() {\r\n  centroidStream.point = centroidPoint;\r\n}\r\n\r\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\r\n// J. Applied Mechanics 42, 239 (1975).\r\nfunction centroidRingStart() {\r\n  centroidStream.point = centroidRingPointFirst;\r\n}\r\n\r\nfunction centroidRingEnd() {\r\n  centroidRingPoint(lambda00, phi00);\r\n  centroidStream.point = centroidPoint;\r\n}\r\n\r\nfunction centroidRingPointFirst(lambda, phi) {\r\n  lambda00 = lambda, phi00 = phi;\r\n  lambda *= radians, phi *= radians;\r\n  centroidStream.point = centroidRingPoint;\r\n  var cosPhi = cos(phi);\r\n  x0 = cosPhi * cos(lambda);\r\n  y0 = cosPhi * sin(lambda);\r\n  z0 = sin(phi);\r\n  centroidPointCartesian(x0, y0, z0);\r\n}\r\n\r\nfunction centroidRingPoint(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  var cosPhi = cos(phi),\r\n      x = cosPhi * cos(lambda),\r\n      y = cosPhi * sin(lambda),\r\n      z = sin(phi),\r\n      cx = y0 * z - z0 * y,\r\n      cy = z0 * x - x0 * z,\r\n      cz = x0 * y - y0 * x,\r\n      m = hypot(cx, cy, cz),\r\n      w = asin(m), // line weight = angle\r\n      v = m && -w / m; // area weight multiplier\r\n  X2.add(v * cx);\r\n  Y2.add(v * cy);\r\n  Z2.add(v * cz);\r\n  W1 += w;\r\n  X1 += w * (x0 + (x0 = x));\r\n  Y1 += w * (y0 + (y0 = y));\r\n  Z1 += w * (z0 + (z0 = z));\r\n  centroidPointCartesian(x0, y0, z0);\r\n}\r\n\r\nexport default function(object) {\r\n  W0 = W1 =\r\n  X0 = Y0 = Z0 =\r\n  X1 = Y1 = Z1 = 0;\r\n  X2 = new Adder();\r\n  Y2 = new Adder();\r\n  Z2 = new Adder();\r\n  stream(object, centroidStream);\r\n\r\n  var x = +X2,\r\n      y = +Y2,\r\n      z = +Z2,\r\n      m = hypot(x, y, z);\r\n\r\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\r\n  if (m < epsilon2) {\r\n    x = X1, y = Y1, z = Z1;\r\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\r\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\r\n    m = hypot(x, y, z);\r\n    // If the feature still has an undefined ccentroid, then return.\r\n    if (m < epsilon2) return [NaN, NaN];\r\n  }\r\n\r\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\r\n}\r\n", "export default function(x) {\r\n  return function() {\r\n    return x;\r\n  };\r\n}\r\n", "export default function(a, b) {\r\n\r\n  function compose(x, y) {\r\n    return x = a(x, y), b(x[0], x[1]);\r\n  }\r\n\r\n  if (a.invert && b.invert) compose.invert = function(x, y) {\r\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\r\n  };\r\n\r\n  return compose;\r\n}\r\n", "import compose from \"./compose.js\";\r\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\r\n\r\nfunction rotationIdentity(lambda, phi) {\r\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\r\n  return [lambda, phi];\r\n}\r\n\r\nrotationIdentity.invert = rotationIdentity;\r\n\r\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\r\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\r\n    : rotationLambda(deltaLambda))\r\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\r\n    : rotationIdentity);\r\n}\r\n\r\nfunction forwardRotationLambda(deltaLambda) {\r\n  return function(lambda, phi) {\r\n    lambda += deltaLambda;\r\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\r\n    return [lambda, phi];\r\n  };\r\n}\r\n\r\nfunction rotationLambda(deltaLambda) {\r\n  var rotation = forwardRotationLambda(deltaLambda);\r\n  rotation.invert = forwardRotationLambda(-deltaLambda);\r\n  return rotation;\r\n}\r\n\r\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\r\n  var cosDeltaPhi = cos(deltaPhi),\r\n      sinDeltaPhi = sin(deltaPhi),\r\n      cosDeltaGamma = cos(deltaGamma),\r\n      sinDeltaGamma = sin(deltaGamma);\r\n\r\n  function rotation(lambda, phi) {\r\n    var cosPhi = cos(phi),\r\n        x = cos(lambda) * cosPhi,\r\n        y = sin(lambda) * cosPhi,\r\n        z = sin(phi),\r\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\r\n    return [\r\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\r\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\r\n    ];\r\n  }\r\n\r\n  rotation.invert = function(lambda, phi) {\r\n    var cosPhi = cos(phi),\r\n        x = cos(lambda) * cosPhi,\r\n        y = sin(lambda) * cosPhi,\r\n        z = sin(phi),\r\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\r\n    return [\r\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\r\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\r\n    ];\r\n  };\r\n\r\n  return rotation;\r\n}\r\n\r\nexport default function(rotate) {\r\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\r\n\r\n  function forward(coordinates) {\r\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\r\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\r\n  }\r\n\r\n  forward.invert = function(coordinates) {\r\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\r\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\r\n  };\r\n\r\n  return forward;\r\n}\r\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\r\nimport constant from \"./constant.js\";\r\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\r\nimport {rotateRadians} from \"./rotation.js\";\r\n\r\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\r\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\r\n  if (!delta) return;\r\n  var cosRadius = cos(radius),\r\n      sinRadius = sin(radius),\r\n      step = direction * delta;\r\n  if (t0 == null) {\r\n    t0 = radius + direction * tau;\r\n    t1 = radius - step / 2;\r\n  } else {\r\n    t0 = circleRadius(cosRadius, t0);\r\n    t1 = circleRadius(cosRadius, t1);\r\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\r\n  }\r\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\r\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\r\n    stream.point(point[0], point[1]);\r\n  }\r\n}\r\n\r\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\r\nfunction circleRadius(cosRadius, point) {\r\n  point = cartesian(point), point[0] -= cosRadius;\r\n  cartesianNormalizeInPlace(point);\r\n  var radius = acos(-point[1]);\r\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\r\n}\r\n\r\nexport default function() {\r\n  var center = constant([0, 0]),\r\n      radius = constant(90),\r\n      precision = constant(6),\r\n      ring,\r\n      rotate,\r\n      stream = {point: point};\r\n\r\n  function point(x, y) {\r\n    ring.push(x = rotate(x, y));\r\n    x[0] *= degrees, x[1] *= degrees;\r\n  }\r\n\r\n  function circle() {\r\n    var c = center.apply(this, arguments),\r\n        r = radius.apply(this, arguments) * radians,\r\n        p = precision.apply(this, arguments) * radians;\r\n    ring = [];\r\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\r\n    circleStream(stream, r, p, 1);\r\n    c = {type: \"Polygon\", coordinates: [ring]};\r\n    ring = rotate = null;\r\n    return c;\r\n  }\r\n\r\n  circle.center = function(_) {\r\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\r\n  };\r\n\r\n  circle.radius = function(_) {\r\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\r\n  };\r\n\r\n  circle.precision = function(_) {\r\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\r\n  };\r\n\r\n  return circle;\r\n}\r\n", "import noop from \"../noop.js\";\r\n\r\nexport default function() {\r\n  var lines = [],\r\n      line;\r\n  return {\r\n    point: function(x, y, m) {\r\n      line.push([x, y, m]);\r\n    },\r\n    lineStart: function() {\r\n      lines.push(line = []);\r\n    },\r\n    lineEnd: noop,\r\n    rejoin: function() {\r\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\r\n    },\r\n    result: function() {\r\n      var result = lines;\r\n      lines = [];\r\n      line = null;\r\n      return result;\r\n    }\r\n  };\r\n}\r\n", "import {abs, epsilon} from \"./math.js\";\r\n\r\nexport default function(a, b) {\r\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\r\n}\r\n", "import pointEqual from \"../pointEqual.js\";\r\nimport {epsilon} from \"../math.js\";\r\n\r\nfunction Intersection(point, points, other, entry) {\r\n  this.x = point;\r\n  this.z = points;\r\n  this.o = other; // another intersection\r\n  this.e = entry; // is an entry?\r\n  this.v = false; // visited\r\n  this.n = this.p = null; // next & previous\r\n}\r\n\r\n// A generalized polygon clipping algorithm: given a polygon that has been cut\r\n// into its visible line segments, and rejoins the segments by interpolating\r\n// along the clip edge.\r\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\r\n  var subject = [],\r\n      clip = [],\r\n      i,\r\n      n;\r\n\r\n  segments.forEach(function(segment) {\r\n    if ((n = segment.length - 1) <= 0) return;\r\n    var n, p0 = segment[0], p1 = segment[n], x;\r\n\r\n    if (pointEqual(p0, p1)) {\r\n      if (!p0[2] && !p1[2]) {\r\n        stream.lineStart();\r\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\r\n        stream.lineEnd();\r\n        return;\r\n      }\r\n      // handle degenerate cases by moving the point\r\n      p1[0] += 2 * epsilon;\r\n    }\r\n\r\n    subject.push(x = new Intersection(p0, segment, null, true));\r\n    clip.push(x.o = new Intersection(p0, null, x, false));\r\n    subject.push(x = new Intersection(p1, segment, null, false));\r\n    clip.push(x.o = new Intersection(p1, null, x, true));\r\n  });\r\n\r\n  if (!subject.length) return;\r\n\r\n  clip.sort(compareIntersection);\r\n  link(subject);\r\n  link(clip);\r\n\r\n  for (i = 0, n = clip.length; i < n; ++i) {\r\n    clip[i].e = startInside = !startInside;\r\n  }\r\n\r\n  var start = subject[0],\r\n      points,\r\n      point;\r\n\r\n  while (1) {\r\n    // Find first unvisited intersection.\r\n    var current = start,\r\n        isSubject = true;\r\n    while (current.v) if ((current = current.n) === start) return;\r\n    points = current.z;\r\n    stream.lineStart();\r\n    do {\r\n      current.v = current.o.v = true;\r\n      if (current.e) {\r\n        if (isSubject) {\r\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\r\n        } else {\r\n          interpolate(current.x, current.n.x, 1, stream);\r\n        }\r\n        current = current.n;\r\n      } else {\r\n        if (isSubject) {\r\n          points = current.p.z;\r\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\r\n        } else {\r\n          interpolate(current.x, current.p.x, -1, stream);\r\n        }\r\n        current = current.p;\r\n      }\r\n      current = current.o;\r\n      points = current.z;\r\n      isSubject = !isSubject;\r\n    } while (!current.v);\r\n    stream.lineEnd();\r\n  }\r\n}\r\n\r\nfunction link(array) {\r\n  if (!(n = array.length)) return;\r\n  var n,\r\n      i = 0,\r\n      a = array[0],\r\n      b;\r\n  while (++i < n) {\r\n    a.n = b = array[i];\r\n    b.p = a;\r\n    a = b;\r\n  }\r\n  a.n = b = array[0];\r\n  b.p = a;\r\n}\r\n", "import {Adder} from \"d3-array\";\r\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\r\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\r\n\r\nfunction longitude(point) {\r\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\r\n}\r\n\r\nexport default function(polygon, point) {\r\n  var lambda = longitude(point),\r\n      phi = point[1],\r\n      sinPhi = sin(phi),\r\n      normal = [sin(lambda), -cos(lambda), 0],\r\n      angle = 0,\r\n      winding = 0;\r\n\r\n  var sum = new Adder();\r\n\r\n  if (sinPhi === 1) phi = halfPi + epsilon;\r\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\r\n\r\n  for (var i = 0, n = polygon.length; i < n; ++i) {\r\n    if (!(m = (ring = polygon[i]).length)) continue;\r\n    var ring,\r\n        m,\r\n        point0 = ring[m - 1],\r\n        lambda0 = longitude(point0),\r\n        phi0 = point0[1] / 2 + quarterPi,\r\n        sinPhi0 = sin(phi0),\r\n        cosPhi0 = cos(phi0);\r\n\r\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\r\n      var point1 = ring[j],\r\n          lambda1 = longitude(point1),\r\n          phi1 = point1[1] / 2 + quarterPi,\r\n          sinPhi1 = sin(phi1),\r\n          cosPhi1 = cos(phi1),\r\n          delta = lambda1 - lambda0,\r\n          sign = delta >= 0 ? 1 : -1,\r\n          absDelta = sign * delta,\r\n          antimeridian = absDelta > pi,\r\n          k = sinPhi0 * sinPhi1;\r\n\r\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\r\n      angle += antimeridian ? delta + sign * tau : delta;\r\n\r\n      // Are the longitudes either side of the point’s meridian (lambda),\r\n      // and are the latitudes smaller than the parallel (phi)?\r\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\r\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\r\n        cartesianNormalizeInPlace(arc);\r\n        var intersection = cartesianCross(normal, arc);\r\n        cartesianNormalizeInPlace(intersection);\r\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\r\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\r\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // First, determine whether the South pole is inside or outside:\r\n  //\r\n  // It is inside if:\r\n  // * the polygon winds around it in a clockwise direction.\r\n  // * the polygon does not (cumulatively) wind around it, but has a negative\r\n  //   (counter-clockwise) area.\r\n  //\r\n  // Second, count the (signed) number of times a segment crosses a lambda\r\n  // from the point to the South pole.  If it is zero, then the point is the\r\n  // same side as the South pole.\r\n\r\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\r\n}\r\n", "import clipBuffer from \"./buffer.js\";\r\nimport clipRejoin from \"./rejoin.js\";\r\nimport {epsilon, halfPi} from \"../math.js\";\r\nimport polygonContains from \"../polygonContains.js\";\r\nimport {merge} from \"d3-array\";\r\n\r\nexport default function(pointVisible, clipLine, interpolate, start) {\r\n  return function(sink) {\r\n    var line = clipLine(sink),\r\n        ringBuffer = clipBuffer(),\r\n        ringSink = clipLine(ringBuffer),\r\n        polygonStarted = false,\r\n        polygon,\r\n        segments,\r\n        ring;\r\n\r\n    var clip = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        clip.point = pointRing;\r\n        clip.lineStart = ringStart;\r\n        clip.lineEnd = ringEnd;\r\n        segments = [];\r\n        polygon = [];\r\n      },\r\n      polygonEnd: function() {\r\n        clip.point = point;\r\n        clip.lineStart = lineStart;\r\n        clip.lineEnd = lineEnd;\r\n        segments = merge(segments);\r\n        var startInside = polygonContains(polygon, start);\r\n        if (segments.length) {\r\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\r\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\r\n        } else if (startInside) {\r\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\r\n          sink.lineStart();\r\n          interpolate(null, null, 1, sink);\r\n          sink.lineEnd();\r\n        }\r\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\r\n        segments = polygon = null;\r\n      },\r\n      sphere: function() {\r\n        sink.polygonStart();\r\n        sink.lineStart();\r\n        interpolate(null, null, 1, sink);\r\n        sink.lineEnd();\r\n        sink.polygonEnd();\r\n      }\r\n    };\r\n\r\n    function point(lambda, phi) {\r\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\r\n    }\r\n\r\n    function pointLine(lambda, phi) {\r\n      line.point(lambda, phi);\r\n    }\r\n\r\n    function lineStart() {\r\n      clip.point = pointLine;\r\n      line.lineStart();\r\n    }\r\n\r\n    function lineEnd() {\r\n      clip.point = point;\r\n      line.lineEnd();\r\n    }\r\n\r\n    function pointRing(lambda, phi) {\r\n      ring.push([lambda, phi]);\r\n      ringSink.point(lambda, phi);\r\n    }\r\n\r\n    function ringStart() {\r\n      ringSink.lineStart();\r\n      ring = [];\r\n    }\r\n\r\n    function ringEnd() {\r\n      pointRing(ring[0][0], ring[0][1]);\r\n      ringSink.lineEnd();\r\n\r\n      var clean = ringSink.clean(),\r\n          ringSegments = ringBuffer.result(),\r\n          i, n = ringSegments.length, m,\r\n          segment,\r\n          point;\r\n\r\n      ring.pop();\r\n      polygon.push(ring);\r\n      ring = null;\r\n\r\n      if (!n) return;\r\n\r\n      // No intersections.\r\n      if (clean & 1) {\r\n        segment = ringSegments[0];\r\n        if ((m = segment.length - 1) > 0) {\r\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\r\n          sink.lineStart();\r\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\r\n          sink.lineEnd();\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Rejoin connected segments.\r\n      // TODO reuse ringBuffer.rejoin()?\r\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\r\n\r\n      segments.push(ringSegments.filter(validSegment));\r\n    }\r\n\r\n    return clip;\r\n  };\r\n}\r\n\r\nfunction validSegment(segment) {\r\n  return segment.length > 1;\r\n}\r\n\r\n// Intersections are sorted along the clip edge. For both antimeridian cutting\r\n// and circle clipping, the same comparison is used.\r\nfunction compareIntersection(a, b) {\r\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\r\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\r\n}\r\n", "import clip from \"./index.js\";\r\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\r\n\r\nexport default clip(\r\n  function() { return true; },\r\n  clipAntimeridianLine,\r\n  clipAntimeridianInterpolate,\r\n  [-pi, -halfPi]\r\n);\r\n\r\n// Takes a line and cuts into visible segments. Return values: 0 - there were\r\n// intersections or the line was empty; 1 - no intersections; 2 - there were\r\n// intersections, and the first and last segments should be rejoined.\r\nfunction clipAntimeridianLine(stream) {\r\n  var lambda0 = NaN,\r\n      phi0 = NaN,\r\n      sign0 = NaN,\r\n      clean; // no intersections\r\n\r\n  return {\r\n    lineStart: function() {\r\n      stream.lineStart();\r\n      clean = 1;\r\n    },\r\n    point: function(lambda1, phi1) {\r\n      var sign1 = lambda1 > 0 ? pi : -pi,\r\n          delta = abs(lambda1 - lambda0);\r\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\r\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\r\n        stream.point(sign0, phi0);\r\n        stream.lineEnd();\r\n        stream.lineStart();\r\n        stream.point(sign1, phi0);\r\n        stream.point(lambda1, phi0);\r\n        clean = 0;\r\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\r\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\r\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\r\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\r\n        stream.point(sign0, phi0);\r\n        stream.lineEnd();\r\n        stream.lineStart();\r\n        stream.point(sign1, phi0);\r\n        clean = 0;\r\n      }\r\n      stream.point(lambda0 = lambda1, phi0 = phi1);\r\n      sign0 = sign1;\r\n    },\r\n    lineEnd: function() {\r\n      stream.lineEnd();\r\n      lambda0 = phi0 = NaN;\r\n    },\r\n    clean: function() {\r\n      return 2 - clean; // if intersections, rejoin first and last segments\r\n    }\r\n  };\r\n}\r\n\r\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\r\n  var cosPhi0,\r\n      cosPhi1,\r\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\r\n  return abs(sinLambda0Lambda1) > epsilon\r\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\r\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\r\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\r\n      : (phi0 + phi1) / 2;\r\n}\r\n\r\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\r\n  var phi;\r\n  if (from == null) {\r\n    phi = direction * halfPi;\r\n    stream.point(-pi, phi);\r\n    stream.point(0, phi);\r\n    stream.point(pi, phi);\r\n    stream.point(pi, 0);\r\n    stream.point(pi, -phi);\r\n    stream.point(0, -phi);\r\n    stream.point(-pi, -phi);\r\n    stream.point(-pi, 0);\r\n    stream.point(-pi, phi);\r\n  } else if (abs(from[0] - to[0]) > epsilon) {\r\n    var lambda = from[0] < to[0] ? pi : -pi;\r\n    phi = direction * lambda / 2;\r\n    stream.point(-lambda, phi);\r\n    stream.point(0, phi);\r\n    stream.point(lambda, phi);\r\n  } else {\r\n    stream.point(to[0], to[1]);\r\n  }\r\n}\r\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\r\nimport {circleStream} from \"../circle.js\";\r\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\r\nimport pointEqual from \"../pointEqual.js\";\r\nimport clip from \"./index.js\";\r\n\r\nexport default function(radius) {\r\n  var cr = cos(radius),\r\n      delta = 6 * radians,\r\n      smallRadius = cr > 0,\r\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\r\n\r\n  function interpolate(from, to, direction, stream) {\r\n    circleStream(stream, radius, delta, direction, from, to);\r\n  }\r\n\r\n  function visible(lambda, phi) {\r\n    return cos(lambda) * cos(phi) > cr;\r\n  }\r\n\r\n  // Takes a line and cuts into visible segments. Return values used for polygon\r\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\r\n  // intersections 2 - there were intersections, and the first and last segments\r\n  // should be rejoined.\r\n  function clipLine(stream) {\r\n    var point0, // previous point\r\n        c0, // code for previous point\r\n        v0, // visibility of previous point\r\n        v00, // visibility of first point\r\n        clean; // no intersections\r\n    return {\r\n      lineStart: function() {\r\n        v00 = v0 = false;\r\n        clean = 1;\r\n      },\r\n      point: function(lambda, phi) {\r\n        var point1 = [lambda, phi],\r\n            point2,\r\n            v = visible(lambda, phi),\r\n            c = smallRadius\r\n              ? v ? 0 : code(lambda, phi)\r\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\r\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\r\n        if (v !== v0) {\r\n          point2 = intersect(point0, point1);\r\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\r\n            point1[2] = 1;\r\n        }\r\n        if (v !== v0) {\r\n          clean = 0;\r\n          if (v) {\r\n            // outside going in\r\n            stream.lineStart();\r\n            point2 = intersect(point1, point0);\r\n            stream.point(point2[0], point2[1]);\r\n          } else {\r\n            // inside going out\r\n            point2 = intersect(point0, point1);\r\n            stream.point(point2[0], point2[1], 2);\r\n            stream.lineEnd();\r\n          }\r\n          point0 = point2;\r\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\r\n          var t;\r\n          // If the codes for two points are different, or are both zero,\r\n          // and there this segment intersects with the small circle.\r\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\r\n            clean = 0;\r\n            if (smallRadius) {\r\n              stream.lineStart();\r\n              stream.point(t[0][0], t[0][1]);\r\n              stream.point(t[1][0], t[1][1]);\r\n              stream.lineEnd();\r\n            } else {\r\n              stream.point(t[1][0], t[1][1]);\r\n              stream.lineEnd();\r\n              stream.lineStart();\r\n              stream.point(t[0][0], t[0][1], 3);\r\n            }\r\n          }\r\n        }\r\n        if (v && (!point0 || !pointEqual(point0, point1))) {\r\n          stream.point(point1[0], point1[1]);\r\n        }\r\n        point0 = point1, v0 = v, c0 = c;\r\n      },\r\n      lineEnd: function() {\r\n        if (v0) stream.lineEnd();\r\n        point0 = null;\r\n      },\r\n      // Rejoin first and last segments if there were intersections and the first\r\n      // and last points were visible.\r\n      clean: function() {\r\n        return clean | ((v00 && v0) << 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  // Intersects the great circle between a and b with the clip circle.\r\n  function intersect(a, b, two) {\r\n    var pa = cartesian(a),\r\n        pb = cartesian(b);\r\n\r\n    // We have two planes, n1.p = d1 and n2.p = d2.\r\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\r\n    var n1 = [1, 0, 0], // normal\r\n        n2 = cartesianCross(pa, pb),\r\n        n2n2 = cartesianDot(n2, n2),\r\n        n1n2 = n2[0], // cartesianDot(n1, n2),\r\n        determinant = n2n2 - n1n2 * n1n2;\r\n\r\n    // Two polar points.\r\n    if (!determinant) return !two && a;\r\n\r\n    var c1 =  cr * n2n2 / determinant,\r\n        c2 = -cr * n1n2 / determinant,\r\n        n1xn2 = cartesianCross(n1, n2),\r\n        A = cartesianScale(n1, c1),\r\n        B = cartesianScale(n2, c2);\r\n    cartesianAddInPlace(A, B);\r\n\r\n    // Solve |p(t)|^2 = 1.\r\n    var u = n1xn2,\r\n        w = cartesianDot(A, u),\r\n        uu = cartesianDot(u, u),\r\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\r\n\r\n    if (t2 < 0) return;\r\n\r\n    var t = sqrt(t2),\r\n        q = cartesianScale(u, (-w - t) / uu);\r\n    cartesianAddInPlace(q, A);\r\n    q = spherical(q);\r\n\r\n    if (!two) return q;\r\n\r\n    // Two intersection points.\r\n    var lambda0 = a[0],\r\n        lambda1 = b[0],\r\n        phi0 = a[1],\r\n        phi1 = b[1],\r\n        z;\r\n\r\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\r\n\r\n    var delta = lambda1 - lambda0,\r\n        polar = abs(delta - pi) < epsilon,\r\n        meridian = polar || delta < epsilon;\r\n\r\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\r\n\r\n    // Check that the first point is between a and b.\r\n    if (meridian\r\n        ? polar\r\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\r\n          : phi0 <= q[1] && q[1] <= phi1\r\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\r\n      var q1 = cartesianScale(u, (-w + t) / uu);\r\n      cartesianAddInPlace(q1, A);\r\n      return [q, spherical(q1)];\r\n    }\r\n  }\r\n\r\n  // Generates a 4-bit vector representing the location of a point relative to\r\n  // the small circle's bounding box.\r\n  function code(lambda, phi) {\r\n    var r = smallRadius ? radius : pi - radius,\r\n        code = 0;\r\n    if (lambda < -r) code |= 1; // left\r\n    else if (lambda > r) code |= 2; // right\r\n    if (phi < -r) code |= 4; // below\r\n    else if (phi > r) code |= 8; // above\r\n    return code;\r\n  }\r\n\r\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\r\n}\r\n", "export default function(a, b, x0, y0, x1, y1) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      bx = b[0],\r\n      by = b[1],\r\n      t0 = 0,\r\n      t1 = 1,\r\n      dx = bx - ax,\r\n      dy = by - ay,\r\n      r;\r\n\r\n  r = x0 - ax;\r\n  if (!dx && r > 0) return;\r\n  r /= dx;\r\n  if (dx < 0) {\r\n    if (r < t0) return;\r\n    if (r < t1) t1 = r;\r\n  } else if (dx > 0) {\r\n    if (r > t1) return;\r\n    if (r > t0) t0 = r;\r\n  }\r\n\r\n  r = x1 - ax;\r\n  if (!dx && r < 0) return;\r\n  r /= dx;\r\n  if (dx < 0) {\r\n    if (r > t1) return;\r\n    if (r > t0) t0 = r;\r\n  } else if (dx > 0) {\r\n    if (r < t0) return;\r\n    if (r < t1) t1 = r;\r\n  }\r\n\r\n  r = y0 - ay;\r\n  if (!dy && r > 0) return;\r\n  r /= dy;\r\n  if (dy < 0) {\r\n    if (r < t0) return;\r\n    if (r < t1) t1 = r;\r\n  } else if (dy > 0) {\r\n    if (r > t1) return;\r\n    if (r > t0) t0 = r;\r\n  }\r\n\r\n  r = y1 - ay;\r\n  if (!dy && r < 0) return;\r\n  r /= dy;\r\n  if (dy < 0) {\r\n    if (r > t1) return;\r\n    if (r > t0) t0 = r;\r\n  } else if (dy > 0) {\r\n    if (r < t0) return;\r\n    if (r < t1) t1 = r;\r\n  }\r\n\r\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\r\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\r\n  return true;\r\n}\r\n", "import {abs, epsilon} from \"../math.js\";\r\nimport clipBuffer from \"./buffer.js\";\r\nimport clipLine from \"./line.js\";\r\nimport clipRejoin from \"./rejoin.js\";\r\nimport {merge} from \"d3-array\";\r\n\r\nvar clipMax = 1e9, clipMin = -clipMax;\r\n\r\n// TODO Use d3-polygon’s polygonContains here for the ring check?\r\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\r\n\r\nexport default function clipRectangle(x0, y0, x1, y1) {\r\n\r\n  function visible(x, y) {\r\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\r\n  }\r\n\r\n  function interpolate(from, to, direction, stream) {\r\n    var a = 0, a1 = 0;\r\n    if (from == null\r\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\r\n        || comparePoint(from, to) < 0 ^ direction > 0) {\r\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\r\n      while ((a = (a + direction + 4) % 4) !== a1);\r\n    } else {\r\n      stream.point(to[0], to[1]);\r\n    }\r\n  }\r\n\r\n  function corner(p, direction) {\r\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\r\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\r\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\r\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\r\n  }\r\n\r\n  function compareIntersection(a, b) {\r\n    return comparePoint(a.x, b.x);\r\n  }\r\n\r\n  function comparePoint(a, b) {\r\n    var ca = corner(a, 1),\r\n        cb = corner(b, 1);\r\n    return ca !== cb ? ca - cb\r\n        : ca === 0 ? b[1] - a[1]\r\n        : ca === 1 ? a[0] - b[0]\r\n        : ca === 2 ? a[1] - b[1]\r\n        : b[0] - a[0];\r\n  }\r\n\r\n  return function(stream) {\r\n    var activeStream = stream,\r\n        bufferStream = clipBuffer(),\r\n        segments,\r\n        polygon,\r\n        ring,\r\n        x__, y__, v__, // first point\r\n        x_, y_, v_, // previous point\r\n        first,\r\n        clean;\r\n\r\n    var clipStream = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: polygonStart,\r\n      polygonEnd: polygonEnd\r\n    };\r\n\r\n    function point(x, y) {\r\n      if (visible(x, y)) activeStream.point(x, y);\r\n    }\r\n\r\n    function polygonInside() {\r\n      var winding = 0;\r\n\r\n      for (var i = 0, n = polygon.length; i < n; ++i) {\r\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\r\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\r\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\r\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\r\n        }\r\n      }\r\n\r\n      return winding;\r\n    }\r\n\r\n    // Buffer geometry within a polygon and then clip it en masse.\r\n    function polygonStart() {\r\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\r\n    }\r\n\r\n    function polygonEnd() {\r\n      var startInside = polygonInside(),\r\n          cleanInside = clean && startInside,\r\n          visible = (segments = merge(segments)).length;\r\n      if (cleanInside || visible) {\r\n        stream.polygonStart();\r\n        if (cleanInside) {\r\n          stream.lineStart();\r\n          interpolate(null, null, 1, stream);\r\n          stream.lineEnd();\r\n        }\r\n        if (visible) {\r\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\r\n        }\r\n        stream.polygonEnd();\r\n      }\r\n      activeStream = stream, segments = polygon = ring = null;\r\n    }\r\n\r\n    function lineStart() {\r\n      clipStream.point = linePoint;\r\n      if (polygon) polygon.push(ring = []);\r\n      first = true;\r\n      v_ = false;\r\n      x_ = y_ = NaN;\r\n    }\r\n\r\n    // TODO rather than special-case polygons, simply handle them separately.\r\n    // Ideally, coincident intersection points should be jittered to avoid\r\n    // clipping issues.\r\n    function lineEnd() {\r\n      if (segments) {\r\n        linePoint(x__, y__);\r\n        if (v__ && v_) bufferStream.rejoin();\r\n        segments.push(bufferStream.result());\r\n      }\r\n      clipStream.point = point;\r\n      if (v_) activeStream.lineEnd();\r\n    }\r\n\r\n    function linePoint(x, y) {\r\n      var v = visible(x, y);\r\n      if (polygon) ring.push([x, y]);\r\n      if (first) {\r\n        x__ = x, y__ = y, v__ = v;\r\n        first = false;\r\n        if (v) {\r\n          activeStream.lineStart();\r\n          activeStream.point(x, y);\r\n        }\r\n      } else {\r\n        if (v && v_) activeStream.point(x, y);\r\n        else {\r\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\r\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\r\n          if (clipLine(a, b, x0, y0, x1, y1)) {\r\n            if (!v_) {\r\n              activeStream.lineStart();\r\n              activeStream.point(a[0], a[1]);\r\n            }\r\n            activeStream.point(b[0], b[1]);\r\n            if (!v) activeStream.lineEnd();\r\n            clean = false;\r\n          } else if (v) {\r\n            activeStream.lineStart();\r\n            activeStream.point(x, y);\r\n            clean = false;\r\n          }\r\n        }\r\n      }\r\n      x_ = x, y_ = y, v_ = v;\r\n    }\r\n\r\n    return clipStream;\r\n  };\r\n}\r\n", "import clipRectangle from \"./rectangle.js\";\r\n\r\nexport default function() {\r\n  var x0 = 0,\r\n      y0 = 0,\r\n      x1 = 960,\r\n      y1 = 500,\r\n      cache,\r\n      cacheStream,\r\n      clip;\r\n\r\n  return clip = {\r\n    stream: function(stream) {\r\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\r\n    },\r\n    extent: function(_) {\r\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\r\n    }\r\n  };\r\n}\r\n", "import {Adder} from \"d3-array\";\r\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\r\nimport noop from \"./noop.js\";\r\nimport stream from \"./stream.js\";\r\n\r\nvar lengthSum,\r\n    lambda0,\r\n    sinPhi0,\r\n    cosPhi0;\r\n\r\nvar lengthStream = {\r\n  sphere: noop,\r\n  point: noop,\r\n  lineStart: lengthLineStart,\r\n  lineEnd: noop,\r\n  polygonStart: noop,\r\n  polygonEnd: noop\r\n};\r\n\r\nfunction lengthLineStart() {\r\n  lengthStream.point = lengthPointFirst;\r\n  lengthStream.lineEnd = lengthLineEnd;\r\n}\r\n\r\nfunction lengthLineEnd() {\r\n  lengthStream.point = lengthStream.lineEnd = noop;\r\n}\r\n\r\nfunction lengthPointFirst(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\r\n  lengthStream.point = lengthPoint;\r\n}\r\n\r\nfunction lengthPoint(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  var sinPhi = sin(phi),\r\n      cosPhi = cos(phi),\r\n      delta = abs(lambda - lambda0),\r\n      cosDelta = cos(delta),\r\n      sinDelta = sin(delta),\r\n      x = cosPhi * sinDelta,\r\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\r\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\r\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\r\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\r\n}\r\n\r\nexport default function(object) {\r\n  lengthSum = new Adder();\r\n  stream(object, lengthStream);\r\n  return +lengthSum;\r\n}\r\n", "import length from \"./length.js\";\r\n\r\nvar coordinates = [null, null],\r\n    object = {type: \"LineString\", coordinates: coordinates};\r\n\r\nexport default function(a, b) {\r\n  coordinates[0] = a;\r\n  coordinates[1] = b;\r\n  return length(object);\r\n}\r\n", "import {default as polygonContains} from \"./polygonContains.js\";\r\nimport {default as distance} from \"./distance.js\";\r\nimport {epsilon2, radians} from \"./math.js\";\r\n\r\nvar containsObjectType = {\r\n  Feature: function(object, point) {\r\n    return containsGeometry(object.geometry, point);\r\n  },\r\n  FeatureCollection: function(object, point) {\r\n    var features = object.features, i = -1, n = features.length;\r\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\r\n    return false;\r\n  }\r\n};\r\n\r\nvar containsGeometryType = {\r\n  Sphere: function() {\r\n    return true;\r\n  },\r\n  Point: function(object, point) {\r\n    return containsPoint(object.coordinates, point);\r\n  },\r\n  MultiPoint: function(object, point) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\r\n    return false;\r\n  },\r\n  LineString: function(object, point) {\r\n    return containsLine(object.coordinates, point);\r\n  },\r\n  MultiLineString: function(object, point) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\r\n    return false;\r\n  },\r\n  Polygon: function(object, point) {\r\n    return containsPolygon(object.coordinates, point);\r\n  },\r\n  MultiPolygon: function(object, point) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\r\n    return false;\r\n  },\r\n  GeometryCollection: function(object, point) {\r\n    var geometries = object.geometries, i = -1, n = geometries.length;\r\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\r\n    return false;\r\n  }\r\n};\r\n\r\nfunction containsGeometry(geometry, point) {\r\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\r\n      ? containsGeometryType[geometry.type](geometry, point)\r\n      : false;\r\n}\r\n\r\nfunction containsPoint(coordinates, point) {\r\n  return distance(coordinates, point) === 0;\r\n}\r\n\r\nfunction containsLine(coordinates, point) {\r\n  var ao, bo, ab;\r\n  for (var i = 0, n = coordinates.length; i < n; i++) {\r\n    bo = distance(coordinates[i], point);\r\n    if (bo === 0) return true;\r\n    if (i > 0) {\r\n      ab = distance(coordinates[i], coordinates[i - 1]);\r\n      if (\r\n        ab > 0 &&\r\n        ao <= ab &&\r\n        bo <= ab &&\r\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\r\n      )\r\n        return true;\r\n    }\r\n    ao = bo;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction containsPolygon(coordinates, point) {\r\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\r\n}\r\n\r\nfunction ringRadians(ring) {\r\n  return ring = ring.map(pointRadians), ring.pop(), ring;\r\n}\r\n\r\nfunction pointRadians(point) {\r\n  return [point[0] * radians, point[1] * radians];\r\n}\r\n\r\nexport default function(object, point) {\r\n  return (object && containsObjectType.hasOwnProperty(object.type)\r\n      ? containsObjectType[object.type]\r\n      : containsGeometry)(object, point);\r\n}\r\n", "import {range} from \"d3-array\";\r\nimport {abs, ceil, epsilon} from \"./math.js\";\r\n\r\nfunction graticuleX(y0, y1, dy) {\r\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\r\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\r\n}\r\n\r\nfunction graticuleY(x0, x1, dx) {\r\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\r\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\r\n}\r\n\r\nexport default function graticule() {\r\n  var x1, x0, X1, X0,\r\n      y1, y0, Y1, Y0,\r\n      dx = 10, dy = dx, DX = 90, DY = 360,\r\n      x, y, X, Y,\r\n      precision = 2.5;\r\n\r\n  function graticule() {\r\n    return {type: \"MultiLineString\", coordinates: lines()};\r\n  }\r\n\r\n  function lines() {\r\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\r\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\r\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\r\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\r\n  }\r\n\r\n  graticule.lines = function() {\r\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\r\n  };\r\n\r\n  graticule.outline = function() {\r\n    return {\r\n      type: \"Polygon\",\r\n      coordinates: [\r\n        X(X0).concat(\r\n        Y(Y1).slice(1),\r\n        X(X1).reverse().slice(1),\r\n        Y(Y0).reverse().slice(1))\r\n      ]\r\n    };\r\n  };\r\n\r\n  graticule.extent = function(_) {\r\n    if (!arguments.length) return graticule.extentMinor();\r\n    return graticule.extentMajor(_).extentMinor(_);\r\n  };\r\n\r\n  graticule.extentMajor = function(_) {\r\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\r\n    X0 = +_[0][0], X1 = +_[1][0];\r\n    Y0 = +_[0][1], Y1 = +_[1][1];\r\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\r\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\r\n    return graticule.precision(precision);\r\n  };\r\n\r\n  graticule.extentMinor = function(_) {\r\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\r\n    x0 = +_[0][0], x1 = +_[1][0];\r\n    y0 = +_[0][1], y1 = +_[1][1];\r\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\r\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\r\n    return graticule.precision(precision);\r\n  };\r\n\r\n  graticule.step = function(_) {\r\n    if (!arguments.length) return graticule.stepMinor();\r\n    return graticule.stepMajor(_).stepMinor(_);\r\n  };\r\n\r\n  graticule.stepMajor = function(_) {\r\n    if (!arguments.length) return [DX, DY];\r\n    DX = +_[0], DY = +_[1];\r\n    return graticule;\r\n  };\r\n\r\n  graticule.stepMinor = function(_) {\r\n    if (!arguments.length) return [dx, dy];\r\n    dx = +_[0], dy = +_[1];\r\n    return graticule;\r\n  };\r\n\r\n  graticule.precision = function(_) {\r\n    if (!arguments.length) return precision;\r\n    precision = +_;\r\n    x = graticuleX(y0, y1, 90);\r\n    y = graticuleY(x0, x1, precision);\r\n    X = graticuleX(Y0, Y1, 90);\r\n    Y = graticuleY(X0, X1, precision);\r\n    return graticule;\r\n  };\r\n\r\n  return graticule\r\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\r\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\r\n}\r\n\r\nexport function graticule10() {\r\n  return graticule()();\r\n}\r\n", "import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\r\n\r\nexport default function(a, b) {\r\n  var x0 = a[0] * radians,\r\n      y0 = a[1] * radians,\r\n      x1 = b[0] * radians,\r\n      y1 = b[1] * radians,\r\n      cy0 = cos(y0),\r\n      sy0 = sin(y0),\r\n      cy1 = cos(y1),\r\n      sy1 = sin(y1),\r\n      kx0 = cy0 * cos(x0),\r\n      ky0 = cy0 * sin(x0),\r\n      kx1 = cy1 * cos(x1),\r\n      ky1 = cy1 * sin(x1),\r\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\r\n      k = sin(d);\r\n\r\n  var interpolate = d ? function(t) {\r\n    var B = sin(t *= d) / k,\r\n        A = sin(d - t) / k,\r\n        x = A * kx0 + B * kx1,\r\n        y = A * ky0 + B * ky1,\r\n        z = A * sy0 + B * sy1;\r\n    return [\r\n      atan2(y, x) * degrees,\r\n      atan2(z, sqrt(x * x + y * y)) * degrees\r\n    ];\r\n  } : function() {\r\n    return [x0 * degrees, y0 * degrees];\r\n  };\r\n\r\n  interpolate.distance = d;\r\n\r\n  return interpolate;\r\n}\r\n", "export default x => x;\r\n", "import {Adder} from \"d3-array\";\r\nimport {abs} from \"../math.js\";\r\nimport noop from \"../noop.js\";\r\n\r\nvar areaSum = new Adder(),\r\n    areaRingSum = new Adder(),\r\n    x00,\r\n    y00,\r\n    x0,\r\n    y0;\r\n\r\nvar areaStream = {\r\n  point: noop,\r\n  lineStart: noop,\r\n  lineEnd: noop,\r\n  polygonStart: function() {\r\n    areaStream.lineStart = areaRingStart;\r\n    areaStream.lineEnd = areaRingEnd;\r\n  },\r\n  polygonEnd: function() {\r\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\r\n    areaSum.add(abs(areaRingSum));\r\n    areaRingSum = new Adder();\r\n  },\r\n  result: function() {\r\n    var area = areaSum / 2;\r\n    areaSum = new Adder();\r\n    return area;\r\n  }\r\n};\r\n\r\nfunction areaRingStart() {\r\n  areaStream.point = areaPointFirst;\r\n}\r\n\r\nfunction areaPointFirst(x, y) {\r\n  areaStream.point = areaPoint;\r\n  x00 = x0 = x, y00 = y0 = y;\r\n}\r\n\r\nfunction areaPoint(x, y) {\r\n  areaRingSum.add(y0 * x - x0 * y);\r\n  x0 = x, y0 = y;\r\n}\r\n\r\nfunction areaRingEnd() {\r\n  areaPoint(x00, y00);\r\n}\r\n\r\nexport default areaStream;\r\n", "import noop from \"../noop.js\";\r\n\r\nvar x0 = Infinity,\r\n    y0 = x0,\r\n    x1 = -x0,\r\n    y1 = x1;\r\n\r\nvar boundsStream = {\r\n  point: boundsPoint,\r\n  lineStart: noop,\r\n  lineEnd: noop,\r\n  polygonStart: noop,\r\n  polygonEnd: noop,\r\n  result: function() {\r\n    var bounds = [[x0, y0], [x1, y1]];\r\n    x1 = y1 = -(y0 = x0 = Infinity);\r\n    return bounds;\r\n  }\r\n};\r\n\r\nfunction boundsPoint(x, y) {\r\n  if (x < x0) x0 = x;\r\n  if (x > x1) x1 = x;\r\n  if (y < y0) y0 = y;\r\n  if (y > y1) y1 = y;\r\n}\r\n\r\nexport default boundsStream;\r\n", "import {sqrt} from \"../math.js\";\r\n\r\n// TODO Enforce positive area for exterior, negative area for interior?\r\n\r\nvar X0 = 0,\r\n    Y0 = 0,\r\n    Z0 = 0,\r\n    X1 = 0,\r\n    Y1 = 0,\r\n    Z1 = 0,\r\n    X2 = 0,\r\n    Y2 = 0,\r\n    Z2 = 0,\r\n    x00,\r\n    y00,\r\n    x0,\r\n    y0;\r\n\r\nvar centroidStream = {\r\n  point: centroidPoint,\r\n  lineStart: centroidLineStart,\r\n  lineEnd: centroidLineEnd,\r\n  polygonStart: function() {\r\n    centroidStream.lineStart = centroidRingStart;\r\n    centroidStream.lineEnd = centroidRingEnd;\r\n  },\r\n  polygonEnd: function() {\r\n    centroidStream.point = centroidPoint;\r\n    centroidStream.lineStart = centroidLineStart;\r\n    centroidStream.lineEnd = centroidLineEnd;\r\n  },\r\n  result: function() {\r\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\r\n        : Z1 ? [X1 / Z1, Y1 / Z1]\r\n        : Z0 ? [X0 / Z0, Y0 / Z0]\r\n        : [NaN, NaN];\r\n    X0 = Y0 = Z0 =\r\n    X1 = Y1 = Z1 =\r\n    X2 = Y2 = Z2 = 0;\r\n    return centroid;\r\n  }\r\n};\r\n\r\nfunction centroidPoint(x, y) {\r\n  X0 += x;\r\n  Y0 += y;\r\n  ++Z0;\r\n}\r\n\r\nfunction centroidLineStart() {\r\n  centroidStream.point = centroidPointFirstLine;\r\n}\r\n\r\nfunction centroidPointFirstLine(x, y) {\r\n  centroidStream.point = centroidPointLine;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nfunction centroidPointLine(x, y) {\r\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\r\n  X1 += z * (x0 + x) / 2;\r\n  Y1 += z * (y0 + y) / 2;\r\n  Z1 += z;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nfunction centroidLineEnd() {\r\n  centroidStream.point = centroidPoint;\r\n}\r\n\r\nfunction centroidRingStart() {\r\n  centroidStream.point = centroidPointFirstRing;\r\n}\r\n\r\nfunction centroidRingEnd() {\r\n  centroidPointRing(x00, y00);\r\n}\r\n\r\nfunction centroidPointFirstRing(x, y) {\r\n  centroidStream.point = centroidPointRing;\r\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\r\n}\r\n\r\nfunction centroidPointRing(x, y) {\r\n  var dx = x - x0,\r\n      dy = y - y0,\r\n      z = sqrt(dx * dx + dy * dy);\r\n\r\n  X1 += z * (x0 + x) / 2;\r\n  Y1 += z * (y0 + y) / 2;\r\n  Z1 += z;\r\n\r\n  z = y0 * x - x0 * y;\r\n  X2 += z * (x0 + x);\r\n  Y2 += z * (y0 + y);\r\n  Z2 += z * 3;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nexport default centroidStream;\r\n", "import {tau} from \"../math.js\";\r\nimport noop from \"../noop.js\";\r\n\r\nexport default function PathContext(context) {\r\n  this._context = context;\r\n}\r\n\r\nPathContext.prototype = {\r\n  _radius: 4.5,\r\n  pointRadius: function(_) {\r\n    return this._radius = _, this;\r\n  },\r\n  polygonStart: function() {\r\n    this._line = 0;\r\n  },\r\n  polygonEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (this._line === 0) this._context.closePath();\r\n    this._point = NaN;\r\n  },\r\n  point: function(x, y) {\r\n    switch (this._point) {\r\n      case 0: {\r\n        this._context.moveTo(x, y);\r\n        this._point = 1;\r\n        break;\r\n      }\r\n      case 1: {\r\n        this._context.lineTo(x, y);\r\n        break;\r\n      }\r\n      default: {\r\n        this._context.moveTo(x + this._radius, y);\r\n        this._context.arc(x, y, this._radius, 0, tau);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  result: noop\r\n};\r\n", "import {Adder} from \"d3-array\";\r\nimport {sqrt} from \"../math.js\";\r\nimport noop from \"../noop.js\";\r\n\r\nvar lengthSum = new Adder(),\r\n    lengthRing,\r\n    x00,\r\n    y00,\r\n    x0,\r\n    y0;\r\n\r\nvar lengthStream = {\r\n  point: noop,\r\n  lineStart: function() {\r\n    lengthStream.point = lengthPointFirst;\r\n  },\r\n  lineEnd: function() {\r\n    if (lengthRing) lengthPoint(x00, y00);\r\n    lengthStream.point = noop;\r\n  },\r\n  polygonStart: function() {\r\n    lengthRing = true;\r\n  },\r\n  polygonEnd: function() {\r\n    lengthRing = null;\r\n  },\r\n  result: function() {\r\n    var length = +lengthSum;\r\n    lengthSum = new Adder();\r\n    return length;\r\n  }\r\n};\r\n\r\nfunction lengthPointFirst(x, y) {\r\n  lengthStream.point = lengthPoint;\r\n  x00 = x0 = x, y00 = y0 = y;\r\n}\r\n\r\nfunction lengthPoint(x, y) {\r\n  x0 -= x, y0 -= y;\r\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\r\n  x0 = x, y0 = y;\r\n}\r\n\r\nexport default lengthStream;\r\n", "// Simple caching for constant-radius points.\r\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\r\n\r\nexport default class PathString {\r\n  constructor(digits) {\r\n    this._append = digits == null ? append : appendRound(digits);\r\n    this._radius = 4.5;\r\n    this._ = \"\";\r\n  }\r\n  pointRadius(_) {\r\n    this._radius = +_;\r\n    return this;\r\n  }\r\n  polygonStart() {\r\n    this._line = 0;\r\n  }\r\n  polygonEnd() {\r\n    this._line = NaN;\r\n  }\r\n  lineStart() {\r\n    this._point = 0;\r\n  }\r\n  lineEnd() {\r\n    if (this._line === 0) this._ += \"Z\";\r\n    this._point = NaN;\r\n  }\r\n  point(x, y) {\r\n    switch (this._point) {\r\n      case 0: {\r\n        this._append`M${x},${y}`;\r\n        this._point = 1;\r\n        break;\r\n      }\r\n      case 1: {\r\n        this._append`L${x},${y}`;\r\n        break;\r\n      }\r\n      default: {\r\n        this._append`M${x},${y}`;\r\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\r\n          const r = this._radius;\r\n          const s = this._;\r\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\r\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\r\n          cacheRadius = r;\r\n          cacheAppend = this._append;\r\n          cacheCircle = this._;\r\n          this._ = s;\r\n        }\r\n        this._ += cacheCircle;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  result() {\r\n    const result = this._;\r\n    this._ = \"\";\r\n    return result.length ? result : null;\r\n  }\r\n}\r\n\r\nfunction append(strings) {\r\n  let i = 1;\r\n  this._ += strings[0];\r\n  for (const j = strings.length; i < j; ++i) {\r\n    this._ += arguments[i] + strings[i];\r\n  }\r\n}\r\n\r\nfunction appendRound(digits) {\r\n  const d = Math.floor(digits);\r\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\r\n  if (d > 15) return append;\r\n  if (d !== cacheDigits) {\r\n    const k = 10 ** d;\r\n    cacheDigits = d;\r\n    cacheAppend = function append(strings) {\r\n      let i = 1;\r\n      this._ += strings[0];\r\n      for (const j = strings.length; i < j; ++i) {\r\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\r\n      }\r\n    };\r\n  }\r\n  return cacheAppend;\r\n}\r\n", "import identity from \"../identity.js\";\r\nimport stream from \"../stream.js\";\r\nimport pathArea from \"./area.js\";\r\nimport pathBounds from \"./bounds.js\";\r\nimport pathCentroid from \"./centroid.js\";\r\nimport PathContext from \"./context.js\";\r\nimport pathMeasure from \"./measure.js\";\r\nimport PathString from \"./string.js\";\r\n\r\nexport default function(projection, context) {\r\n  let digits = 3,\r\n      pointRadius = 4.5,\r\n      projectionStream,\r\n      contextStream;\r\n\r\n  function path(object) {\r\n    if (object) {\r\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\r\n      stream(object, projectionStream(contextStream));\r\n    }\r\n    return contextStream.result();\r\n  }\r\n\r\n  path.area = function(object) {\r\n    stream(object, projectionStream(pathArea));\r\n    return pathArea.result();\r\n  };\r\n\r\n  path.measure = function(object) {\r\n    stream(object, projectionStream(pathMeasure));\r\n    return pathMeasure.result();\r\n  };\r\n\r\n  path.bounds = function(object) {\r\n    stream(object, projectionStream(pathBounds));\r\n    return pathBounds.result();\r\n  };\r\n\r\n  path.centroid = function(object) {\r\n    stream(object, projectionStream(pathCentroid));\r\n    return pathCentroid.result();\r\n  };\r\n\r\n  path.projection = function(_) {\r\n    if (!arguments.length) return projection;\r\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\r\n    return path;\r\n  };\r\n\r\n  path.context = function(_) {\r\n    if (!arguments.length) return context;\r\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\r\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\r\n    return path;\r\n  };\r\n\r\n  path.pointRadius = function(_) {\r\n    if (!arguments.length) return pointRadius;\r\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\r\n    return path;\r\n  };\r\n\r\n  path.digits = function(_) {\r\n    if (!arguments.length) return digits;\r\n    if (_ == null) digits = null;\r\n    else {\r\n      const d = Math.floor(_);\r\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\r\n      digits = d;\r\n    }\r\n    if (context === null) contextStream = new PathString(digits);\r\n    return path;\r\n  };\r\n\r\n  return path.projection(projection).digits(digits).context(context);\r\n}\r\n", "export default function(methods) {\r\n  return {\r\n    stream: transformer(methods)\r\n  };\r\n}\r\n\r\nexport function transformer(methods) {\r\n  return function(stream) {\r\n    var s = new TransformStream;\r\n    for (var key in methods) s[key] = methods[key];\r\n    s.stream = stream;\r\n    return s;\r\n  };\r\n}\r\n\r\nfunction TransformStream() {}\r\n\r\nTransformStream.prototype = {\r\n  constructor: TransformStream,\r\n  point: function(x, y) { this.stream.point(x, y); },\r\n  sphere: function() { this.stream.sphere(); },\r\n  lineStart: function() { this.stream.lineStart(); },\r\n  lineEnd: function() { this.stream.lineEnd(); },\r\n  polygonStart: function() { this.stream.polygonStart(); },\r\n  polygonEnd: function() { this.stream.polygonEnd(); }\r\n};\r\n", "import {default as geoStream} from \"../stream.js\";\r\nimport boundsStream from \"../path/bounds.js\";\r\n\r\nfunction fit(projection, fitBounds, object) {\r\n  var clip = projection.clipExtent && projection.clipExtent();\r\n  projection.scale(150).translate([0, 0]);\r\n  if (clip != null) projection.clipExtent(null);\r\n  geoStream(object, projection.stream(boundsStream));\r\n  fitBounds(boundsStream.result());\r\n  if (clip != null) projection.clipExtent(clip);\r\n  return projection;\r\n}\r\n\r\nexport function fitExtent(projection, extent, object) {\r\n  return fit(projection, function(b) {\r\n    var w = extent[1][0] - extent[0][0],\r\n        h = extent[1][1] - extent[0][1],\r\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\r\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\r\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\r\n    projection.scale(150 * k).translate([x, y]);\r\n  }, object);\r\n}\r\n\r\nexport function fitSize(projection, size, object) {\r\n  return fitExtent(projection, [[0, 0], size], object);\r\n}\r\n\r\nexport function fitWidth(projection, width, object) {\r\n  return fit(projection, function(b) {\r\n    var w = +width,\r\n        k = w / (b[1][0] - b[0][0]),\r\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\r\n        y = -k * b[0][1];\r\n    projection.scale(150 * k).translate([x, y]);\r\n  }, object);\r\n}\r\n\r\nexport function fitHeight(projection, height, object) {\r\n  return fit(projection, function(b) {\r\n    var h = +height,\r\n        k = h / (b[1][1] - b[0][1]),\r\n        x = -k * b[0][0],\r\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\r\n    projection.scale(150 * k).translate([x, y]);\r\n  }, object);\r\n}\r\n", "import {cartesian} from \"../cartesian.js\";\r\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\r\nimport {transformer} from \"../transform.js\";\r\n\r\nvar maxDepth = 16, // maximum depth of subdivision\r\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\r\n\r\nexport default function(project, delta2) {\r\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\r\n}\r\n\r\nfunction resampleNone(project) {\r\n  return transformer({\r\n    point: function(x, y) {\r\n      x = project(x, y);\r\n      this.stream.point(x[0], x[1]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction resample(project, delta2) {\r\n\r\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\r\n    var dx = x1 - x0,\r\n        dy = y1 - y0,\r\n        d2 = dx * dx + dy * dy;\r\n    if (d2 > 4 * delta2 && depth--) {\r\n      var a = a0 + a1,\r\n          b = b0 + b1,\r\n          c = c0 + c1,\r\n          m = sqrt(a * a + b * b + c * c),\r\n          phi2 = asin(c /= m),\r\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\r\n          p = project(lambda2, phi2),\r\n          x2 = p[0],\r\n          y2 = p[1],\r\n          dx2 = x2 - x0,\r\n          dy2 = y2 - y0,\r\n          dz = dy * dx2 - dx * dy2;\r\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\r\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\r\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\r\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\r\n        stream.point(x2, y2);\r\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\r\n      }\r\n    }\r\n  }\r\n  return function(stream) {\r\n    var lambda00, x00, y00, a00, b00, c00, // first point\r\n        lambda0, x0, y0, a0, b0, c0; // previous point\r\n\r\n    var resampleStream = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\r\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\r\n    };\r\n\r\n    function point(x, y) {\r\n      x = project(x, y);\r\n      stream.point(x[0], x[1]);\r\n    }\r\n\r\n    function lineStart() {\r\n      x0 = NaN;\r\n      resampleStream.point = linePoint;\r\n      stream.lineStart();\r\n    }\r\n\r\n    function linePoint(lambda, phi) {\r\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\r\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\r\n      stream.point(x0, y0);\r\n    }\r\n\r\n    function lineEnd() {\r\n      resampleStream.point = point;\r\n      stream.lineEnd();\r\n    }\r\n\r\n    function ringStart() {\r\n      lineStart();\r\n      resampleStream.point = ringPoint;\r\n      resampleStream.lineEnd = ringEnd;\r\n    }\r\n\r\n    function ringPoint(lambda, phi) {\r\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\r\n      resampleStream.point = linePoint;\r\n    }\r\n\r\n    function ringEnd() {\r\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\r\n      resampleStream.lineEnd = lineEnd;\r\n      lineEnd();\r\n    }\r\n\r\n    return resampleStream;\r\n  };\r\n}\r\n", "import clipAntimeridian from \"../clip/antimeridian.js\";\r\nimport clipCircle from \"../clip/circle.js\";\r\nimport clipRectangle from \"../clip/rectangle.js\";\r\nimport compose from \"../compose.js\";\r\nimport identity from \"../identity.js\";\r\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\r\nimport {rotateRadians} from \"../rotation.js\";\r\nimport {transformer} from \"../transform.js\";\r\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\r\nimport resample from \"./resample.js\";\r\n\r\nvar transformRadians = transformer({\r\n  point: function(x, y) {\r\n    this.stream.point(x * radians, y * radians);\r\n  }\r\n});\r\n\r\nfunction transformRotate(rotate) {\r\n  return transformer({\r\n    point: function(x, y) {\r\n      var r = rotate(x, y);\r\n      return this.stream.point(r[0], r[1]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction scaleTranslate(k, dx, dy, sx, sy) {\r\n  function transform(x, y) {\r\n    x *= sx; y *= sy;\r\n    return [dx + k * x, dy - k * y];\r\n  }\r\n  transform.invert = function(x, y) {\r\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\r\n  };\r\n  return transform;\r\n}\r\n\r\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\r\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\r\n  var cosAlpha = cos(alpha),\r\n      sinAlpha = sin(alpha),\r\n      a = cosAlpha * k,\r\n      b = sinAlpha * k,\r\n      ai = cosAlpha / k,\r\n      bi = sinAlpha / k,\r\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\r\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\r\n  function transform(x, y) {\r\n    x *= sx; y *= sy;\r\n    return [a * x - b * y + dx, dy - b * x - a * y];\r\n  }\r\n  transform.invert = function(x, y) {\r\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\r\n  };\r\n  return transform;\r\n}\r\n\r\nexport default function projection(project) {\r\n  return projectionMutator(function() { return project; })();\r\n}\r\n\r\nexport function projectionMutator(projectAt) {\r\n  var project,\r\n      k = 150, // scale\r\n      x = 480, y = 250, // translate\r\n      lambda = 0, phi = 0, // center\r\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\r\n      alpha = 0, // post-rotate angle\r\n      sx = 1, // reflectX\r\n      sy = 1, // reflectX\r\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\r\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\r\n      delta2 = 0.5, // precision\r\n      projectResample,\r\n      projectTransform,\r\n      projectRotateTransform,\r\n      cache,\r\n      cacheStream;\r\n\r\n  function projection(point) {\r\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\r\n  }\r\n\r\n  function invert(point) {\r\n    point = projectRotateTransform.invert(point[0], point[1]);\r\n    return point && [point[0] * degrees, point[1] * degrees];\r\n  }\r\n\r\n  projection.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\r\n  };\r\n\r\n  projection.preclip = function(_) {\r\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\r\n  };\r\n\r\n  projection.postclip = function(_) {\r\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\r\n  };\r\n\r\n  projection.clipAngle = function(_) {\r\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\r\n  };\r\n\r\n  projection.clipExtent = function(_) {\r\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\r\n  };\r\n\r\n  projection.scale = function(_) {\r\n    return arguments.length ? (k = +_, recenter()) : k;\r\n  };\r\n\r\n  projection.translate = function(_) {\r\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\r\n  };\r\n\r\n  projection.center = function(_) {\r\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\r\n  };\r\n\r\n  projection.rotate = function(_) {\r\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\r\n  };\r\n\r\n  projection.angle = function(_) {\r\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\r\n  };\r\n\r\n  projection.reflectX = function(_) {\r\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\r\n  };\r\n\r\n  projection.reflectY = function(_) {\r\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\r\n  };\r\n\r\n  projection.precision = function(_) {\r\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\r\n  };\r\n\r\n  projection.fitExtent = function(extent, object) {\r\n    return fitExtent(projection, extent, object);\r\n  };\r\n\r\n  projection.fitSize = function(size, object) {\r\n    return fitSize(projection, size, object);\r\n  };\r\n\r\n  projection.fitWidth = function(width, object) {\r\n    return fitWidth(projection, width, object);\r\n  };\r\n\r\n  projection.fitHeight = function(height, object) {\r\n    return fitHeight(projection, height, object);\r\n  };\r\n\r\n  function recenter() {\r\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\r\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\r\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\r\n    projectTransform = compose(project, transform);\r\n    projectRotateTransform = compose(rotate, projectTransform);\r\n    projectResample = resample(projectTransform, delta2);\r\n    return reset();\r\n  }\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return projection;\r\n  }\r\n\r\n  return function() {\r\n    project = projectAt.apply(this, arguments);\r\n    projection.invert = project.invert && invert;\r\n    return recenter();\r\n  };\r\n}\r\n", "import {degrees, pi, radians} from \"../math.js\";\r\nimport {projectionMutator} from \"./index.js\";\r\n\r\nexport function conicProjection(projectAt) {\r\n  var phi0 = 0,\r\n      phi1 = pi / 3,\r\n      m = projectionMutator(projectAt),\r\n      p = m(phi0, phi1);\r\n\r\n  p.parallels = function(_) {\r\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\r\n  };\r\n\r\n  return p;\r\n}\r\n", "import {asin, cos, sin} from \"../math.js\";\r\n\r\nexport function cylindricalEqualAreaRaw(phi0) {\r\n  var cosPhi0 = cos(phi0);\r\n\r\n  function forward(lambda, phi) {\r\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\r\n  }\r\n\r\n  forward.invert = function(x, y) {\r\n    return [x / cosPhi0, asin(y * cosPhi0)];\r\n  };\r\n\r\n  return forward;\r\n}\r\n", "import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\r\nimport {conicProjection} from \"./conic.js\";\r\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\r\n\r\nexport function conicEqualAreaRaw(y0, y1) {\r\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\r\n\r\n  // Are the parallels symmetrical around the Equator?\r\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\r\n\r\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\r\n\r\n  function project(x, y) {\r\n    var r = sqrt(c - 2 * n * sin(y)) / n;\r\n    return [r * sin(x *= n), r0 - r * cos(x)];\r\n  }\r\n\r\n  project.invert = function(x, y) {\r\n    var r0y = r0 - y,\r\n        l = atan2(x, abs(r0y)) * sign(r0y);\r\n    if (r0y * n < 0)\r\n      l -= pi * sign(x) * sign(r0y);\r\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\r\n  };\r\n\r\n  return project;\r\n}\r\n\r\nexport default function() {\r\n  return conicProjection(conicEqualAreaRaw)\r\n      .scale(155.424)\r\n      .center([0, 33.6442]);\r\n}\r\n", "import conicEqualArea from \"./conicEqualArea.js\";\r\n\r\nexport default function() {\r\n  return conicEqualArea()\r\n      .parallels([29.5, 45.5])\r\n      .scale(1070)\r\n      .translate([480, 250])\r\n      .rotate([96, 0])\r\n      .center([-0.6, 38.7]);\r\n}\r\n", "import {epsilon} from \"../math.js\";\r\nimport albers from \"./albers.js\";\r\nimport conicEqualArea from \"./conicEqualArea.js\";\r\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\r\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\r\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\r\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\r\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\r\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\r\n  };\r\n}\r\n\r\n// A composite projection for the United States, configured by default for\r\n// 960×500. The projection also works quite well at 960×600 if you change the\r\n// scale to 1285 and adjust the translate accordingly. The set of standard\r\n// parallels for each region comes from USGS, which is published here:\r\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      lower48 = albers(), lower48Point,\r\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\r\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n  function albersUsa(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (lower48Point.point(x, y), point)\r\n        || (alaskaPoint.point(x, y), point)\r\n        || (hawaiiPoint.point(x, y), point);\r\n  }\r\n\r\n  albersUsa.invert = function(coordinates) {\r\n    var k = lower48.scale(),\r\n        t = lower48.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\r\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\r\n        : lower48).invert(coordinates);\r\n  };\r\n\r\n  albersUsa.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\r\n  };\r\n\r\n  albersUsa.precision = function(_) {\r\n    if (!arguments.length) return lower48.precision();\r\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  albersUsa.scale = function(_) {\r\n    if (!arguments.length) return lower48.scale();\r\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\r\n    return albersUsa.translate(lower48.translate());\r\n  };\r\n\r\n  albersUsa.translate = function(_) {\r\n    if (!arguments.length) return lower48.translate();\r\n    var k = lower48.scale(), x = +_[0], y = +_[1];\r\n\r\n    lower48Point = lower48\r\n        .translate(_)\r\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\r\n        .stream(pointStream);\r\n\r\n    alaskaPoint = alaska\r\n        .translate([x - 0.307 * k, y + 0.201 * k])\r\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    hawaiiPoint = hawaii\r\n        .translate([x - 0.205 * k, y + 0.212 * k])\r\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  albersUsa.fitExtent = function(extent, object) {\r\n    return fitExtent(albersUsa, extent, object);\r\n  };\r\n\r\n  albersUsa.fitSize = function(size, object) {\r\n    return fitSize(albersUsa, size, object);\r\n  };\r\n\r\n  albersUsa.fitWidth = function(width, object) {\r\n    return fitWidth(albersUsa, width, object);\r\n  };\r\n\r\n  albersUsa.fitHeight = function(height, object) {\r\n    return fitHeight(albersUsa, height, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return albersUsa;\r\n  }\r\n\r\n  return albersUsa.scale(1070);\r\n}\r\n", "import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\r\n\r\nexport function azimuthalRaw(scale) {\r\n  return function(x, y) {\r\n    var cx = cos(x),\r\n        cy = cos(y),\r\n        k = scale(cx * cy);\r\n        if (k === Infinity) return [2, 0];\r\n    return [\r\n      k * cy * sin(x),\r\n      k * sin(y)\r\n    ];\r\n  }\r\n}\r\n\r\nexport function azimuthalInvert(angle) {\r\n  return function(x, y) {\r\n    var z = sqrt(x * x + y * y),\r\n        c = angle(z),\r\n        sc = sin(c),\r\n        cc = cos(c);\r\n    return [\r\n      atan2(x * sc, z * cc),\r\n      asin(z && y * sc / z)\r\n    ];\r\n  }\r\n}\r\n", "import {asin, sqrt} from \"../math.js\";\r\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\r\n  return sqrt(2 / (1 + cxcy));\r\n});\r\n\r\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\r\n  return 2 * asin(z / 2);\r\n});\r\n\r\nexport default function() {\r\n  return projection(azimuthalEqualAreaRaw)\r\n      .scale(124.75)\r\n      .clipAngle(180 - 1e-3);\r\n}\r\n", "import {acos, sin} from \"../math.js\";\r\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\r\n  return (c = acos(c)) && c / sin(c);\r\n});\r\n\r\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\r\n  return z;\r\n});\r\n\r\nexport default function() {\r\n  return projection(azimuthalEquidistantRaw)\r\n      .scale(79.4188)\r\n      .clipAngle(180 - 1e-3);\r\n}\r\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\r\nimport rotation from \"../rotation.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport function mercatorRaw(lambda, phi) {\r\n  return [lambda, log(tan((halfPi + phi) / 2))];\r\n}\r\n\r\nmercatorRaw.invert = function(x, y) {\r\n  return [x, 2 * atan(exp(y)) - halfPi];\r\n};\r\n\r\nexport default function() {\r\n  return mercatorProjection(mercatorRaw)\r\n      .scale(961 / tau);\r\n}\r\n\r\nexport function mercatorProjection(project) {\r\n  var m = projection(project),\r\n      center = m.center,\r\n      scale = m.scale,\r\n      translate = m.translate,\r\n      clipExtent = m.clipExtent,\r\n      x0 = null, y0, x1, y1; // clip extent\r\n\r\n  m.scale = function(_) {\r\n    return arguments.length ? (scale(_), reclip()) : scale();\r\n  };\r\n\r\n  m.translate = function(_) {\r\n    return arguments.length ? (translate(_), reclip()) : translate();\r\n  };\r\n\r\n  m.center = function(_) {\r\n    return arguments.length ? (center(_), reclip()) : center();\r\n  };\r\n\r\n  m.clipExtent = function(_) {\r\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\r\n  };\r\n\r\n  function reclip() {\r\n    var k = pi * scale(),\r\n        t = m(rotation(m.rotate()).invert([0, 0]));\r\n    return clipExtent(x0 == null\r\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\r\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\r\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\r\n  }\r\n\r\n  return reclip();\r\n}\r\n", "import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\r\nimport {conicProjection} from \"./conic.js\";\r\nimport {mercatorRaw} from \"./mercator.js\";\r\n\r\nfunction tany(y) {\r\n  return tan((halfPi + y) / 2);\r\n}\r\n\r\nexport function conicConformalRaw(y0, y1) {\r\n  var cy0 = cos(y0),\r\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\r\n      f = cy0 * pow(tany(y0), n) / n;\r\n\r\n  if (!n) return mercatorRaw;\r\n\r\n  function project(x, y) {\r\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\r\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\r\n    var r = f / pow(tany(y), n);\r\n    return [r * sin(n * x), f - r * cos(n * x)];\r\n  }\r\n\r\n  project.invert = function(x, y) {\r\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\r\n      l = atan2(x, abs(fy)) * sign(fy);\r\n    if (fy * n < 0)\r\n      l -= pi * sign(x) * sign(fy);\r\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\r\n  };\r\n\r\n  return project;\r\n}\r\n\r\nexport default function() {\r\n  return conicProjection(conicConformalRaw)\r\n      .scale(109.5)\r\n      .parallels([30, 30]);\r\n}\r\n", "import projection from \"./index.js\";\r\n\r\nexport function equirectangularRaw(lambda, phi) {\r\n  return [lambda, phi];\r\n}\r\n\r\nequirectangularRaw.invert = equirectangularRaw;\r\n\r\nexport default function() {\r\n  return projection(equirectangularRaw)\r\n      .scale(152.63);\r\n}\r\n", "import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\r\nimport {conicProjection} from \"./conic.js\";\r\nimport {equirectangularRaw} from \"./equirectangular.js\";\r\n\r\nexport function conicEquidistantRaw(y0, y1) {\r\n  var cy0 = cos(y0),\r\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\r\n      g = cy0 / n + y0;\r\n\r\n  if (abs(n) < epsilon) return equirectangularRaw;\r\n\r\n  function project(x, y) {\r\n    var gy = g - y, nx = n * x;\r\n    return [gy * sin(nx), g - gy * cos(nx)];\r\n  }\r\n\r\n  project.invert = function(x, y) {\r\n    var gy = g - y,\r\n        l = atan2(x, abs(gy)) * sign(gy);\r\n    if (gy * n < 0)\r\n      l -= pi * sign(x) * sign(gy);\r\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\r\n  };\r\n\r\n  return project;\r\n}\r\n\r\nexport default function() {\r\n  return conicProjection(conicEquidistantRaw)\r\n      .scale(131.154)\r\n      .center([0, 13.9389]);\r\n}\r\n", "import projection from \"./index.js\";\r\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\r\n\r\nvar A1 = 1.340264,\r\n    A2 = -0.081106,\r\n    A3 = 0.000893,\r\n    A4 = 0.003796,\r\n    M = sqrt(3) / 2,\r\n    iterations = 12;\r\n\r\nexport function equalEarthRaw(lambda, phi) {\r\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\r\n  return [\r\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\r\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\r\n  ];\r\n}\r\n\r\nequalEarthRaw.invert = function(x, y) {\r\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\r\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\r\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\r\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\r\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\r\n    if (abs(delta) < epsilon2) break;\r\n  }\r\n  return [\r\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\r\n    asin(sin(l) / M)\r\n  ];\r\n};\r\n\r\nexport default function() {\r\n  return projection(equalEarthRaw)\r\n      .scale(177.158);\r\n}\r\n", "import {atan, cos, sin} from \"../math.js\";\r\nimport {azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport function gnomonicRaw(x, y) {\r\n  var cy = cos(y), k = cos(x) * cy;\r\n  return [cy * sin(x) / k, sin(y) / k];\r\n}\r\n\r\ngnomonicRaw.invert = azimuthalInvert(atan);\r\n\r\nexport default function() {\r\n  return projection(gnomonicRaw)\r\n      .scale(144.049)\r\n      .clipAngle(60);\r\n}\r\n", "import clipRectangle from \"../clip/rectangle.js\";\r\nimport identity from \"../identity.js\";\r\nimport {transformer} from \"../transform.js\";\r\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\r\nimport {cos, degrees, radians, sin} from \"../math.js\";\r\n\r\nexport default function() {\r\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\r\n      alpha = 0, ca, sa, // angle\r\n      x0 = null, y0, x1, y1, // clip extent\r\n      kx = 1, ky = 1,\r\n      transform = transformer({\r\n        point: function(x, y) {\r\n          var p = projection([x, y])\r\n          this.stream.point(p[0], p[1]);\r\n        }\r\n      }),\r\n      postclip = identity,\r\n      cache,\r\n      cacheStream;\r\n\r\n  function reset() {\r\n    kx = k * sx;\r\n    ky = k * sy;\r\n    cache = cacheStream = null;\r\n    return projection;\r\n  }\r\n\r\n  function projection (p) {\r\n    var x = p[0] * kx, y = p[1] * ky;\r\n    if (alpha) {\r\n      var t = y * ca - x * sa;\r\n      x = x * ca + y * sa;\r\n      y = t;\r\n    }    \r\n    return [x + tx, y + ty];\r\n  }\r\n  projection.invert = function(p) {\r\n    var x = p[0] - tx, y = p[1] - ty;\r\n    if (alpha) {\r\n      var t = y * ca + x * sa;\r\n      x = x * ca - y * sa;\r\n      y = t;\r\n    }\r\n    return [x / kx, y / ky];\r\n  };\r\n  projection.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\r\n  };\r\n  projection.postclip = function(_) {\r\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\r\n  };\r\n  projection.clipExtent = function(_) {\r\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\r\n  };\r\n  projection.scale = function(_) {\r\n    return arguments.length ? (k = +_, reset()) : k;\r\n  };\r\n  projection.translate = function(_) {\r\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\r\n  }\r\n  projection.angle = function(_) {\r\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\r\n  };\r\n  projection.reflectX = function(_) {\r\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\r\n  };\r\n  projection.reflectY = function(_) {\r\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\r\n  };\r\n  projection.fitExtent = function(extent, object) {\r\n    return fitExtent(projection, extent, object);\r\n  };\r\n  projection.fitSize = function(size, object) {\r\n    return fitSize(projection, size, object);\r\n  };\r\n  projection.fitWidth = function(width, object) {\r\n    return fitWidth(projection, width, object);\r\n  };\r\n  projection.fitHeight = function(height, object) {\r\n    return fitHeight(projection, height, object);\r\n  };\r\n\r\n  return projection;\r\n}\r\n", "import projection from \"./index.js\";\r\nimport {abs, epsilon} from \"../math.js\";\r\n\r\nexport function naturalEarth1Raw(lambda, phi) {\r\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\r\n  return [\r\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\r\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\r\n  ];\r\n}\r\n\r\nnaturalEarth1Raw.invert = function(x, y) {\r\n  var phi = y, i = 25, delta;\r\n  do {\r\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\r\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\r\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\r\n  } while (abs(delta) > epsilon && --i > 0);\r\n  return [\r\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\r\n    phi\r\n  ];\r\n};\r\n\r\nexport default function() {\r\n  return projection(naturalEarth1Raw)\r\n      .scale(175.295);\r\n}\r\n", "import {asin, cos, epsilon, sin} from \"../math.js\";\r\nimport {azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport function orthographicRaw(x, y) {\r\n  return [cos(y) * sin(x), sin(y)];\r\n}\r\n\r\northographicRaw.invert = azimuthalInvert(asin);\r\n\r\nexport default function() {\r\n  return projection(orthographicRaw)\r\n      .scale(249.5)\r\n      .clipAngle(90 + epsilon);\r\n}\r\n", "import {atan, cos, sin} from \"../math.js\";\r\nimport {azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport function stereographicRaw(x, y) {\r\n  var cy = cos(y), k = 1 + cos(x) * cy;\r\n  return [cy * sin(x) / k, sin(y) / k];\r\n}\r\n\r\nstereographicRaw.invert = azimuthalInvert(function(z) {\r\n  return 2 * atan(z);\r\n});\r\n\r\nexport default function() {\r\n  return projection(stereographicRaw)\r\n      .scale(250)\r\n      .clipAngle(142);\r\n}\r\n", "import {atan, exp, halfPi, log, tan} from \"../math.js\";\r\nimport {mercatorProjection} from \"./mercator.js\";\r\n\r\nexport function transverseMercatorRaw(lambda, phi) {\r\n  return [log(tan((halfPi + phi) / 2)), -lambda];\r\n}\r\n\r\ntransverseMercatorRaw.invert = function(x, y) {\r\n  return [-y, 2 * atan(exp(x)) - halfPi];\r\n};\r\n\r\nexport default function() {\r\n  var m = mercatorProjection(transverseMercatorRaw),\r\n      center = m.center,\r\n      rotate = m.rotate;\r\n\r\n  m.center = function(_) {\r\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\r\n  };\r\n\r\n  m.rotate = function(_) {\r\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\r\n  };\r\n\r\n  return rotate([0, 0, 90])\r\n      .scale(159.155);\r\n}\r\n", "function defaultSeparation(a, b) {\r\n  return a.parent === b.parent ? 1 : 2;\r\n}\r\n\r\nfunction meanX(children) {\r\n  return children.reduce(meanXReduce, 0) / children.length;\r\n}\r\n\r\nfunction meanXReduce(x, c) {\r\n  return x + c.x;\r\n}\r\n\r\nfunction maxY(children) {\r\n  return 1 + children.reduce(maxYReduce, 0);\r\n}\r\n\r\nfunction maxYReduce(y, c) {\r\n  return Math.max(y, c.y);\r\n}\r\n\r\nfunction leafLeft(node) {\r\n  var children;\r\n  while (children = node.children) node = children[0];\r\n  return node;\r\n}\r\n\r\nfunction leafRight(node) {\r\n  var children;\r\n  while (children = node.children) node = children[children.length - 1];\r\n  return node;\r\n}\r\n\r\nexport default function() {\r\n  var separation = defaultSeparation,\r\n      dx = 1,\r\n      dy = 1,\r\n      nodeSize = false;\r\n\r\n  function cluster(root) {\r\n    var previousNode,\r\n        x = 0;\r\n\r\n    // First walk, computing the initial x & y values.\r\n    root.eachAfter(function(node) {\r\n      var children = node.children;\r\n      if (children) {\r\n        node.x = meanX(children);\r\n        node.y = maxY(children);\r\n      } else {\r\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\r\n        node.y = 0;\r\n        previousNode = node;\r\n      }\r\n    });\r\n\r\n    var left = leafLeft(root),\r\n        right = leafRight(root),\r\n        x0 = left.x - separation(left, right) / 2,\r\n        x1 = right.x + separation(right, left) / 2;\r\n\r\n    // Second walk, normalizing x & y to the desired size.\r\n    return root.eachAfter(nodeSize ? function(node) {\r\n      node.x = (node.x - root.x) * dx;\r\n      node.y = (root.y - node.y) * dy;\r\n    } : function(node) {\r\n      node.x = (node.x - x0) / (x1 - x0) * dx;\r\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\r\n    });\r\n  }\r\n\r\n  cluster.separation = function(x) {\r\n    return arguments.length ? (separation = x, cluster) : separation;\r\n  };\r\n\r\n  cluster.size = function(x) {\r\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\r\n  };\r\n\r\n  cluster.nodeSize = function(x) {\r\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\r\n  };\r\n\r\n  return cluster;\r\n}\r\n", "function count(node) {\r\n  var sum = 0,\r\n      children = node.children,\r\n      i = children && children.length;\r\n  if (!i) sum = 1;\r\n  else while (--i >= 0) sum += children[i].value;\r\n  node.value = sum;\r\n}\r\n\r\nexport default function() {\r\n  return this.eachAfter(count);\r\n}\r\n", "export default function(callback, that) {\r\n  let index = -1;\r\n  for (const node of this) {\r\n    callback.call(that, node, ++index, this);\r\n  }\r\n  return this;\r\n}\r\n", "export default function(callback, that) {\r\n  var node = this, nodes = [node], children, i, index = -1;\r\n  while (node = nodes.pop()) {\r\n    callback.call(that, node, ++index, this);\r\n    if (children = node.children) {\r\n      for (i = children.length - 1; i >= 0; --i) {\r\n        nodes.push(children[i]);\r\n      }\r\n    }\r\n  }\r\n  return this;\r\n}\r\n", "export default function(callback, that) {\r\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\r\n  while (node = nodes.pop()) {\r\n    next.push(node);\r\n    if (children = node.children) {\r\n      for (i = 0, n = children.length; i < n; ++i) {\r\n        nodes.push(children[i]);\r\n      }\r\n    }\r\n  }\r\n  while (node = next.pop()) {\r\n    callback.call(that, node, ++index, this);\r\n  }\r\n  return this;\r\n}\r\n", "export default function(callback, that) {\r\n  let index = -1;\r\n  for (const node of this) {\r\n    if (callback.call(that, node, ++index, this)) {\r\n      return node;\r\n    }\r\n  }\r\n}\r\n", "export default function(value) {\r\n  return this.eachAfter(function(node) {\r\n    var sum = +value(node.data) || 0,\r\n        children = node.children,\r\n        i = children && children.length;\r\n    while (--i >= 0) sum += children[i].value;\r\n    node.value = sum;\r\n  });\r\n}\r\n", "export default function(compare) {\r\n  return this.eachBefore(function(node) {\r\n    if (node.children) {\r\n      node.children.sort(compare);\r\n    }\r\n  });\r\n}\r\n", "export default function(end) {\r\n  var start = this,\r\n      ancestor = leastCommonAncestor(start, end),\r\n      nodes = [start];\r\n  while (start !== ancestor) {\r\n    start = start.parent;\r\n    nodes.push(start);\r\n  }\r\n  var k = nodes.length;\r\n  while (end !== ancestor) {\r\n    nodes.splice(k, 0, end);\r\n    end = end.parent;\r\n  }\r\n  return nodes;\r\n}\r\n\r\nfunction leastCommonAncestor(a, b) {\r\n  if (a === b) return a;\r\n  var aNodes = a.ancestors(),\r\n      bNodes = b.ancestors(),\r\n      c = null;\r\n  a = aNodes.pop();\r\n  b = bNodes.pop();\r\n  while (a === b) {\r\n    c = a;\r\n    a = aNodes.pop();\r\n    b = bNodes.pop();\r\n  }\r\n  return c;\r\n}\r\n", "export default function() {\r\n  var node = this, nodes = [node];\r\n  while (node = node.parent) {\r\n    nodes.push(node);\r\n  }\r\n  return nodes;\r\n}\r\n", "export default function() {\r\n  return Array.from(this);\r\n}\r\n", "export default function() {\r\n  var leaves = [];\r\n  this.eachBefore(function(node) {\r\n    if (!node.children) {\r\n      leaves.push(node);\r\n    }\r\n  });\r\n  return leaves;\r\n}\r\n", "export default function() {\r\n  var root = this, links = [];\r\n  root.each(function(node) {\r\n    if (node !== root) { // Don’t include the root’s parent, if any.\r\n      links.push({source: node.parent, target: node});\r\n    }\r\n  });\r\n  return links;\r\n}\r\n", "export default function*() {\r\n  var node = this, current, next = [node], children, i, n;\r\n  do {\r\n    current = next.reverse(), next = [];\r\n    while (node = current.pop()) {\r\n      yield node;\r\n      if (children = node.children) {\r\n        for (i = 0, n = children.length; i < n; ++i) {\r\n          next.push(children[i]);\r\n        }\r\n      }\r\n    }\r\n  } while (next.length);\r\n}\r\n", "import node_count from \"./count.js\";\r\nimport node_each from \"./each.js\";\r\nimport node_eachBefore from \"./eachBefore.js\";\r\nimport node_eachAfter from \"./eachAfter.js\";\r\nimport node_find from \"./find.js\";\r\nimport node_sum from \"./sum.js\";\r\nimport node_sort from \"./sort.js\";\r\nimport node_path from \"./path.js\";\r\nimport node_ancestors from \"./ancestors.js\";\r\nimport node_descendants from \"./descendants.js\";\r\nimport node_leaves from \"./leaves.js\";\r\nimport node_links from \"./links.js\";\r\nimport node_iterator from \"./iterator.js\";\r\n\r\nexport default function hierarchy(data, children) {\r\n  if (data instanceof Map) {\r\n    data = [undefined, data];\r\n    if (children === undefined) children = mapChildren;\r\n  } else if (children === undefined) {\r\n    children = objectChildren;\r\n  }\r\n\r\n  var root = new Node(data),\r\n      node,\r\n      nodes = [root],\r\n      child,\r\n      childs,\r\n      i,\r\n      n;\r\n\r\n  while (node = nodes.pop()) {\r\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\r\n      node.children = childs;\r\n      for (i = n - 1; i >= 0; --i) {\r\n        nodes.push(child = childs[i] = new Node(childs[i]));\r\n        child.parent = node;\r\n        child.depth = node.depth + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  return root.eachBefore(computeHeight);\r\n}\r\n\r\nfunction node_copy() {\r\n  return hierarchy(this).eachBefore(copyData);\r\n}\r\n\r\nfunction objectChildren(d) {\r\n  return d.children;\r\n}\r\n\r\nfunction mapChildren(d) {\r\n  return Array.isArray(d) ? d[1] : null;\r\n}\r\n\r\nfunction copyData(node) {\r\n  if (node.data.value !== undefined) node.value = node.data.value;\r\n  node.data = node.data.data;\r\n}\r\n\r\nexport function computeHeight(node) {\r\n  var height = 0;\r\n  do node.height = height;\r\n  while ((node = node.parent) && (node.height < ++height));\r\n}\r\n\r\nexport function Node(data) {\r\n  this.data = data;\r\n  this.depth =\r\n  this.height = 0;\r\n  this.parent = null;\r\n}\r\n\r\nNode.prototype = hierarchy.prototype = {\r\n  constructor: Node,\r\n  count: node_count,\r\n  each: node_each,\r\n  eachAfter: node_eachAfter,\r\n  eachBefore: node_eachBefore,\r\n  find: node_find,\r\n  sum: node_sum,\r\n  sort: node_sort,\r\n  path: node_path,\r\n  ancestors: node_ancestors,\r\n  descendants: node_descendants,\r\n  leaves: node_leaves,\r\n  links: node_links,\r\n  copy: node_copy,\r\n  [Symbol.iterator]: node_iterator\r\n};\r\n", "export function optional(f) {\r\n  return f == null ? null : required(f);\r\n}\r\n\r\nexport function required(f) {\r\n  if (typeof f !== \"function\") throw new Error;\r\n  return f;\r\n}\r\n", "export function constantZero() {\r\n  return 0;\r\n}\r\n\r\nexport default function(x) {\r\n  return function() {\r\n    return x;\r\n  };\r\n}\r\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\r\nconst a = 1664525;\r\nconst c = 1013904223;\r\nconst m = 4294967296; // 2^32\r\n\r\nexport default function() {\r\n  let s = 1;\r\n  return () => (s = (a * s + c) % m) / m;\r\n}\r\n", "export default function(x) {\r\n  return typeof x === \"object\" && \"length\" in x\r\n    ? x // Array, TypedArray, NodeList, array-like\r\n    : Array.from(x); // Map, Set, iterable, string, or anything else\r\n}\r\n\r\nexport function shuffle(array, random) {\r\n  let m = array.length,\r\n      t,\r\n      i;\r\n\r\n  while (m) {\r\n    i = random() * m-- | 0;\r\n    t = array[m];\r\n    array[m] = array[i];\r\n    array[i] = t;\r\n  }\r\n\r\n  return array;\r\n}\r\n", "import {shuffle} from \"../array.js\";\r\nimport lcg from \"../lcg.js\";\r\n\r\nexport default function(circles) {\r\n  return packEncloseRandom(circles, lcg());\r\n}\r\n\r\nexport function packEncloseRandom(circles, random) {\r\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\r\n\r\n  while (i < n) {\r\n    p = circles[i];\r\n    if (e && enclosesWeak(e, p)) ++i;\r\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\r\n  }\r\n\r\n  return e;\r\n}\r\n\r\nfunction extendBasis(B, p) {\r\n  var i, j;\r\n\r\n  if (enclosesWeakAll(p, B)) return [p];\r\n\r\n  // If we get here then B must have at least one element.\r\n  for (i = 0; i < B.length; ++i) {\r\n    if (enclosesNot(p, B[i])\r\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\r\n      return [B[i], p];\r\n    }\r\n  }\r\n\r\n  // If we get here then B must have at least two elements.\r\n  for (i = 0; i < B.length - 1; ++i) {\r\n    for (j = i + 1; j < B.length; ++j) {\r\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\r\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\r\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\r\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\r\n        return [B[i], B[j], p];\r\n      }\r\n    }\r\n  }\r\n\r\n  // If we get here then something is very wrong.\r\n  throw new Error;\r\n}\r\n\r\nfunction enclosesNot(a, b) {\r\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\r\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\r\n}\r\n\r\nfunction enclosesWeak(a, b) {\r\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\r\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\r\n}\r\n\r\nfunction enclosesWeakAll(a, B) {\r\n  for (var i = 0; i < B.length; ++i) {\r\n    if (!enclosesWeak(a, B[i])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction encloseBasis(B) {\r\n  switch (B.length) {\r\n    case 1: return encloseBasis1(B[0]);\r\n    case 2: return encloseBasis2(B[0], B[1]);\r\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\r\n  }\r\n}\r\n\r\nfunction encloseBasis1(a) {\r\n  return {\r\n    x: a.x,\r\n    y: a.y,\r\n    r: a.r\r\n  };\r\n}\r\n\r\nfunction encloseBasis2(a, b) {\r\n  var x1 = a.x, y1 = a.y, r1 = a.r,\r\n      x2 = b.x, y2 = b.y, r2 = b.r,\r\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\r\n      l = Math.sqrt(x21 * x21 + y21 * y21);\r\n  return {\r\n    x: (x1 + x2 + x21 / l * r21) / 2,\r\n    y: (y1 + y2 + y21 / l * r21) / 2,\r\n    r: (l + r1 + r2) / 2\r\n  };\r\n}\r\n\r\nfunction encloseBasis3(a, b, c) {\r\n  var x1 = a.x, y1 = a.y, r1 = a.r,\r\n      x2 = b.x, y2 = b.y, r2 = b.r,\r\n      x3 = c.x, y3 = c.y, r3 = c.r,\r\n      a2 = x1 - x2,\r\n      a3 = x1 - x3,\r\n      b2 = y1 - y2,\r\n      b3 = y1 - y3,\r\n      c2 = r2 - r1,\r\n      c3 = r3 - r1,\r\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\r\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\r\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\r\n      ab = a3 * b2 - a2 * b3,\r\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\r\n      xb = (b3 * c2 - b2 * c3) / ab,\r\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\r\n      yb = (a2 * c3 - a3 * c2) / ab,\r\n      A = xb * xb + yb * yb - 1,\r\n      B = 2 * (r1 + xa * xb + ya * yb),\r\n      C = xa * xa + ya * ya - r1 * r1,\r\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\r\n  return {\r\n    x: x1 + xa + xb * r,\r\n    y: y1 + ya + yb * r,\r\n    r: r\r\n  };\r\n}\r\n", "import array from \"../array.js\";\r\nimport lcg from \"../lcg.js\";\r\nimport {packEncloseRandom} from \"./enclose.js\";\r\n\r\nfunction place(b, a, c) {\r\n  var dx = b.x - a.x, x, a2,\r\n      dy = b.y - a.y, y, b2,\r\n      d2 = dx * dx + dy * dy;\r\n  if (d2) {\r\n    a2 = a.r + c.r, a2 *= a2;\r\n    b2 = b.r + c.r, b2 *= b2;\r\n    if (a2 > b2) {\r\n      x = (d2 + b2 - a2) / (2 * d2);\r\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\r\n      c.x = b.x - x * dx - y * dy;\r\n      c.y = b.y - x * dy + y * dx;\r\n    } else {\r\n      x = (d2 + a2 - b2) / (2 * d2);\r\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\r\n      c.x = a.x + x * dx - y * dy;\r\n      c.y = a.y + x * dy + y * dx;\r\n    }\r\n  } else {\r\n    c.x = a.x + c.r;\r\n    c.y = a.y;\r\n  }\r\n}\r\n\r\nfunction intersects(a, b) {\r\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\r\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\r\n}\r\n\r\nfunction score(node) {\r\n  var a = node._,\r\n      b = node.next._,\r\n      ab = a.r + b.r,\r\n      dx = (a.x * b.r + b.x * a.r) / ab,\r\n      dy = (a.y * b.r + b.y * a.r) / ab;\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\nfunction Node(circle) {\r\n  this._ = circle;\r\n  this.next = null;\r\n  this.previous = null;\r\n}\r\n\r\nexport function packSiblingsRandom(circles, random) {\r\n  if (!(n = (circles = array(circles)).length)) return 0;\r\n\r\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\r\n\r\n  // Place the first circle.\r\n  a = circles[0], a.x = 0, a.y = 0;\r\n  if (!(n > 1)) return a.r;\r\n\r\n  // Place the second circle.\r\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\r\n  if (!(n > 2)) return a.r + b.r;\r\n\r\n  // Place the third circle.\r\n  place(b, a, c = circles[2]);\r\n\r\n  // Initialize the front-chain using the first three circles a, b and c.\r\n  a = new Node(a), b = new Node(b), c = new Node(c);\r\n  a.next = c.previous = b;\r\n  b.next = a.previous = c;\r\n  c.next = b.previous = a;\r\n\r\n  // Attempt to place each remaining circle…\r\n  pack: for (i = 3; i < n; ++i) {\r\n    place(a._, b._, c = circles[i]), c = new Node(c);\r\n\r\n    // Find the closest intersecting circle on the front-chain, if any.\r\n    // “Closeness” is determined by linear distance along the front-chain.\r\n    // “Ahead” or “behind” is likewise determined by linear distance.\r\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\r\n    do {\r\n      if (sj <= sk) {\r\n        if (intersects(j._, c._)) {\r\n          b = j, a.next = b, b.previous = a, --i;\r\n          continue pack;\r\n        }\r\n        sj += j._.r, j = j.next;\r\n      } else {\r\n        if (intersects(k._, c._)) {\r\n          a = k, a.next = b, b.previous = a, --i;\r\n          continue pack;\r\n        }\r\n        sk += k._.r, k = k.previous;\r\n      }\r\n    } while (j !== k.next);\r\n\r\n    // Success! Insert the new circle c between a and b.\r\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\r\n\r\n    // Compute the new closest circle pair to the centroid.\r\n    aa = score(a);\r\n    while ((c = c.next) !== b) {\r\n      if ((ca = score(c)) < aa) {\r\n        a = c, aa = ca;\r\n      }\r\n    }\r\n    b = a.next;\r\n  }\r\n\r\n  // Compute the enclosing circle of the front chain.\r\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\r\n\r\n  // Translate the circles to put the enclosing circle around the origin.\r\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\r\n\r\n  return c.r;\r\n}\r\n\r\nexport default function(circles) {\r\n  packSiblingsRandom(circles, lcg());\r\n  return circles;\r\n}\r\n", "import {optional} from \"../accessors.js\";\r\nimport constant, {constantZero} from \"../constant.js\";\r\nimport lcg from \"../lcg.js\";\r\nimport {packSiblingsRandom} from \"./siblings.js\";\r\n\r\nfunction defaultRadius(d) {\r\n  return Math.sqrt(d.value);\r\n}\r\n\r\nexport default function() {\r\n  var radius = null,\r\n      dx = 1,\r\n      dy = 1,\r\n      padding = constantZero;\r\n\r\n  function pack(root) {\r\n    const random = lcg();\r\n    root.x = dx / 2, root.y = dy / 2;\r\n    if (radius) {\r\n      root.eachBefore(radiusLeaf(radius))\r\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\r\n          .eachBefore(translateChild(1));\r\n    } else {\r\n      root.eachBefore(radiusLeaf(defaultRadius))\r\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\r\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\r\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\r\n    }\r\n    return root;\r\n  }\r\n\r\n  pack.radius = function(x) {\r\n    return arguments.length ? (radius = optional(x), pack) : radius;\r\n  };\r\n\r\n  pack.size = function(x) {\r\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\r\n  };\r\n\r\n  pack.padding = function(x) {\r\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\r\n  };\r\n\r\n  return pack;\r\n}\r\n\r\nfunction radiusLeaf(radius) {\r\n  return function(node) {\r\n    if (!node.children) {\r\n      node.r = Math.max(0, +radius(node) || 0);\r\n    }\r\n  };\r\n}\r\n\r\nfunction packChildrenRandom(padding, k, random) {\r\n  return function(node) {\r\n    if (children = node.children) {\r\n      var children,\r\n          i,\r\n          n = children.length,\r\n          r = padding(node) * k || 0,\r\n          e;\r\n\r\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\r\n      e = packSiblingsRandom(children, random);\r\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\r\n      node.r = e + r;\r\n    }\r\n  };\r\n}\r\n\r\nfunction translateChild(k) {\r\n  return function(node) {\r\n    var parent = node.parent;\r\n    node.r *= k;\r\n    if (parent) {\r\n      node.x = parent.x + k * node.x;\r\n      node.y = parent.y + k * node.y;\r\n    }\r\n  };\r\n}\r\n", "export default function(node) {\r\n  node.x0 = Math.round(node.x0);\r\n  node.y0 = Math.round(node.y0);\r\n  node.x1 = Math.round(node.x1);\r\n  node.y1 = Math.round(node.y1);\r\n}\r\n", "export default function(parent, x0, y0, x1, y1) {\r\n  var nodes = parent.children,\r\n      node,\r\n      i = -1,\r\n      n = nodes.length,\r\n      k = parent.value && (x1 - x0) / parent.value;\r\n\r\n  while (++i < n) {\r\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\r\n    node.x0 = x0, node.x1 = x0 += node.value * k;\r\n  }\r\n}\r\n", "import roundNode from \"./treemap/round.js\";\r\nimport treemapDice from \"./treemap/dice.js\";\r\n\r\nexport default function() {\r\n  var dx = 1,\r\n      dy = 1,\r\n      padding = 0,\r\n      round = false;\r\n\r\n  function partition(root) {\r\n    var n = root.height + 1;\r\n    root.x0 =\r\n    root.y0 = padding;\r\n    root.x1 = dx;\r\n    root.y1 = dy / n;\r\n    root.eachBefore(positionNode(dy, n));\r\n    if (round) root.eachBefore(roundNode);\r\n    return root;\r\n  }\r\n\r\n  function positionNode(dy, n) {\r\n    return function(node) {\r\n      if (node.children) {\r\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\r\n      }\r\n      var x0 = node.x0,\r\n          y0 = node.y0,\r\n          x1 = node.x1 - padding,\r\n          y1 = node.y1 - padding;\r\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\r\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\r\n      node.x0 = x0;\r\n      node.y0 = y0;\r\n      node.x1 = x1;\r\n      node.y1 = y1;\r\n    };\r\n  }\r\n\r\n  partition.round = function(x) {\r\n    return arguments.length ? (round = !!x, partition) : round;\r\n  };\r\n\r\n  partition.size = function(x) {\r\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\r\n  };\r\n\r\n  partition.padding = function(x) {\r\n    return arguments.length ? (padding = +x, partition) : padding;\r\n  };\r\n\r\n  return partition;\r\n}\r\n", "import {optional} from \"./accessors.js\";\r\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\r\n\r\nvar preroot = {depth: -1},\r\n    ambiguous = {},\r\n    imputed = {};\r\n\r\nfunction defaultId(d) {\r\n  return d.id;\r\n}\r\n\r\nfunction defaultParentId(d) {\r\n  return d.parentId;\r\n}\r\n\r\nexport default function() {\r\n  var id = defaultId,\r\n      parentId = defaultParentId,\r\n      path;\r\n\r\n  function stratify(data) {\r\n    var nodes = Array.from(data),\r\n        currentId = id,\r\n        currentParentId = parentId,\r\n        n,\r\n        d,\r\n        i,\r\n        root,\r\n        parent,\r\n        node,\r\n        nodeId,\r\n        nodeKey,\r\n        nodeByKey = new Map;\r\n\r\n    if (path != null) {\r\n      const I = nodes.map((d, i) => normalize(path(d, i, data)));\r\n      const P = I.map(parentof);\r\n      const S = new Set(I).add(\"\");\r\n      for (const i of P) {\r\n        if (!S.has(i)) {\r\n          S.add(i);\r\n          I.push(i);\r\n          P.push(parentof(i));\r\n          nodes.push(imputed);\r\n        }\r\n      }\r\n      currentId = (_, i) => I[i];\r\n      currentParentId = (_, i) => P[i];\r\n    }\r\n\r\n    for (i = 0, n = nodes.length; i < n; ++i) {\r\n      d = nodes[i], node = nodes[i] = new Node(d);\r\n      if ((nodeId = currentId(d, i, data)) != null && (nodeId += \"\")) {\r\n        nodeKey = node.id = nodeId;\r\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\r\n      }\r\n      if ((nodeId = currentParentId(d, i, data)) != null && (nodeId += \"\")) {\r\n        node.parent = nodeId;\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      node = nodes[i];\r\n      if (nodeId = node.parent) {\r\n        parent = nodeByKey.get(nodeId);\r\n        if (!parent) throw new Error(\"missing: \" + nodeId);\r\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\r\n        if (parent.children) parent.children.push(node);\r\n        else parent.children = [node];\r\n        node.parent = parent;\r\n      } else {\r\n        if (root) throw new Error(\"multiple roots\");\r\n        root = node;\r\n      }\r\n    }\r\n\r\n    if (!root) throw new Error(\"no root\");\r\n\r\n    // When imputing internal nodes, only introduce roots if needed.\r\n    // Then replace the imputed marker data with null.\r\n    if (path != null) {\r\n      while (root.data === imputed && root.children.length === 1) {\r\n        root = root.children[0], --n;\r\n      }\r\n      for (let i = nodes.length - 1; i >= 0; --i) {\r\n        node = nodes[i];\r\n        if (node.data !== imputed) break;\r\n        node.data = null;\r\n      }\r\n    }\r\n\r\n    root.parent = preroot;\r\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\r\n    root.parent = null;\r\n    if (n > 0) throw new Error(\"cycle\");\r\n\r\n    return root;\r\n  }\r\n\r\n  stratify.id = function(x) {\r\n    return arguments.length ? (id = optional(x), stratify) : id;\r\n  };\r\n\r\n  stratify.parentId = function(x) {\r\n    return arguments.length ? (parentId = optional(x), stratify) : parentId;\r\n  };\r\n\r\n  stratify.path = function(x) {\r\n    return arguments.length ? (path = optional(x), stratify) : path;\r\n  };\r\n\r\n  return stratify;\r\n}\r\n\r\n// To normalize a path, we coerce to a string, strip the trailing slash if any\r\n// (as long as the trailing slash is not immediately preceded by another slash),\r\n// and add leading slash if missing.\r\nfunction normalize(path) {\r\n  path = `${path}`;\r\n  let i = path.length;\r\n  if (slash(path, i - 1) && !slash(path, i - 2)) path = path.slice(0, -1);\r\n  return path[0] === \"/\" ? path : `/${path}`;\r\n}\r\n\r\n// Walk backwards to find the first slash that is not the leading slash, e.g.:\r\n// \"/foo/bar\" ⇥ \"/foo\", \"/foo\" ⇥ \"/\", \"/\" ↦ \"\". (The root is special-cased\r\n// because the id of the root must be a truthy value.)\r\nfunction parentof(path) {\r\n  let i = path.length;\r\n  if (i < 2) return \"\";\r\n  while (--i > 1) if (slash(path, i)) break;\r\n  return path.slice(0, i);\r\n}\r\n\r\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\r\n// count the number of preceding backslashes escaping the forward slash: an odd\r\n// number indicates an escaped forward slash.\r\nfunction slash(path, i) {\r\n  if (path[i] === \"/\") {\r\n    let k = 0;\r\n    while (i > 0 && path[--i] === \"\\\\\") ++k;\r\n    if ((k & 1) === 0) return true;\r\n  }\r\n  return false;\r\n}\r\n", "import {Node} from \"./hierarchy/index.js\";\r\n\r\nfunction defaultSeparation(a, b) {\r\n  return a.parent === b.parent ? 1 : 2;\r\n}\r\n\r\n// function radialSeparation(a, b) {\r\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\r\n// }\r\n\r\n// This function is used to traverse the left contour of a subtree (or\r\n// subforest). It returns the successor of v on this contour. This successor is\r\n// either given by the leftmost child of v or by the thread of v. The function\r\n// returns null if and only if v is on the highest level of its subtree.\r\nfunction nextLeft(v) {\r\n  var children = v.children;\r\n  return children ? children[0] : v.t;\r\n}\r\n\r\n// This function works analogously to nextLeft.\r\nfunction nextRight(v) {\r\n  var children = v.children;\r\n  return children ? children[children.length - 1] : v.t;\r\n}\r\n\r\n// Shifts the current subtree rooted at w+. This is done by increasing\r\n// prelim(w+) and mod(w+) by shift.\r\nfunction moveSubtree(wm, wp, shift) {\r\n  var change = shift / (wp.i - wm.i);\r\n  wp.c -= change;\r\n  wp.s += shift;\r\n  wm.c += change;\r\n  wp.z += shift;\r\n  wp.m += shift;\r\n}\r\n\r\n// All other shifts, applied to the smaller subtrees between w- and w+, are\r\n// performed by this function. To prepare the shifts, we have to adjust\r\n// change(w+), shift(w+), and change(w-).\r\nfunction executeShifts(v) {\r\n  var shift = 0,\r\n      change = 0,\r\n      children = v.children,\r\n      i = children.length,\r\n      w;\r\n  while (--i >= 0) {\r\n    w = children[i];\r\n    w.z += shift;\r\n    w.m += shift;\r\n    shift += w.s + (change += w.c);\r\n  }\r\n}\r\n\r\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\r\n// returns the specified (default) ancestor.\r\nfunction nextAncestor(vim, v, ancestor) {\r\n  return vim.a.parent === v.parent ? vim.a : ancestor;\r\n}\r\n\r\nfunction TreeNode(node, i) {\r\n  this._ = node;\r\n  this.parent = null;\r\n  this.children = null;\r\n  this.A = null; // default ancestor\r\n  this.a = this; // ancestor\r\n  this.z = 0; // prelim\r\n  this.m = 0; // mod\r\n  this.c = 0; // change\r\n  this.s = 0; // shift\r\n  this.t = null; // thread\r\n  this.i = i; // number\r\n}\r\n\r\nTreeNode.prototype = Object.create(Node.prototype);\r\n\r\nfunction treeRoot(root) {\r\n  var tree = new TreeNode(root, 0),\r\n      node,\r\n      nodes = [tree],\r\n      child,\r\n      children,\r\n      i,\r\n      n;\r\n\r\n  while (node = nodes.pop()) {\r\n    if (children = node._.children) {\r\n      node.children = new Array(n = children.length);\r\n      for (i = n - 1; i >= 0; --i) {\r\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\r\n        child.parent = node;\r\n      }\r\n    }\r\n  }\r\n\r\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\r\n  return tree;\r\n}\r\n\r\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\r\nexport default function() {\r\n  var separation = defaultSeparation,\r\n      dx = 1,\r\n      dy = 1,\r\n      nodeSize = null;\r\n\r\n  function tree(root) {\r\n    var t = treeRoot(root);\r\n\r\n    // Compute the layout using Buchheim et al.’s algorithm.\r\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\r\n    t.eachBefore(secondWalk);\r\n\r\n    // If a fixed node size is specified, scale x and y.\r\n    if (nodeSize) root.eachBefore(sizeNode);\r\n\r\n    // If a fixed tree size is specified, scale x and y based on the extent.\r\n    // Compute the left-most, right-most, and depth-most nodes for extents.\r\n    else {\r\n      var left = root,\r\n          right = root,\r\n          bottom = root;\r\n      root.eachBefore(function(node) {\r\n        if (node.x < left.x) left = node;\r\n        if (node.x > right.x) right = node;\r\n        if (node.depth > bottom.depth) bottom = node;\r\n      });\r\n      var s = left === right ? 1 : separation(left, right) / 2,\r\n          tx = s - left.x,\r\n          kx = dx / (right.x + s + tx),\r\n          ky = dy / (bottom.depth || 1);\r\n      root.eachBefore(function(node) {\r\n        node.x = (node.x + tx) * kx;\r\n        node.y = node.depth * ky;\r\n      });\r\n    }\r\n\r\n    return root;\r\n  }\r\n\r\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\r\n  // applied recursively to the children of v, as well as the function\r\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\r\n  // node v is placed to the midpoint of its outermost children.\r\n  function firstWalk(v) {\r\n    var children = v.children,\r\n        siblings = v.parent.children,\r\n        w = v.i ? siblings[v.i - 1] : null;\r\n    if (children) {\r\n      executeShifts(v);\r\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\r\n      if (w) {\r\n        v.z = w.z + separation(v._, w._);\r\n        v.m = v.z - midpoint;\r\n      } else {\r\n        v.z = midpoint;\r\n      }\r\n    } else if (w) {\r\n      v.z = w.z + separation(v._, w._);\r\n    }\r\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\r\n  }\r\n\r\n  // Computes all real x-coordinates by summing up the modifiers recursively.\r\n  function secondWalk(v) {\r\n    v._.x = v.z + v.parent.m;\r\n    v.m += v.parent.m;\r\n  }\r\n\r\n  // The core of the algorithm. Here, a new subtree is combined with the\r\n  // previous subtrees. Threads are used to traverse the inside and outside\r\n  // contours of the left and right subtree up to the highest common level. The\r\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\r\n  // superscript o means outside and i means inside, the subscript - means left\r\n  // subtree and + means right subtree. For summing up the modifiers along the\r\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\r\n  // nodes of the inside contours conflict, we compute the left one of the\r\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\r\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\r\n  // Finally, we add a new thread (if necessary).\r\n  function apportion(v, w, ancestor) {\r\n    if (w) {\r\n      var vip = v,\r\n          vop = v,\r\n          vim = w,\r\n          vom = vip.parent.children[0],\r\n          sip = vip.m,\r\n          sop = vop.m,\r\n          sim = vim.m,\r\n          som = vom.m,\r\n          shift;\r\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\r\n        vom = nextLeft(vom);\r\n        vop = nextRight(vop);\r\n        vop.a = v;\r\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\r\n        if (shift > 0) {\r\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\r\n          sip += shift;\r\n          sop += shift;\r\n        }\r\n        sim += vim.m;\r\n        sip += vip.m;\r\n        som += vom.m;\r\n        sop += vop.m;\r\n      }\r\n      if (vim && !nextRight(vop)) {\r\n        vop.t = vim;\r\n        vop.m += sim - sop;\r\n      }\r\n      if (vip && !nextLeft(vom)) {\r\n        vom.t = vip;\r\n        vom.m += sip - som;\r\n        ancestor = v;\r\n      }\r\n    }\r\n    return ancestor;\r\n  }\r\n\r\n  function sizeNode(node) {\r\n    node.x *= dx;\r\n    node.y = node.depth * dy;\r\n  }\r\n\r\n  tree.separation = function(x) {\r\n    return arguments.length ? (separation = x, tree) : separation;\r\n  };\r\n\r\n  tree.size = function(x) {\r\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\r\n  };\r\n\r\n  tree.nodeSize = function(x) {\r\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\r\n  };\r\n\r\n  return tree;\r\n}\r\n", "export default function(parent, x0, y0, x1, y1) {\r\n  var nodes = parent.children,\r\n      node,\r\n      i = -1,\r\n      n = nodes.length,\r\n      k = parent.value && (y1 - y0) / parent.value;\r\n\r\n  while (++i < n) {\r\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\r\n    node.y0 = y0, node.y1 = y0 += node.value * k;\r\n  }\r\n}\r\n", "import treemapDice from \"./dice.js\";\r\nimport treemapSlice from \"./slice.js\";\r\n\r\nexport var phi = (1 + Math.sqrt(5)) / 2;\r\n\r\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\r\n  var rows = [],\r\n      nodes = parent.children,\r\n      row,\r\n      nodeValue,\r\n      i0 = 0,\r\n      i1 = 0,\r\n      n = nodes.length,\r\n      dx, dy,\r\n      value = parent.value,\r\n      sumValue,\r\n      minValue,\r\n      maxValue,\r\n      newRatio,\r\n      minRatio,\r\n      alpha,\r\n      beta;\r\n\r\n  while (i0 < n) {\r\n    dx = x1 - x0, dy = y1 - y0;\r\n\r\n    // Find the next non-empty node.\r\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\r\n    minValue = maxValue = sumValue;\r\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\r\n    beta = sumValue * sumValue * alpha;\r\n    minRatio = Math.max(maxValue / beta, beta / minValue);\r\n\r\n    // Keep adding nodes while the aspect ratio maintains or improves.\r\n    for (; i1 < n; ++i1) {\r\n      sumValue += nodeValue = nodes[i1].value;\r\n      if (nodeValue < minValue) minValue = nodeValue;\r\n      if (nodeValue > maxValue) maxValue = nodeValue;\r\n      beta = sumValue * sumValue * alpha;\r\n      newRatio = Math.max(maxValue / beta, beta / minValue);\r\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\r\n      minRatio = newRatio;\r\n    }\r\n\r\n    // Position and record the row orientation.\r\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\r\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\r\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\r\n    value -= sumValue, i0 = i1;\r\n  }\r\n\r\n  return rows;\r\n}\r\n\r\nexport default (function custom(ratio) {\r\n\r\n  function squarify(parent, x0, y0, x1, y1) {\r\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\r\n  }\r\n\r\n  squarify.ratio = function(x) {\r\n    return custom((x = +x) > 1 ? x : 1);\r\n  };\r\n\r\n  return squarify;\r\n})(phi);\r\n", "import roundNode from \"./round.js\";\r\nimport squarify from \"./squarify.js\";\r\nimport {required} from \"../accessors.js\";\r\nimport constant, {constantZero} from \"../constant.js\";\r\n\r\nexport default function() {\r\n  var tile = squarify,\r\n      round = false,\r\n      dx = 1,\r\n      dy = 1,\r\n      paddingStack = [0],\r\n      paddingInner = constantZero,\r\n      paddingTop = constantZero,\r\n      paddingRight = constantZero,\r\n      paddingBottom = constantZero,\r\n      paddingLeft = constantZero;\r\n\r\n  function treemap(root) {\r\n    root.x0 =\r\n    root.y0 = 0;\r\n    root.x1 = dx;\r\n    root.y1 = dy;\r\n    root.eachBefore(positionNode);\r\n    paddingStack = [0];\r\n    if (round) root.eachBefore(roundNode);\r\n    return root;\r\n  }\r\n\r\n  function positionNode(node) {\r\n    var p = paddingStack[node.depth],\r\n        x0 = node.x0 + p,\r\n        y0 = node.y0 + p,\r\n        x1 = node.x1 - p,\r\n        y1 = node.y1 - p;\r\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\r\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\r\n    node.x0 = x0;\r\n    node.y0 = y0;\r\n    node.x1 = x1;\r\n    node.y1 = y1;\r\n    if (node.children) {\r\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\r\n      x0 += paddingLeft(node) - p;\r\n      y0 += paddingTop(node) - p;\r\n      x1 -= paddingRight(node) - p;\r\n      y1 -= paddingBottom(node) - p;\r\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\r\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\r\n      tile(node, x0, y0, x1, y1);\r\n    }\r\n  }\r\n\r\n  treemap.round = function(x) {\r\n    return arguments.length ? (round = !!x, treemap) : round;\r\n  };\r\n\r\n  treemap.size = function(x) {\r\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\r\n  };\r\n\r\n  treemap.tile = function(x) {\r\n    return arguments.length ? (tile = required(x), treemap) : tile;\r\n  };\r\n\r\n  treemap.padding = function(x) {\r\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\r\n  };\r\n\r\n  treemap.paddingInner = function(x) {\r\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\r\n  };\r\n\r\n  treemap.paddingOuter = function(x) {\r\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\r\n  };\r\n\r\n  treemap.paddingTop = function(x) {\r\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\r\n  };\r\n\r\n  treemap.paddingRight = function(x) {\r\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\r\n  };\r\n\r\n  treemap.paddingBottom = function(x) {\r\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\r\n  };\r\n\r\n  treemap.paddingLeft = function(x) {\r\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\r\n  };\r\n\r\n  return treemap;\r\n}\r\n", "export default function(parent, x0, y0, x1, y1) {\r\n  var nodes = parent.children,\r\n      i, n = nodes.length,\r\n      sum, sums = new Array(n + 1);\r\n\r\n  for (sums[0] = sum = i = 0; i < n; ++i) {\r\n    sums[i + 1] = sum += nodes[i].value;\r\n  }\r\n\r\n  partition(0, n, parent.value, x0, y0, x1, y1);\r\n\r\n  function partition(i, j, value, x0, y0, x1, y1) {\r\n    if (i >= j - 1) {\r\n      var node = nodes[i];\r\n      node.x0 = x0, node.y0 = y0;\r\n      node.x1 = x1, node.y1 = y1;\r\n      return;\r\n    }\r\n\r\n    var valueOffset = sums[i],\r\n        valueTarget = (value / 2) + valueOffset,\r\n        k = i + 1,\r\n        hi = j - 1;\r\n\r\n    while (k < hi) {\r\n      var mid = k + hi >>> 1;\r\n      if (sums[mid] < valueTarget) k = mid + 1;\r\n      else hi = mid;\r\n    }\r\n\r\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\r\n\r\n    var valueLeft = sums[k] - valueOffset,\r\n        valueRight = value - valueLeft;\r\n\r\n    if ((x1 - x0) > (y1 - y0)) {\r\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\r\n      partition(i, k, valueLeft, x0, y0, xk, y1);\r\n      partition(k, j, valueRight, xk, y0, x1, y1);\r\n    } else {\r\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\r\n      partition(i, k, valueLeft, x0, y0, x1, yk);\r\n      partition(k, j, valueRight, x0, yk, x1, y1);\r\n    }\r\n  }\r\n}\r\n", "import dice from \"./dice.js\";\r\nimport slice from \"./slice.js\";\r\n\r\nexport default function(parent, x0, y0, x1, y1) {\r\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\r\n}\r\n", "import treemapDice from \"./dice.js\";\r\nimport treemapSlice from \"./slice.js\";\r\nimport {phi, squarifyRatio} from \"./squarify.js\";\r\n\r\nexport default (function custom(ratio) {\r\n\r\n  function resquarify(parent, x0, y0, x1, y1) {\r\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\r\n      var rows,\r\n          row,\r\n          nodes,\r\n          i,\r\n          j = -1,\r\n          n,\r\n          m = rows.length,\r\n          value = parent.value;\r\n\r\n      while (++j < m) {\r\n        row = rows[j], nodes = row.children;\r\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\r\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\r\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\r\n        value -= row.value;\r\n      }\r\n    } else {\r\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\r\n      rows.ratio = ratio;\r\n    }\r\n  }\r\n\r\n  resquarify.ratio = function(x) {\r\n    return custom((x = +x) > 1 ? x : 1);\r\n  };\r\n\r\n  return resquarify;\r\n})(phi);\r\n", "export default function(polygon) {\r\n  var i = -1,\r\n      n = polygon.length,\r\n      a,\r\n      b = polygon[n - 1],\r\n      area = 0;\r\n\r\n  while (++i < n) {\r\n    a = b;\r\n    b = polygon[i];\r\n    area += a[1] * b[0] - a[0] * b[1];\r\n  }\r\n\r\n  return area / 2;\r\n}\r\n", "export default function(polygon) {\r\n  var i = -1,\r\n      n = polygon.length,\r\n      x = 0,\r\n      y = 0,\r\n      a,\r\n      b = polygon[n - 1],\r\n      c,\r\n      k = 0;\r\n\r\n  while (++i < n) {\r\n    a = b;\r\n    b = polygon[i];\r\n    k += c = a[0] * b[1] - b[0] * a[1];\r\n    x += (a[0] + b[0]) * c;\r\n    y += (a[1] + b[1]) * c;\r\n  }\r\n\r\n  return k *= 3, [x / k, y / k];\r\n}\r\n", "// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\r\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\r\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\r\n// negative if clockwise, and zero if the points are collinear.\r\nexport default function(a, b, c) {\r\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\r\n}\r\n", "import cross from \"./cross.js\";\r\n\r\nfunction lexicographicOrder(a, b) {\r\n  return a[0] - b[0] || a[1] - b[1];\r\n}\r\n\r\n// Computes the upper convex hull per the monotone chain algorithm.\r\n// Assumes points.length >= 3, is sorted by x, unique in y.\r\n// Returns an array of indices into points in left-to-right order.\r\nfunction computeUpperHullIndexes(points) {\r\n  const n = points.length,\r\n      indexes = [0, 1];\r\n  let size = 2, i;\r\n\r\n  for (i = 2; i < n; ++i) {\r\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\r\n    indexes[size++] = i;\r\n  }\r\n\r\n  return indexes.slice(0, size); // remove popped points\r\n}\r\n\r\nexport default function(points) {\r\n  if ((n = points.length) < 3) return null;\r\n\r\n  var i,\r\n      n,\r\n      sortedPoints = new Array(n),\r\n      flippedPoints = new Array(n);\r\n\r\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\r\n  sortedPoints.sort(lexicographicOrder);\r\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\r\n\r\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\r\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\r\n\r\n  // Construct the hull polygon, removing possible duplicate endpoints.\r\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\r\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\r\n      hull = [];\r\n\r\n  // Add upper hull in right-to-l order.\r\n  // Then add lower hull in left-to-right order.\r\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\r\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\r\n\r\n  return hull;\r\n}\r\n", "export default function(polygon, point) {\r\n  var n = polygon.length,\r\n      p = polygon[n - 1],\r\n      x = point[0], y = point[1],\r\n      x0 = p[0], y0 = p[1],\r\n      x1, y1,\r\n      inside = false;\r\n\r\n  for (var i = 0; i < n; ++i) {\r\n    p = polygon[i], x1 = p[0], y1 = p[1];\r\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\r\n    x0 = x1, y0 = y1;\r\n  }\r\n\r\n  return inside;\r\n}\r\n", "export default function(polygon) {\r\n  var i = -1,\r\n      n = polygon.length,\r\n      b = polygon[n - 1],\r\n      xa,\r\n      ya,\r\n      xb = b[0],\r\n      yb = b[1],\r\n      perimeter = 0;\r\n\r\n  while (++i < n) {\r\n    xa = xb;\r\n    ya = yb;\r\n    b = polygon[i];\r\n    xb = b[0];\r\n    yb = b[1];\r\n    xa -= xb;\r\n    ya -= yb;\r\n    perimeter += Math.hypot(xa, ya);\r\n  }\r\n\r\n  return perimeter;\r\n}\r\n", "export default Math.random;\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomUniform(source) {\r\n  function randomUniform(min, max) {\r\n    min = min == null ? 0 : +min;\r\n    max = max == null ? 1 : +max;\r\n    if (arguments.length === 1) max = min, min = 0;\r\n    else max -= min;\r\n    return function() {\r\n      return source() * max + min;\r\n    };\r\n  }\r\n\r\n  randomUniform.source = sourceRandomUniform;\r\n\r\n  return randomUniform;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomInt(source) {\r\n  function randomInt(min, max) {\r\n    if (arguments.length < 2) max = min, min = 0;\r\n    min = Math.floor(min);\r\n    max = Math.floor(max) - min;\r\n    return function() {\r\n      return Math.floor(source() * max + min);\r\n    };\r\n  }\r\n\r\n  randomInt.source = sourceRandomInt;\r\n\r\n  return randomInt;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomNormal(source) {\r\n  function randomNormal(mu, sigma) {\r\n    var x, r;\r\n    mu = mu == null ? 0 : +mu;\r\n    sigma = sigma == null ? 1 : +sigma;\r\n    return function() {\r\n      var y;\r\n\r\n      // If available, use the second previously-generated uniform random.\r\n      if (x != null) y = x, x = null;\r\n\r\n      // Otherwise, generate a new x and y.\r\n      else do {\r\n        x = source() * 2 - 1;\r\n        y = source() * 2 - 1;\r\n        r = x * x + y * y;\r\n      } while (!r || r > 1);\r\n\r\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\r\n    };\r\n  }\r\n\r\n  randomNormal.source = sourceRandomNormal;\r\n\r\n  return randomNormal;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\nimport normal from \"./normal.js\";\r\n\r\nexport default (function sourceRandomLogNormal(source) {\r\n  var N = normal.source(source);\r\n\r\n  function randomLogNormal() {\r\n    var randomNormal = N.apply(this, arguments);\r\n    return function() {\r\n      return Math.exp(randomNormal());\r\n    };\r\n  }\r\n\r\n  randomLogNormal.source = sourceRandomLogNormal;\r\n\r\n  return randomLogNormal;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomIrwinHall(source) {\r\n  function randomIrwinHall(n) {\r\n    if ((n = +n) <= 0) return () => 0;\r\n    return function() {\r\n      for (var sum = 0, i = n; i > 1; --i) sum += source();\r\n      return sum + i * source();\r\n    };\r\n  }\r\n\r\n  randomIrwinHall.source = sourceRandomIrwinHall;\r\n\r\n  return randomIrwinHall;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\nimport irwinHall from \"./irwinHall.js\";\r\n\r\nexport default (function sourceRandomBates(source) {\r\n  var I = irwinHall.source(source);\r\n\r\n  function randomBates(n) {\r\n    // use limiting distribution at n === 0\r\n    if ((n = +n) === 0) return source;\r\n    var randomIrwinHall = I(n);\r\n    return function() {\r\n      return randomIrwinHall() / n;\r\n    };\r\n  }\r\n\r\n  randomBates.source = sourceRandomBates;\r\n\r\n  return randomBates;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomExponential(source) {\r\n  function randomExponential(lambda) {\r\n    return function() {\r\n      return -Math.log1p(-source()) / lambda;\r\n    };\r\n  }\r\n\r\n  randomExponential.source = sourceRandomExponential;\r\n\r\n  return randomExponential;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomPareto(source) {\r\n  function randomPareto(alpha) {\r\n    if ((alpha = +alpha) < 0) throw new RangeError(\"invalid alpha\");\r\n    alpha = 1 / -alpha;\r\n    return function() {\r\n      return Math.pow(1 - source(), alpha);\r\n    };\r\n  }\r\n\r\n  randomPareto.source = sourceRandomPareto;\r\n\r\n  return randomPareto;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomBernoulli(source) {\r\n  function randomBernoulli(p) {\r\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\r\n    return function() {\r\n      return Math.floor(source() + p);\r\n    };\r\n  }\r\n\r\n  randomBernoulli.source = sourceRandomBernoulli;\r\n\r\n  return randomBernoulli;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomGeometric(source) {\r\n  function randomGeometric(p) {\r\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\r\n    if (p === 0) return () => Infinity;\r\n    if (p === 1) return () => 1;\r\n    p = Math.log1p(-p);\r\n    return function() {\r\n      return 1 + Math.floor(Math.log1p(-source()) / p);\r\n    };\r\n  }\r\n\r\n  randomGeometric.source = sourceRandomGeometric;\r\n\r\n  return randomGeometric;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\nimport normal from \"./normal.js\";\r\n\r\nexport default (function sourceRandomGamma(source) {\r\n  var randomNormal = normal.source(source)();\r\n\r\n  function randomGamma(k, theta) {\r\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\");\r\n    // degenerate distribution if k === 0\r\n    if (k === 0) return () => 0;\r\n    theta = theta == null ? 1 : +theta;\r\n    // exponential distribution if k === 1\r\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\r\n\r\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\r\n        c = 1 / (3 * Math.sqrt(d)),\r\n        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\r\n    return function() {\r\n      do {\r\n        do {\r\n          var x = randomNormal(),\r\n              v = 1 + c * x;\r\n        } while (v <= 0);\r\n        v *= v * v;\r\n        var u = 1 - source();\r\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\r\n      return d * v * multiplier() * theta;\r\n    };\r\n  }\r\n\r\n  randomGamma.source = sourceRandomGamma;\r\n\r\n  return randomGamma;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\nimport gamma from \"./gamma.js\";\r\n\r\nexport default (function sourceRandomBeta(source) {\r\n  var G = gamma.source(source);\r\n\r\n  function randomBeta(alpha, beta) {\r\n    var X = G(alpha),\r\n        Y = G(beta);\r\n    return function() {\r\n      var x = X();\r\n      return x === 0 ? 0 : x / (x + Y());\r\n    };\r\n  }\r\n\r\n  randomBeta.source = sourceRandomBeta;\r\n\r\n  return randomBeta;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\nimport beta from \"./beta.js\";\r\nimport geometric from \"./geometric.js\";\r\n\r\nexport default (function sourceRandomBinomial(source) {\r\n  var G = geometric.source(source),\r\n      B = beta.source(source);\r\n\r\n  function randomBinomial(n, p) {\r\n    n = +n;\r\n    if ((p = +p) >= 1) return () => n;\r\n    if (p <= 0) return () => 0;\r\n    return function() {\r\n      var acc = 0, nn = n, pp = p;\r\n      while (nn * pp > 16 && nn * (1 - pp) > 16) {\r\n        var i = Math.floor((nn + 1) * pp),\r\n            y = B(i, nn - i + 1)();\r\n        if (y <= pp) {\r\n          acc += i;\r\n          nn -= i;\r\n          pp = (pp - y) / (1 - y);\r\n        } else {\r\n          nn = i - 1;\r\n          pp /= y;\r\n        }\r\n      }\r\n      var sign = pp < 0.5,\r\n          pFinal = sign ? pp : 1 - pp,\r\n          g = G(pFinal);\r\n      for (var s = g(), k = 0; s <= nn; ++k) s += g();\r\n      return acc + (sign ? k : nn - k);\r\n    };\r\n  }\r\n\r\n  randomBinomial.source = sourceRandomBinomial;\r\n\r\n  return randomBinomial;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomWeibull(source) {\r\n  function randomWeibull(k, a, b) {\r\n    var outerFunc;\r\n    if ((k = +k) === 0) {\r\n      outerFunc = x => -Math.log(x);\r\n    } else {\r\n      k = 1 / k;\r\n      outerFunc = x => Math.pow(x, k);\r\n    }\r\n    a = a == null ? 0 : +a;\r\n    b = b == null ? 1 : +b;\r\n    return function() {\r\n      return a + b * outerFunc(-Math.log1p(-source()));\r\n    };\r\n  }\r\n\r\n  randomWeibull.source = sourceRandomWeibull;\r\n\r\n  return randomWeibull;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomCauchy(source) {\r\n  function randomCauchy(a, b) {\r\n    a = a == null ? 0 : +a;\r\n    b = b == null ? 1 : +b;\r\n    return function() {\r\n      return a + b * Math.tan(Math.PI * source());\r\n    };\r\n  }\r\n\r\n  randomCauchy.source = sourceRandomCauchy;\r\n\r\n  return randomCauchy;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\n\r\nexport default (function sourceRandomLogistic(source) {\r\n  function randomLogistic(a, b) {\r\n    a = a == null ? 0 : +a;\r\n    b = b == null ? 1 : +b;\r\n    return function() {\r\n      var u = source();\r\n      return a + b * Math.log(u / (1 - u));\r\n    };\r\n  }\r\n\r\n  randomLogistic.source = sourceRandomLogistic;\r\n\r\n  return randomLogistic;\r\n})(defaultSource);\r\n", "import defaultSource from \"./defaultSource.js\";\r\nimport binomial from \"./binomial.js\";\r\nimport gamma from \"./gamma.js\";\r\n\r\nexport default (function sourceRandomPoisson(source) {\r\n  var G = gamma.source(source),\r\n      B = binomial.source(source);\r\n\r\n  function randomPoisson(lambda) {\r\n    return function() {\r\n      var acc = 0, l = lambda;\r\n      while (l > 16) {\r\n        var n = Math.floor(0.875 * l),\r\n            t = G(n)();\r\n        if (t > l) return acc + B(n - 1, l / t)();\r\n        acc += n;\r\n        l -= t;\r\n      }\r\n      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());\r\n      return acc + k;\r\n    };\r\n  }\r\n\r\n  randomPoisson.source = sourceRandomPoisson;\r\n\r\n  return randomPoisson;\r\n})(defaultSource);\r\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\r\nconst mul = 0x19660D;\r\nconst inc = 0x3C6EF35F;\r\nconst eps = 1 / 0x100000000;\r\n\r\nexport default function lcg(seed = Math.random()) {\r\n  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\r\n  return () => (state = mul * state + inc | 0, eps * (state >>> 0));\r\n}\r\n", "export default function(specifier) {\r\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\r\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\r\n  return colors;\r\n}\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\r\n", "import colors from \"../colors.js\";\r\n\r\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\r\n", "import {interpolateRgbBasis} from \"d3-interpolate\";\r\n\r\nexport default scheme => interpolateRgbBasis(scheme[scheme.length - 1]);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"d8b365f5f5f55ab4ac\",\r\n  \"a6611adfc27d80cdc1018571\",\r\n  \"a6611adfc27df5f5f580cdc1018571\",\r\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\r\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\r\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\r\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\r\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\r\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"af8dc3f7f7f77fbf7b\",\r\n  \"7b3294c2a5cfa6dba0008837\",\r\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\r\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\r\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\r\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\r\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\r\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\r\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"e9a3c9f7f7f7a1d76a\",\r\n  \"d01c8bf1b6dab8e1864dac26\",\r\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\r\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\r\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\r\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\r\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\r\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\r\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"998ec3f7f7f7f1a340\",\r\n  \"5e3c99b2abd2fdb863e66101\",\r\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\r\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\r\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\r\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\r\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\r\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\r\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"ef8a62f7f7f767a9cf\",\r\n  \"ca0020f4a58292c5de0571b0\",\r\n  \"ca0020f4a582f7f7f792c5de0571b0\",\r\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\r\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\r\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\r\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\r\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\r\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"ef8a62ffffff999999\",\r\n  \"ca0020f4a582bababa404040\",\r\n  \"ca0020f4a582ffffffbababa404040\",\r\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\r\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\r\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\r\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\r\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\r\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"fc8d59ffffbf91bfdb\",\r\n  \"d7191cfdae61abd9e92c7bb6\",\r\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\r\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\r\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\r\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\r\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\r\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\r\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"fc8d59ffffbf91cf60\",\r\n  \"d7191cfdae61a6d96a1a9641\",\r\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\r\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\r\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\r\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\r\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\r\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\r\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"fc8d59ffffbf99d594\",\r\n  \"d7191cfdae61abdda42b83ba\",\r\n  \"d7191cfdae61ffffbfabdda42b83ba\",\r\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\r\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\r\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\r\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\r\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\r\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"e5f5f999d8c92ca25f\",\r\n  \"edf8fbb2e2e266c2a4238b45\",\r\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\r\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\r\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\r\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\r\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"e0ecf49ebcda8856a7\",\r\n  \"edf8fbb3cde38c96c688419d\",\r\n  \"edf8fbb3cde38c96c68856a7810f7c\",\r\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\r\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\r\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\r\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"e0f3dba8ddb543a2ca\",\r\n  \"f0f9e8bae4bc7bccc42b8cbe\",\r\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\r\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\r\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\r\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\r\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"fee8c8fdbb84e34a33\",\r\n  \"fef0d9fdcc8afc8d59d7301f\",\r\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\r\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\r\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\r\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\r\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"ece2f0a6bddb1c9099\",\r\n  \"f6eff7bdc9e167a9cf02818a\",\r\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\r\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\r\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\r\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\r\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"ece7f2a6bddb2b8cbe\",\r\n  \"f1eef6bdc9e174a9cf0570b0\",\r\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\r\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\r\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\r\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\r\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"e7e1efc994c7dd1c77\",\r\n  \"f1eef6d7b5d8df65b0ce1256\",\r\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\r\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\r\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\r\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\r\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"fde0ddfa9fb5c51b8a\",\r\n  \"feebe2fbb4b9f768a1ae017e\",\r\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\r\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\r\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\r\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\r\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"edf8b17fcdbb2c7fb8\",\r\n  \"ffffcca1dab441b6c4225ea8\",\r\n  \"ffffcca1dab441b6c42c7fb8253494\",\r\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\r\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\r\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\r\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"f7fcb9addd8e31a354\",\r\n  \"ffffccc2e69978c679238443\",\r\n  \"ffffccc2e69978c67931a354006837\",\r\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\r\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\r\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\r\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"fff7bcfec44fd95f0e\",\r\n  \"ffffd4fed98efe9929cc4c02\",\r\n  \"ffffd4fed98efe9929d95f0e993404\",\r\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\r\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\r\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\r\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"ffeda0feb24cf03b20\",\r\n  \"ffffb2fecc5cfd8d3ce31a1c\",\r\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\r\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\r\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\r\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\r\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"deebf79ecae13182bd\",\r\n  \"eff3ffbdd7e76baed62171b5\",\r\n  \"eff3ffbdd7e76baed63182bd08519c\",\r\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\r\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\r\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\r\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"e5f5e0a1d99b31a354\",\r\n  \"edf8e9bae4b374c476238b45\",\r\n  \"edf8e9bae4b374c47631a354006d2c\",\r\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\r\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\r\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\r\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"f0f0f0bdbdbd636363\",\r\n  \"f7f7f7cccccc969696525252\",\r\n  \"f7f7f7cccccc969696636363252525\",\r\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\r\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\r\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\r\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"efedf5bcbddc756bb1\",\r\n  \"f2f0f7cbc9e29e9ac86a51a3\",\r\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\r\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\r\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\r\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\r\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"fee0d2fc9272de2d26\",\r\n  \"fee5d9fcae91fb6a4acb181d\",\r\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\r\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\r\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\r\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\r\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "import colors from \"../colors.js\";\r\nimport ramp from \"../ramp.js\";\r\n\r\nexport var scheme = new Array(3).concat(\r\n  \"fee6cefdae6be6550d\",\r\n  \"feeddefdbe85fd8d3cd94701\",\r\n  \"feeddefdbe85fd8d3ce6550da63603\",\r\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\r\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\r\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\r\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\r\n).map(colors);\r\n\r\nexport default ramp(scheme);\r\n", "export default function(t) {\r\n  t = Math.max(0, Math.min(1, t));\r\n  return \"rgb(\"\r\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\r\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\r\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\r\n      + \")\";\r\n}\r\n", "import {cubehelix} from \"d3-color\";\r\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\r\n\r\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\r\n", "import {cubehelix} from \"d3-color\";\r\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\r\n\r\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\r\n\r\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\r\n\r\nvar c = cubehelix();\r\n\r\nexport default function(t) {\r\n  if (t < 0 || t > 1) t -= Math.floor(t);\r\n  var ts = Math.abs(t - 0.5);\r\n  c.h = 360 * t - 100;\r\n  c.s = 1.5 - 1.5 * ts;\r\n  c.l = 0.8 - 0.9 * ts;\r\n  return c + \"\";\r\n}\r\n", "import {rgb} from \"d3-color\";\r\n\r\nvar c = rgb(),\r\n    pi_1_3 = Math.PI / 3,\r\n    pi_2_3 = Math.PI * 2 / 3;\r\n\r\nexport default function(t) {\r\n  var x;\r\n  t = (0.5 - t) * Math.PI;\r\n  c.r = 255 * (x = Math.sin(t)) * x;\r\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\r\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\r\n  return c + \"\";\r\n}\r\n", "export default function(t) {\r\n  t = Math.max(0, Math.min(1, t));\r\n  return \"rgb(\"\r\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\r\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\r\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\r\n      + \")\";\r\n}\r\n", "import colors from \"../colors.js\";\r\n\r\nfunction ramp(range) {\r\n  var n = range.length;\r\n  return function(t) {\r\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\r\n  };\r\n}\r\n\r\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\r\n\r\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\r\n\r\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\r\n\r\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\r\n", "export default function(x) {\r\n  return function constant() {\r\n    return x;\r\n  };\r\n}\r\n", "export const abs = Math.abs;\r\nexport const atan2 = Math.atan2;\r\nexport const cos = Math.cos;\r\nexport const max = Math.max;\r\nexport const min = Math.min;\r\nexport const sin = Math.sin;\r\nexport const sqrt = Math.sqrt;\r\n\r\nexport const epsilon = 1e-12;\r\nexport const pi = Math.PI;\r\nexport const halfPi = pi / 2;\r\nexport const tau = 2 * pi;\r\n\r\nexport function acos(x) {\r\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\r\n}\r\n\r\nexport function asin(x) {\r\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\r\n}\r\n", "import {Path} from \"d3-path\";\r\n\r\nexport function withPath(shape) {\r\n  let digits = 3;\r\n\r\n  shape.digits = function(_) {\r\n    if (!arguments.length) return digits;\r\n    if (_ == null) {\r\n      digits = null;\r\n    } else {\r\n      const d = Math.floor(_);\r\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\r\n      digits = d;\r\n    }\r\n    return shape;\r\n  };\r\n\r\n  return () => new Path(digits);\r\n}\r\n", "import constant from \"./constant.js\";\r\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\r\nimport {withPath} from \"./path.js\";\r\n\r\nfunction arcInnerRadius(d) {\r\n  return d.innerRadius;\r\n}\r\n\r\nfunction arcOuterRadius(d) {\r\n  return d.outerRadius;\r\n}\r\n\r\nfunction arcStartAngle(d) {\r\n  return d.startAngle;\r\n}\r\n\r\nfunction arcEndAngle(d) {\r\n  return d.endAngle;\r\n}\r\n\r\nfunction arcPadAngle(d) {\r\n  return d && d.padAngle; // Note: optional!\r\n}\r\n\r\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n  var x10 = x1 - x0, y10 = y1 - y0,\r\n      x32 = x3 - x2, y32 = y3 - y2,\r\n      t = y32 * x10 - x32 * y10;\r\n  if (t * t < epsilon) return;\r\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\r\n  return [x0 + t * x10, y0 + t * y10];\r\n}\r\n\r\n// Compute perpendicular offset line of length rc.\r\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\r\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\r\n  var x01 = x0 - x1,\r\n      y01 = y0 - y1,\r\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\r\n      ox = lo * y01,\r\n      oy = -lo * x01,\r\n      x11 = x0 + ox,\r\n      y11 = y0 + oy,\r\n      x10 = x1 + ox,\r\n      y10 = y1 + oy,\r\n      x00 = (x11 + x10) / 2,\r\n      y00 = (y11 + y10) / 2,\r\n      dx = x10 - x11,\r\n      dy = y10 - y11,\r\n      d2 = dx * dx + dy * dy,\r\n      r = r1 - rc,\r\n      D = x11 * y10 - x10 * y11,\r\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\r\n      cx0 = (D * dy - dx * d) / d2,\r\n      cy0 = (-D * dx - dy * d) / d2,\r\n      cx1 = (D * dy + dx * d) / d2,\r\n      cy1 = (-D * dx + dy * d) / d2,\r\n      dx0 = cx0 - x00,\r\n      dy0 = cy0 - y00,\r\n      dx1 = cx1 - x00,\r\n      dy1 = cy1 - y00;\r\n\r\n  // Pick the closer of the two intersection points.\r\n  // TODO Is there a faster way to determine which intersection to use?\r\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\r\n\r\n  return {\r\n    cx: cx0,\r\n    cy: cy0,\r\n    x01: -ox,\r\n    y01: -oy,\r\n    x11: cx0 * (r1 / r - 1),\r\n    y11: cy0 * (r1 / r - 1)\r\n  };\r\n}\r\n\r\nexport default function() {\r\n  var innerRadius = arcInnerRadius,\r\n      outerRadius = arcOuterRadius,\r\n      cornerRadius = constant(0),\r\n      padRadius = null,\r\n      startAngle = arcStartAngle,\r\n      endAngle = arcEndAngle,\r\n      padAngle = arcPadAngle,\r\n      context = null,\r\n      path = withPath(arc);\r\n\r\n  function arc() {\r\n    var buffer,\r\n        r,\r\n        r0 = +innerRadius.apply(this, arguments),\r\n        r1 = +outerRadius.apply(this, arguments),\r\n        a0 = startAngle.apply(this, arguments) - halfPi,\r\n        a1 = endAngle.apply(this, arguments) - halfPi,\r\n        da = abs(a1 - a0),\r\n        cw = a1 > a0;\r\n\r\n    if (!context) context = buffer = path();\r\n\r\n    // Ensure that the outer radius is always larger than the inner radius.\r\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\r\n\r\n    // Is it a point?\r\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\r\n\r\n    // Or is it a circle or annulus?\r\n    else if (da > tau - epsilon) {\r\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\r\n      context.arc(0, 0, r1, a0, a1, !cw);\r\n      if (r0 > epsilon) {\r\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\r\n        context.arc(0, 0, r0, a1, a0, cw);\r\n      }\r\n    }\r\n\r\n    // Or is it a circular or annular sector?\r\n    else {\r\n      var a01 = a0,\r\n          a11 = a1,\r\n          a00 = a0,\r\n          a10 = a1,\r\n          da0 = da,\r\n          da1 = da,\r\n          ap = padAngle.apply(this, arguments) / 2,\r\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\r\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\r\n          rc0 = rc,\r\n          rc1 = rc,\r\n          t0,\r\n          t1;\r\n\r\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\r\n      if (rp > epsilon) {\r\n        var p0 = asin(rp / r0 * sin(ap)),\r\n            p1 = asin(rp / r1 * sin(ap));\r\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\r\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\r\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\r\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\r\n      }\r\n\r\n      var x01 = r1 * cos(a01),\r\n          y01 = r1 * sin(a01),\r\n          x10 = r0 * cos(a10),\r\n          y10 = r0 * sin(a10);\r\n\r\n      // Apply rounded corners?\r\n      if (rc > epsilon) {\r\n        var x11 = r1 * cos(a11),\r\n            y11 = r1 * sin(a11),\r\n            x00 = r0 * cos(a00),\r\n            y00 = r0 * sin(a00),\r\n            oc;\r\n\r\n        // Restrict the corner radius according to the sector angle. If this\r\n        // intersection fails, it’s probably because the arc is too small, so\r\n        // disable the corner radius entirely.\r\n        if (da < pi) {\r\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\r\n            var ax = x01 - oc[0],\r\n                ay = y01 - oc[1],\r\n                bx = x11 - oc[0],\r\n                by = y11 - oc[1],\r\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\r\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\r\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\r\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\r\n          } else {\r\n            rc0 = rc1 = 0;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Is the sector collapsed to a line?\r\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\r\n\r\n      // Does the sector’s outer ring have rounded corners?\r\n      else if (rc1 > epsilon) {\r\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\r\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\r\n\r\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\r\n\r\n        // Have the corners merged?\r\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\r\n\r\n        // Otherwise, draw the two corners and the ring.\r\n        else {\r\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\r\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\r\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\r\n        }\r\n      }\r\n\r\n      // Or is the outer ring just a circular arc?\r\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\r\n\r\n      // Is there no inner ring, and it’s a circular sector?\r\n      // Or perhaps it’s an annular sector collapsed due to padding?\r\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\r\n\r\n      // Does the sector’s inner ring (or point) have rounded corners?\r\n      else if (rc0 > epsilon) {\r\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\r\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\r\n\r\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\r\n\r\n        // Have the corners merged?\r\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\r\n\r\n        // Otherwise, draw the two corners and the ring.\r\n        else {\r\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\r\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\r\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\r\n        }\r\n      }\r\n\r\n      // Or is the inner ring just a circular arc?\r\n      else context.arc(0, 0, r0, a10, a00, cw);\r\n    }\r\n\r\n    context.closePath();\r\n\r\n    if (buffer) return context = null, buffer + \"\" || null;\r\n  }\r\n\r\n  arc.centroid = function() {\r\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\r\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\r\n    return [cos(a) * r, sin(a) * r];\r\n  };\r\n\r\n  arc.innerRadius = function(_) {\r\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\r\n  };\r\n\r\n  arc.outerRadius = function(_) {\r\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\r\n  };\r\n\r\n  arc.cornerRadius = function(_) {\r\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\r\n  };\r\n\r\n  arc.padRadius = function(_) {\r\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\r\n  };\r\n\r\n  arc.startAngle = function(_) {\r\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\r\n  };\r\n\r\n  arc.endAngle = function(_) {\r\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\r\n  };\r\n\r\n  arc.padAngle = function(_) {\r\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\r\n  };\r\n\r\n  arc.context = function(_) {\r\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\r\n  };\r\n\r\n  return arc;\r\n}\r\n", "export var slice = Array.prototype.slice;\r\n\r\nexport default function(x) {\r\n  return typeof x === \"object\" && \"length\" in x\r\n    ? x // Array, TypedArray, NodeList, array-like\r\n    : Array.from(x); // Map, Set, iterable, string, or anything else\r\n}\r\n", "function Linear(context) {\r\n  this._context = context;\r\n}\r\n\r\nLinear.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n      case 1: this._point = 2; // falls through\r\n      default: this._context.lineTo(x, y); break;\r\n    }\r\n  }\r\n};\r\n\r\nexport default function(context) {\r\n  return new Linear(context);\r\n}\r\n", "export function x(p) {\r\n  return p[0];\r\n}\r\n\r\nexport function y(p) {\r\n  return p[1];\r\n}\r\n", "import array from \"./array.js\";\r\nimport constant from \"./constant.js\";\r\nimport curveLinear from \"./curve/linear.js\";\r\nimport {withPath} from \"./path.js\";\r\nimport {x as pointX, y as pointY} from \"./point.js\";\r\n\r\nexport default function(x, y) {\r\n  var defined = constant(true),\r\n      context = null,\r\n      curve = curveLinear,\r\n      output = null,\r\n      path = withPath(line);\r\n\r\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\r\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\r\n\r\n  function line(data) {\r\n    var i,\r\n        n = (data = array(data)).length,\r\n        d,\r\n        defined0 = false,\r\n        buffer;\r\n\r\n    if (context == null) output = curve(buffer = path());\r\n\r\n    for (i = 0; i <= n; ++i) {\r\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\r\n        if (defined0 = !defined0) output.lineStart();\r\n        else output.lineEnd();\r\n      }\r\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\r\n    }\r\n\r\n    if (buffer) return output = null, buffer + \"\" || null;\r\n  }\r\n\r\n  line.x = function(_) {\r\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\r\n  };\r\n\r\n  line.y = function(_) {\r\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\r\n  };\r\n\r\n  line.defined = function(_) {\r\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\r\n  };\r\n\r\n  line.curve = function(_) {\r\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\r\n  };\r\n\r\n  line.context = function(_) {\r\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\r\n  };\r\n\r\n  return line;\r\n}\r\n", "import array from \"./array.js\";\r\nimport constant from \"./constant.js\";\r\nimport curveLinear from \"./curve/linear.js\";\r\nimport line from \"./line.js\";\r\nimport {withPath} from \"./path.js\";\r\nimport {x as pointX, y as pointY} from \"./point.js\";\r\n\r\nexport default function(x0, y0, y1) {\r\n  var x1 = null,\r\n      defined = constant(true),\r\n      context = null,\r\n      curve = curveLinear,\r\n      output = null,\r\n      path = withPath(area);\r\n\r\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\r\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\r\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\r\n\r\n  function area(data) {\r\n    var i,\r\n        j,\r\n        k,\r\n        n = (data = array(data)).length,\r\n        d,\r\n        defined0 = false,\r\n        buffer,\r\n        x0z = new Array(n),\r\n        y0z = new Array(n);\r\n\r\n    if (context == null) output = curve(buffer = path());\r\n\r\n    for (i = 0; i <= n; ++i) {\r\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\r\n        if (defined0 = !defined0) {\r\n          j = i;\r\n          output.areaStart();\r\n          output.lineStart();\r\n        } else {\r\n          output.lineEnd();\r\n          output.lineStart();\r\n          for (k = i - 1; k >= j; --k) {\r\n            output.point(x0z[k], y0z[k]);\r\n          }\r\n          output.lineEnd();\r\n          output.areaEnd();\r\n        }\r\n      }\r\n      if (defined0) {\r\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\r\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\r\n      }\r\n    }\r\n\r\n    if (buffer) return output = null, buffer + \"\" || null;\r\n  }\r\n\r\n  function arealine() {\r\n    return line().defined(defined).curve(curve).context(context);\r\n  }\r\n\r\n  area.x = function(_) {\r\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\r\n  };\r\n\r\n  area.x0 = function(_) {\r\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\r\n  };\r\n\r\n  area.x1 = function(_) {\r\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\r\n  };\r\n\r\n  area.y = function(_) {\r\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\r\n  };\r\n\r\n  area.y0 = function(_) {\r\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\r\n  };\r\n\r\n  area.y1 = function(_) {\r\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\r\n  };\r\n\r\n  area.lineX0 =\r\n  area.lineY0 = function() {\r\n    return arealine().x(x0).y(y0);\r\n  };\r\n\r\n  area.lineY1 = function() {\r\n    return arealine().x(x0).y(y1);\r\n  };\r\n\r\n  area.lineX1 = function() {\r\n    return arealine().x(x1).y(y0);\r\n  };\r\n\r\n  area.defined = function(_) {\r\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\r\n  };\r\n\r\n  area.curve = function(_) {\r\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\r\n  };\r\n\r\n  area.context = function(_) {\r\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\r\n  };\r\n\r\n  return area;\r\n}\r\n", "export default function(a, b) {\r\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n}\r\n", "export default function(d) {\r\n  return d;\r\n}\r\n", "import array from \"./array.js\";\r\nimport constant from \"./constant.js\";\r\nimport descending from \"./descending.js\";\r\nimport identity from \"./identity.js\";\r\nimport {tau} from \"./math.js\";\r\n\r\nexport default function() {\r\n  var value = identity,\r\n      sortValues = descending,\r\n      sort = null,\r\n      startAngle = constant(0),\r\n      endAngle = constant(tau),\r\n      padAngle = constant(0);\r\n\r\n  function pie(data) {\r\n    var i,\r\n        n = (data = array(data)).length,\r\n        j,\r\n        k,\r\n        sum = 0,\r\n        index = new Array(n),\r\n        arcs = new Array(n),\r\n        a0 = +startAngle.apply(this, arguments),\r\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\r\n        a1,\r\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\r\n        pa = p * (da < 0 ? -1 : 1),\r\n        v;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\r\n        sum += v;\r\n      }\r\n    }\r\n\r\n    // Optionally sort the arcs by previously-computed values or by data.\r\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\r\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\r\n\r\n    // Compute the arcs! They are stored in the original data's order.\r\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\r\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\r\n        data: data[j],\r\n        index: i,\r\n        value: v,\r\n        startAngle: a0,\r\n        endAngle: a1,\r\n        padAngle: p\r\n      };\r\n    }\r\n\r\n    return arcs;\r\n  }\r\n\r\n  pie.value = function(_) {\r\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\r\n  };\r\n\r\n  pie.sortValues = function(_) {\r\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\r\n  };\r\n\r\n  pie.sort = function(_) {\r\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\r\n  };\r\n\r\n  pie.startAngle = function(_) {\r\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\r\n  };\r\n\r\n  pie.endAngle = function(_) {\r\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\r\n  };\r\n\r\n  pie.padAngle = function(_) {\r\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\r\n  };\r\n\r\n  return pie;\r\n}\r\n", "import curveLinear from \"./linear.js\";\r\n\r\nexport var curveRadialLinear = curveRadial(curveLinear);\r\n\r\nfunction Radial(curve) {\r\n  this._curve = curve;\r\n}\r\n\r\nRadial.prototype = {\r\n  areaStart: function() {\r\n    this._curve.areaStart();\r\n  },\r\n  areaEnd: function() {\r\n    this._curve.areaEnd();\r\n  },\r\n  lineStart: function() {\r\n    this._curve.lineStart();\r\n  },\r\n  lineEnd: function() {\r\n    this._curve.lineEnd();\r\n  },\r\n  point: function(a, r) {\r\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\r\n  }\r\n};\r\n\r\nexport default function curveRadial(curve) {\r\n\r\n  function radial(context) {\r\n    return new Radial(curve(context));\r\n  }\r\n\r\n  radial._curve = curve;\r\n\r\n  return radial;\r\n}\r\n", "import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\r\nimport line from \"./line.js\";\r\n\r\nexport function lineRadial(l) {\r\n  var c = l.curve;\r\n\r\n  l.angle = l.x, delete l.x;\r\n  l.radius = l.y, delete l.y;\r\n\r\n  l.curve = function(_) {\r\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\r\n  };\r\n\r\n  return l;\r\n}\r\n\r\nexport default function() {\r\n  return lineRadial(line().curve(curveRadialLinear));\r\n}\r\n", "import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\r\nimport area from \"./area.js\";\r\nimport {lineRadial} from \"./lineRadial.js\";\r\n\r\nexport default function() {\r\n  var a = area().curve(curveRadialLinear),\r\n      c = a.curve,\r\n      x0 = a.lineX0,\r\n      x1 = a.lineX1,\r\n      y0 = a.lineY0,\r\n      y1 = a.lineY1;\r\n\r\n  a.angle = a.x, delete a.x;\r\n  a.startAngle = a.x0, delete a.x0;\r\n  a.endAngle = a.x1, delete a.x1;\r\n  a.radius = a.y, delete a.y;\r\n  a.innerRadius = a.y0, delete a.y0;\r\n  a.outerRadius = a.y1, delete a.y1;\r\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\r\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\r\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\r\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\r\n\r\n  a.curve = function(_) {\r\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\r\n  };\r\n\r\n  return a;\r\n}\r\n", "export default function(x, y) {\r\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\r\n}\r\n", "import pointRadial from \"../pointRadial.js\";\r\n\r\nclass Bump {\r\n  constructor(context, x) {\r\n    this._context = context;\r\n    this._x = x;\r\n  }\r\n  areaStart() {\r\n    this._line = 0;\r\n  }\r\n  areaEnd() {\r\n    this._line = NaN;\r\n  }\r\n  lineStart() {\r\n    this._point = 0;\r\n  }\r\n  lineEnd() {\r\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  }\r\n  point(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: {\r\n        this._point = 1;\r\n        if (this._line) this._context.lineTo(x, y);\r\n        else this._context.moveTo(x, y);\r\n        break;\r\n      }\r\n      case 1: this._point = 2; // falls through\r\n      default: {\r\n        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);\r\n        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\r\n        break;\r\n      }\r\n    }\r\n    this._x0 = x, this._y0 = y;\r\n  }\r\n}\r\n\r\nclass BumpRadial {\r\n  constructor(context) {\r\n    this._context = context;\r\n  }\r\n  lineStart() {\r\n    this._point = 0;\r\n  }\r\n  lineEnd() {}\r\n  point(x, y) {\r\n    x = +x, y = +y;\r\n    if (this._point === 0) {\r\n      this._point = 1;\r\n    } else {\r\n      const p0 = pointRadial(this._x0, this._y0);\r\n      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\r\n      const p2 = pointRadial(x, this._y0);\r\n      const p3 = pointRadial(x, y);\r\n      this._context.moveTo(...p0);\r\n      this._context.bezierCurveTo(...p1, ...p2, ...p3);\r\n    }\r\n    this._x0 = x, this._y0 = y;\r\n  }\r\n}\r\n\r\nexport function bumpX(context) {\r\n  return new Bump(context, true);\r\n}\r\n\r\nexport function bumpY(context) {\r\n  return new Bump(context, false);\r\n}\r\n\r\nexport function bumpRadial(context) {\r\n  return new BumpRadial(context);\r\n}\r\n", "import {slice} from \"./array.js\";\r\nimport constant from \"./constant.js\";\r\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\r\nimport {withPath} from \"./path.js\";\r\nimport {x as pointX, y as pointY} from \"./point.js\";\r\n\r\nfunction linkSource(d) {\r\n  return d.source;\r\n}\r\n\r\nfunction linkTarget(d) {\r\n  return d.target;\r\n}\r\n\r\nexport function link(curve) {\r\n  let source = linkSource,\r\n      target = linkTarget,\r\n      x = pointX,\r\n      y = pointY,\r\n      context = null,\r\n      output = null,\r\n      path = withPath(link);\r\n\r\n  function link() {\r\n    let buffer;\r\n    const argv = slice.call(arguments);\r\n    const s = source.apply(this, argv);\r\n    const t = target.apply(this, argv);\r\n    if (context == null) output = curve(buffer = path());\r\n    output.lineStart();\r\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\r\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\r\n    output.lineEnd();\r\n    if (buffer) return output = null, buffer + \"\" || null;\r\n  }\r\n\r\n  link.source = function(_) {\r\n    return arguments.length ? (source = _, link) : source;\r\n  };\r\n\r\n  link.target = function(_) {\r\n    return arguments.length ? (target = _, link) : target;\r\n  };\r\n\r\n  link.x = function(_) {\r\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\r\n  };\r\n\r\n  link.y = function(_) {\r\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\r\n  };\r\n\r\n  link.context = function(_) {\r\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\r\n  };\r\n\r\n  return link;\r\n}\r\n\r\nexport function linkHorizontal() {\r\n  return link(bumpX);\r\n}\r\n\r\nexport function linkVertical() {\r\n  return link(bumpY);\r\n}\r\n\r\nexport function linkRadial() {\r\n  const l = link(bumpRadial);\r\n  l.angle = l.x, delete l.x;\r\n  l.radius = l.y, delete l.y;\r\n  return l;\r\n}\r\n", "import {min, sqrt} from \"../math.js\";\r\n\r\nconst sqrt3 = sqrt(3);\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size + min(size / 28, 0.75)) * 0.59436;\r\n    const t = r / 2;\r\n    const u = t * sqrt3;\r\n    context.moveTo(0, r);\r\n    context.lineTo(0, -r);\r\n    context.moveTo(-u, -t);\r\n    context.lineTo(u, t);\r\n    context.moveTo(-u, t);\r\n    context.lineTo(u, -t);\r\n  }\r\n};\r\n", "import {pi, sqrt, tau} from \"../math.js\";\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size / pi);\r\n    context.moveTo(r, 0);\r\n    context.arc(0, 0, r, 0, tau);\r\n  }\r\n};\r\n", "import {sqrt} from \"../math.js\";\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size / 5) / 2;\r\n    context.moveTo(-3 * r, -r);\r\n    context.lineTo(-r, -r);\r\n    context.lineTo(-r, -3 * r);\r\n    context.lineTo(r, -3 * r);\r\n    context.lineTo(r, -r);\r\n    context.lineTo(3 * r, -r);\r\n    context.lineTo(3 * r, r);\r\n    context.lineTo(r, r);\r\n    context.lineTo(r, 3 * r);\r\n    context.lineTo(-r, 3 * r);\r\n    context.lineTo(-r, r);\r\n    context.lineTo(-3 * r, r);\r\n    context.closePath();\r\n  }\r\n};\r\n", "import {sqrt} from \"../math.js\";\r\n\r\nconst tan30 = sqrt(1 / 3);\r\nconst tan30_2 = tan30 * 2;\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const y = sqrt(size / tan30_2);\r\n    const x = y * tan30;\r\n    context.moveTo(0, -y);\r\n    context.lineTo(x, 0);\r\n    context.lineTo(0, y);\r\n    context.lineTo(-x, 0);\r\n    context.closePath();\r\n  }\r\n};\r\n", "import {sqrt} from \"../math.js\";\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size) * 0.62625;\r\n    context.moveTo(0, -r);\r\n    context.lineTo(r, 0);\r\n    context.lineTo(0, r);\r\n    context.lineTo(-r, 0);\r\n    context.closePath();\r\n  }\r\n};\r\n", "import {min, sqrt} from \"../math.js\";\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size - min(size / 7, 2)) * 0.87559;\r\n    context.moveTo(-r, 0);\r\n    context.lineTo(r, 0);\r\n    context.moveTo(0, r);\r\n    context.lineTo(0, -r);\r\n  }\r\n};\r\n", "import {sqrt} from \"../math.js\";\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const w = sqrt(size);\r\n    const x = -w / 2;\r\n    context.rect(x, x, w, w);\r\n  }\r\n};\r\n", "import {sqrt} from \"../math.js\";\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size) * 0.4431;\r\n    context.moveTo(r, r);\r\n    context.lineTo(r, -r);\r\n    context.lineTo(-r, -r);\r\n    context.lineTo(-r, r);\r\n    context.closePath();\r\n  }\r\n};\r\n", "import {sin, cos, sqrt, pi, tau} from \"../math.js\";\r\n\r\nconst ka = 0.89081309152928522810;\r\nconst kr = sin(pi / 10) / sin(7 * pi / 10);\r\nconst kx = sin(tau / 10) * kr;\r\nconst ky = -cos(tau / 10) * kr;\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size * ka);\r\n    const x = kx * r;\r\n    const y = ky * r;\r\n    context.moveTo(0, -r);\r\n    context.lineTo(x, y);\r\n    for (let i = 1; i < 5; ++i) {\r\n      const a = tau * i / 5;\r\n      const c = cos(a);\r\n      const s = sin(a);\r\n      context.lineTo(s * r, -c * r);\r\n      context.lineTo(c * x - s * y, s * x + c * y);\r\n    }\r\n    context.closePath();\r\n  }\r\n};\r\n", "import {sqrt} from \"../math.js\";\r\n\r\nconst sqrt3 = sqrt(3);\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const y = -sqrt(size / (sqrt3 * 3));\r\n    context.moveTo(0, y * 2);\r\n    context.lineTo(-sqrt3 * y, -y);\r\n    context.lineTo(sqrt3 * y, -y);\r\n    context.closePath();\r\n  }\r\n};\r\n", "import {sqrt} from \"../math.js\";\r\n\r\nconst sqrt3 = sqrt(3);\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const s = sqrt(size) * 0.6824;\r\n    const t = s  / 2;\r\n    const u = (s * sqrt3) / 2; // cos(Math.PI / 6)\r\n    context.moveTo(0, -s);\r\n    context.lineTo(u, t);\r\n    context.lineTo(-u, t);\r\n    context.closePath();\r\n  }\r\n};\r\n", "import {sqrt} from \"../math.js\";\r\n\r\nconst c = -0.5;\r\nconst s = sqrt(3) / 2;\r\nconst k = 1 / sqrt(12);\r\nconst a = (k / 2 + 1) * 3;\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size / a);\r\n    const x0 = r / 2, y0 = r * k;\r\n    const x1 = x0, y1 = r * k + r;\r\n    const x2 = -x1, y2 = y1;\r\n    context.moveTo(x0, y0);\r\n    context.lineTo(x1, y1);\r\n    context.lineTo(x2, y2);\r\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\r\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\r\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\r\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\r\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\r\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\r\n    context.closePath();\r\n  }\r\n};\r\n", "import {min, sqrt} from \"../math.js\";\r\n\r\nexport default {\r\n  draw(context, size) {\r\n    const r = sqrt(size - min(size / 6, 1.7)) * 0.6189;\r\n    context.moveTo(-r, -r);\r\n    context.lineTo(r, r);\r\n    context.moveTo(-r, r);\r\n    context.lineTo(r, -r);\r\n  }\r\n};\r\n", "import constant from \"./constant.js\";\r\nimport {withPath} from \"./path.js\";\r\nimport asterisk from \"./symbol/asterisk.js\";\r\nimport circle from \"./symbol/circle.js\";\r\nimport cross from \"./symbol/cross.js\";\r\nimport diamond from \"./symbol/diamond.js\";\r\nimport diamond2 from \"./symbol/diamond2.js\";\r\nimport plus from \"./symbol/plus.js\";\r\nimport square from \"./symbol/square.js\";\r\nimport square2 from \"./symbol/square2.js\";\r\nimport star from \"./symbol/star.js\";\r\nimport triangle from \"./symbol/triangle.js\";\r\nimport triangle2 from \"./symbol/triangle2.js\";\r\nimport wye from \"./symbol/wye.js\";\r\nimport times from \"./symbol/times.js\";\r\n\r\n// These symbols are designed to be filled.\r\nexport const symbolsFill = [\r\n  circle,\r\n  cross,\r\n  diamond,\r\n  square,\r\n  star,\r\n  triangle,\r\n  wye\r\n];\r\n\r\n// These symbols are designed to be stroked (with a width of 1.5px and round caps).\r\nexport const symbolsStroke = [\r\n  circle,\r\n  plus,\r\n  times,\r\n  triangle2,\r\n  asterisk,\r\n  square2,\r\n  diamond2\r\n];\r\n\r\nexport default function Symbol(type, size) {\r\n  let context = null,\r\n      path = withPath(symbol);\r\n\r\n  type = typeof type === \"function\" ? type : constant(type || circle);\r\n  size = typeof size === \"function\" ? size : constant(size === undefined ? 64 : +size);\r\n\r\n  function symbol() {\r\n    let buffer;\r\n    if (!context) context = buffer = path();\r\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\r\n    if (buffer) return context = null, buffer + \"\" || null;\r\n  }\r\n\r\n  symbol.type = function(_) {\r\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\r\n  };\r\n\r\n  symbol.size = function(_) {\r\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\r\n  };\r\n\r\n  symbol.context = function(_) {\r\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\r\n  };\r\n\r\n  return symbol;\r\n}\r\n", "export default function() {}\r\n", "export function point(that, x, y) {\r\n  that._context.bezierCurveTo(\r\n    (2 * that._x0 + that._x1) / 3,\r\n    (2 * that._y0 + that._y1) / 3,\r\n    (that._x0 + 2 * that._x1) / 3,\r\n    (that._y0 + 2 * that._y1) / 3,\r\n    (that._x0 + 4 * that._x1 + x) / 6,\r\n    (that._y0 + 4 * that._y1 + y) / 6\r\n  );\r\n}\r\n\r\nexport function Basis(context) {\r\n  this._context = context;\r\n}\r\n\r\nBasis.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x0 = this._x1 =\r\n    this._y0 = this._y1 = NaN;\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    switch (this._point) {\r\n      case 3: point(this, this._x1, this._y1); // falls through\r\n      case 2: this._context.lineTo(this._x1, this._y1); break;\r\n    }\r\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n      case 1: this._point = 2; break;\r\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through\r\n      default: point(this, x, y); break;\r\n    }\r\n    this._x0 = this._x1, this._x1 = x;\r\n    this._y0 = this._y1, this._y1 = y;\r\n  }\r\n};\r\n\r\nexport default function(context) {\r\n  return new Basis(context);\r\n}\r\n", "import noop from \"../noop.js\";\r\nimport {point} from \"./basis.js\";\r\n\r\nfunction BasisClosed(context) {\r\n  this._context = context;\r\n}\r\n\r\nBasisClosed.prototype = {\r\n  areaStart: noop,\r\n  areaEnd: noop,\r\n  lineStart: function() {\r\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\r\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    switch (this._point) {\r\n      case 1: {\r\n        this._context.moveTo(this._x2, this._y2);\r\n        this._context.closePath();\r\n        break;\r\n      }\r\n      case 2: {\r\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\r\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\r\n        this._context.closePath();\r\n        break;\r\n      }\r\n      case 3: {\r\n        this.point(this._x2, this._y2);\r\n        this.point(this._x3, this._y3);\r\n        this.point(this._x4, this._y4);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\r\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\r\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\r\n      default: point(this, x, y); break;\r\n    }\r\n    this._x0 = this._x1, this._x1 = x;\r\n    this._y0 = this._y1, this._y1 = y;\r\n  }\r\n};\r\n\r\nexport default function(context) {\r\n  return new BasisClosed(context);\r\n}\r\n", "import {point} from \"./basis.js\";\r\n\r\nfunction BasisOpen(context) {\r\n  this._context = context;\r\n}\r\n\r\nBasisOpen.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x0 = this._x1 =\r\n    this._y0 = this._y1 = NaN;\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: this._point = 1; break;\r\n      case 1: this._point = 2; break;\r\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\r\n      case 3: this._point = 4; // falls through\r\n      default: point(this, x, y); break;\r\n    }\r\n    this._x0 = this._x1, this._x1 = x;\r\n    this._y0 = this._y1, this._y1 = y;\r\n  }\r\n};\r\n\r\nexport default function(context) {\r\n  return new BasisOpen(context);\r\n}\r\n", "import {Basis} from \"./basis.js\";\r\n\r\nfunction Bundle(context, beta) {\r\n  this._basis = new Basis(context);\r\n  this._beta = beta;\r\n}\r\n\r\nBundle.prototype = {\r\n  lineStart: function() {\r\n    this._x = [];\r\n    this._y = [];\r\n    this._basis.lineStart();\r\n  },\r\n  lineEnd: function() {\r\n    var x = this._x,\r\n        y = this._y,\r\n        j = x.length - 1;\r\n\r\n    if (j > 0) {\r\n      var x0 = x[0],\r\n          y0 = y[0],\r\n          dx = x[j] - x0,\r\n          dy = y[j] - y0,\r\n          i = -1,\r\n          t;\r\n\r\n      while (++i <= j) {\r\n        t = i / j;\r\n        this._basis.point(\r\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\r\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\r\n        );\r\n      }\r\n    }\r\n\r\n    this._x = this._y = null;\r\n    this._basis.lineEnd();\r\n  },\r\n  point: function(x, y) {\r\n    this._x.push(+x);\r\n    this._y.push(+y);\r\n  }\r\n};\r\n\r\nexport default (function custom(beta) {\r\n\r\n  function bundle(context) {\r\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\r\n  }\r\n\r\n  bundle.beta = function(beta) {\r\n    return custom(+beta);\r\n  };\r\n\r\n  return bundle;\r\n})(0.85);\r\n", "export function point(that, x, y) {\r\n  that._context.bezierCurveTo(\r\n    that._x1 + that._k * (that._x2 - that._x0),\r\n    that._y1 + that._k * (that._y2 - that._y0),\r\n    that._x2 + that._k * (that._x1 - x),\r\n    that._y2 + that._k * (that._y1 - y),\r\n    that._x2,\r\n    that._y2\r\n  );\r\n}\r\n\r\nexport function Cardinal(context, tension) {\r\n  this._context = context;\r\n  this._k = (1 - tension) / 6;\r\n}\r\n\r\nCardinal.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x0 = this._x1 = this._x2 =\r\n    this._y0 = this._y1 = this._y2 = NaN;\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    switch (this._point) {\r\n      case 2: this._context.lineTo(this._x2, this._y2); break;\r\n      case 3: point(this, this._x1, this._y1); break;\r\n    }\r\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\r\n      case 2: this._point = 3; // falls through\r\n      default: point(this, x, y); break;\r\n    }\r\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n  }\r\n};\r\n\r\nexport default (function custom(tension) {\r\n\r\n  function cardinal(context) {\r\n    return new Cardinal(context, tension);\r\n  }\r\n\r\n  cardinal.tension = function(tension) {\r\n    return custom(+tension);\r\n  };\r\n\r\n  return cardinal;\r\n})(0);\r\n", "import noop from \"../noop.js\";\r\nimport {point} from \"./cardinal.js\";\r\n\r\nexport function CardinalClosed(context, tension) {\r\n  this._context = context;\r\n  this._k = (1 - tension) / 6;\r\n}\r\n\r\nCardinalClosed.prototype = {\r\n  areaStart: noop,\r\n  areaEnd: noop,\r\n  lineStart: function() {\r\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\r\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    switch (this._point) {\r\n      case 1: {\r\n        this._context.moveTo(this._x3, this._y3);\r\n        this._context.closePath();\r\n        break;\r\n      }\r\n      case 2: {\r\n        this._context.lineTo(this._x3, this._y3);\r\n        this._context.closePath();\r\n        break;\r\n      }\r\n      case 3: {\r\n        this.point(this._x3, this._y3);\r\n        this.point(this._x4, this._y4);\r\n        this.point(this._x5, this._y5);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\r\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\r\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\r\n      default: point(this, x, y); break;\r\n    }\r\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n  }\r\n};\r\n\r\nexport default (function custom(tension) {\r\n\r\n  function cardinal(context) {\r\n    return new CardinalClosed(context, tension);\r\n  }\r\n\r\n  cardinal.tension = function(tension) {\r\n    return custom(+tension);\r\n  };\r\n\r\n  return cardinal;\r\n})(0);\r\n", "import {point} from \"./cardinal.js\";\r\n\r\nexport function CardinalOpen(context, tension) {\r\n  this._context = context;\r\n  this._k = (1 - tension) / 6;\r\n}\r\n\r\nCardinalOpen.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x0 = this._x1 = this._x2 =\r\n    this._y0 = this._y1 = this._y2 = NaN;\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: this._point = 1; break;\r\n      case 1: this._point = 2; break;\r\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\r\n      case 3: this._point = 4; // falls through\r\n      default: point(this, x, y); break;\r\n    }\r\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n  }\r\n};\r\n\r\nexport default (function custom(tension) {\r\n\r\n  function cardinal(context) {\r\n    return new CardinalOpen(context, tension);\r\n  }\r\n\r\n  cardinal.tension = function(tension) {\r\n    return custom(+tension);\r\n  };\r\n\r\n  return cardinal;\r\n})(0);\r\n", "import {epsilon} from \"../math.js\";\r\nimport {Cardinal} from \"./cardinal.js\";\r\n\r\nexport function point(that, x, y) {\r\n  var x1 = that._x1,\r\n      y1 = that._y1,\r\n      x2 = that._x2,\r\n      y2 = that._y2;\r\n\r\n  if (that._l01_a > epsilon) {\r\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\r\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\r\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\r\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\r\n  }\r\n\r\n  if (that._l23_a > epsilon) {\r\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\r\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\r\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\r\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\r\n  }\r\n\r\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\r\n}\r\n\r\nfunction CatmullRom(context, alpha) {\r\n  this._context = context;\r\n  this._alpha = alpha;\r\n}\r\n\r\nCatmullRom.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x0 = this._x1 = this._x2 =\r\n    this._y0 = this._y1 = this._y2 = NaN;\r\n    this._l01_a = this._l12_a = this._l23_a =\r\n    this._l01_2a = this._l12_2a = this._l23_2a =\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    switch (this._point) {\r\n      case 2: this._context.lineTo(this._x2, this._y2); break;\r\n      case 3: this.point(this._x2, this._y2); break;\r\n    }\r\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n\r\n    if (this._point) {\r\n      var x23 = this._x2 - x,\r\n          y23 = this._y2 - y;\r\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\r\n    }\r\n\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n      case 1: this._point = 2; break;\r\n      case 2: this._point = 3; // falls through\r\n      default: point(this, x, y); break;\r\n    }\r\n\r\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\r\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\r\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n  }\r\n};\r\n\r\nexport default (function custom(alpha) {\r\n\r\n  function catmullRom(context) {\r\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\r\n  }\r\n\r\n  catmullRom.alpha = function(alpha) {\r\n    return custom(+alpha);\r\n  };\r\n\r\n  return catmullRom;\r\n})(0.5);\r\n", "import {CardinalClosed} from \"./cardinalClosed.js\";\r\nimport noop from \"../noop.js\";\r\nimport {point} from \"./catmullRom.js\";\r\n\r\nfunction CatmullRomClosed(context, alpha) {\r\n  this._context = context;\r\n  this._alpha = alpha;\r\n}\r\n\r\nCatmullRomClosed.prototype = {\r\n  areaStart: noop,\r\n  areaEnd: noop,\r\n  lineStart: function() {\r\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\r\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\r\n    this._l01_a = this._l12_a = this._l23_a =\r\n    this._l01_2a = this._l12_2a = this._l23_2a =\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    switch (this._point) {\r\n      case 1: {\r\n        this._context.moveTo(this._x3, this._y3);\r\n        this._context.closePath();\r\n        break;\r\n      }\r\n      case 2: {\r\n        this._context.lineTo(this._x3, this._y3);\r\n        this._context.closePath();\r\n        break;\r\n      }\r\n      case 3: {\r\n        this.point(this._x3, this._y3);\r\n        this.point(this._x4, this._y4);\r\n        this.point(this._x5, this._y5);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n\r\n    if (this._point) {\r\n      var x23 = this._x2 - x,\r\n          y23 = this._y2 - y;\r\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\r\n    }\r\n\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\r\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\r\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\r\n      default: point(this, x, y); break;\r\n    }\r\n\r\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\r\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\r\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n  }\r\n};\r\n\r\nexport default (function custom(alpha) {\r\n\r\n  function catmullRom(context) {\r\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\r\n  }\r\n\r\n  catmullRom.alpha = function(alpha) {\r\n    return custom(+alpha);\r\n  };\r\n\r\n  return catmullRom;\r\n})(0.5);\r\n", "import {CardinalOpen} from \"./cardinalOpen.js\";\r\nimport {point} from \"./catmullRom.js\";\r\n\r\nfunction CatmullRomOpen(context, alpha) {\r\n  this._context = context;\r\n  this._alpha = alpha;\r\n}\r\n\r\nCatmullRomOpen.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x0 = this._x1 = this._x2 =\r\n    this._y0 = this._y1 = this._y2 = NaN;\r\n    this._l01_a = this._l12_a = this._l23_a =\r\n    this._l01_2a = this._l12_2a = this._l23_2a =\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n\r\n    if (this._point) {\r\n      var x23 = this._x2 - x,\r\n          y23 = this._y2 - y;\r\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\r\n    }\r\n\r\n    switch (this._point) {\r\n      case 0: this._point = 1; break;\r\n      case 1: this._point = 2; break;\r\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\r\n      case 3: this._point = 4; // falls through\r\n      default: point(this, x, y); break;\r\n    }\r\n\r\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\r\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\r\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\r\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\r\n  }\r\n};\r\n\r\nexport default (function custom(alpha) {\r\n\r\n  function catmullRom(context) {\r\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\r\n  }\r\n\r\n  catmullRom.alpha = function(alpha) {\r\n    return custom(+alpha);\r\n  };\r\n\r\n  return catmullRom;\r\n})(0.5);\r\n", "import noop from \"../noop.js\";\r\n\r\nfunction LinearClosed(context) {\r\n  this._context = context;\r\n}\r\n\r\nLinearClosed.prototype = {\r\n  areaStart: noop,\r\n  areaEnd: noop,\r\n  lineStart: function() {\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (this._point) this._context.closePath();\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    if (this._point) this._context.lineTo(x, y);\r\n    else this._point = 1, this._context.moveTo(x, y);\r\n  }\r\n};\r\n\r\nexport default function(context) {\r\n  return new LinearClosed(context);\r\n}\r\n", "function sign(x) {\r\n  return x < 0 ? -1 : 1;\r\n}\r\n\r\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\r\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\r\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\r\n// NOV(II), P. 443, 1990.\r\nfunction slope3(that, x2, y2) {\r\n  var h0 = that._x1 - that._x0,\r\n      h1 = x2 - that._x1,\r\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\r\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\r\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n}\r\n\r\n// Calculate a one-sided slope.\r\nfunction slope2(that, t) {\r\n  var h = that._x1 - that._x0;\r\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\r\n}\r\n\r\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\r\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\r\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\r\nfunction point(that, t0, t1) {\r\n  var x0 = that._x0,\r\n      y0 = that._y0,\r\n      x1 = that._x1,\r\n      y1 = that._y1,\r\n      dx = (x1 - x0) / 3;\r\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\r\n}\r\n\r\nfunction MonotoneX(context) {\r\n  this._context = context;\r\n}\r\n\r\nMonotoneX.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x0 = this._x1 =\r\n    this._y0 = this._y1 =\r\n    this._t0 = NaN;\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    switch (this._point) {\r\n      case 2: this._context.lineTo(this._x1, this._y1); break;\r\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\r\n    }\r\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    var t1 = NaN;\r\n\r\n    x = +x, y = +y;\r\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n      case 1: this._point = 2; break;\r\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\r\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\r\n    }\r\n\r\n    this._x0 = this._x1, this._x1 = x;\r\n    this._y0 = this._y1, this._y1 = y;\r\n    this._t0 = t1;\r\n  }\r\n}\r\n\r\nfunction MonotoneY(context) {\r\n  this._context = new ReflectContext(context);\r\n}\r\n\r\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\r\n  MonotoneX.prototype.point.call(this, y, x);\r\n};\r\n\r\nfunction ReflectContext(context) {\r\n  this._context = context;\r\n}\r\n\r\nReflectContext.prototype = {\r\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\r\n  closePath: function() { this._context.closePath(); },\r\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\r\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\r\n};\r\n\r\nexport function monotoneX(context) {\r\n  return new MonotoneX(context);\r\n}\r\n\r\nexport function monotoneY(context) {\r\n  return new MonotoneY(context);\r\n}\r\n", "function Natural(context) {\r\n  this._context = context;\r\n}\r\n\r\nNatural.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x = [];\r\n    this._y = [];\r\n  },\r\n  lineEnd: function() {\r\n    var x = this._x,\r\n        y = this._y,\r\n        n = x.length;\r\n\r\n    if (n) {\r\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\r\n      if (n === 2) {\r\n        this._context.lineTo(x[1], y[1]);\r\n      } else {\r\n        var px = controlPoints(x),\r\n            py = controlPoints(y);\r\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\r\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\r\n    this._line = 1 - this._line;\r\n    this._x = this._y = null;\r\n  },\r\n  point: function(x, y) {\r\n    this._x.push(+x);\r\n    this._y.push(+y);\r\n  }\r\n};\r\n\r\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\r\nfunction controlPoints(x) {\r\n  var i,\r\n      n = x.length - 1,\r\n      m,\r\n      a = new Array(n),\r\n      b = new Array(n),\r\n      r = new Array(n);\r\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\r\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\r\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\r\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\r\n  a[n - 1] = r[n - 1] / b[n - 1];\r\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\r\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\r\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\r\n  return [a, b];\r\n}\r\n\r\nexport default function(context) {\r\n  return new Natural(context);\r\n}\r\n", "function Step(context, t) {\r\n  this._context = context;\r\n  this._t = t;\r\n}\r\n\r\nStep.prototype = {\r\n  areaStart: function() {\r\n    this._line = 0;\r\n  },\r\n  areaEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._x = this._y = NaN;\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\r\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\r\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\r\n  },\r\n  point: function(x, y) {\r\n    x = +x, y = +y;\r\n    switch (this._point) {\r\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\r\n      case 1: this._point = 2; // falls through\r\n      default: {\r\n        if (this._t <= 0) {\r\n          this._context.lineTo(this._x, y);\r\n          this._context.lineTo(x, y);\r\n        } else {\r\n          var x1 = this._x * (1 - this._t) + x * this._t;\r\n          this._context.lineTo(x1, this._y);\r\n          this._context.lineTo(x1, y);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this._x = x, this._y = y;\r\n  }\r\n};\r\n\r\nexport default function(context) {\r\n  return new Step(context, 0.5);\r\n}\r\n\r\nexport function stepBefore(context) {\r\n  return new Step(context, 0);\r\n}\r\n\r\nexport function stepAfter(context) {\r\n  return new Step(context, 1);\r\n}\r\n", "export default function(series, order) {\r\n  if (!((n = series.length) > 1)) return;\r\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\r\n    s0 = s1, s1 = series[order[i]];\r\n    for (j = 0; j < m; ++j) {\r\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\r\n    }\r\n  }\r\n}\r\n", "export default function(series) {\r\n  var n = series.length, o = new Array(n);\r\n  while (--n >= 0) o[n] = n;\r\n  return o;\r\n}\r\n", "import array from \"./array.js\";\r\nimport constant from \"./constant.js\";\r\nimport offsetNone from \"./offset/none.js\";\r\nimport orderNone from \"./order/none.js\";\r\n\r\nfunction stackValue(d, key) {\r\n  return d[key];\r\n}\r\n\r\nfunction stackSeries(key) {\r\n  const series = [];\r\n  series.key = key;\r\n  return series;\r\n}\r\n\r\nexport default function() {\r\n  var keys = constant([]),\r\n      order = orderNone,\r\n      offset = offsetNone,\r\n      value = stackValue;\r\n\r\n  function stack(data) {\r\n    var sz = Array.from(keys.apply(this, arguments), stackSeries),\r\n        i, n = sz.length, j = -1,\r\n        oz;\r\n\r\n    for (const d of data) {\r\n      for (i = 0, ++j; i < n; ++i) {\r\n        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\r\n      }\r\n    }\r\n\r\n    for (i = 0, oz = array(order(sz)); i < n; ++i) {\r\n      sz[oz[i]].index = i;\r\n    }\r\n\r\n    offset(sz, oz);\r\n    return sz;\r\n  }\r\n\r\n  stack.keys = function(_) {\r\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : keys;\r\n  };\r\n\r\n  stack.value = function(_) {\r\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\r\n  };\r\n\r\n  stack.order = function(_) {\r\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : order;\r\n  };\r\n\r\n  stack.offset = function(_) {\r\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\r\n  };\r\n\r\n  return stack;\r\n}\r\n", "import none from \"./none.js\";\r\n\r\nexport default function(series, order) {\r\n  if (!((n = series.length) > 0)) return;\r\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\r\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\r\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\r\n  }\r\n  none(series, order);\r\n}\r\n", "export default function(series, order) {\r\n  if (!((n = series.length) > 0)) return;\r\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\r\n    for (yp = yn = 0, i = 0; i < n; ++i) {\r\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\r\n        d[0] = yp, d[1] = yp += dy;\r\n      } else if (dy < 0) {\r\n        d[1] = yn, d[0] = yn += dy;\r\n      } else {\r\n        d[0] = 0, d[1] = dy;\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import none from \"./none.js\";\r\n\r\nexport default function(series, order) {\r\n  if (!((n = series.length) > 0)) return;\r\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\r\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\r\n    s0[j][1] += s0[j][0] = -y / 2;\r\n  }\r\n  none(series, order);\r\n}\r\n", "import none from \"./none.js\";\r\n\r\nexport default function(series, order) {\r\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\r\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\r\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\r\n      var si = series[order[i]],\r\n          sij0 = si[j][1] || 0,\r\n          sij1 = si[j - 1][1] || 0,\r\n          s3 = (sij0 - sij1) / 2;\r\n      for (var k = 0; k < i; ++k) {\r\n        var sk = series[order[k]],\r\n            skj0 = sk[j][1] || 0,\r\n            skj1 = sk[j - 1][1] || 0;\r\n        s3 += skj0 - skj1;\r\n      }\r\n      s1 += sij0, s2 += s3 * sij0;\r\n    }\r\n    s0[j - 1][1] += s0[j - 1][0] = y;\r\n    if (s1) y -= s2 / s1;\r\n  }\r\n  s0[j - 1][1] += s0[j - 1][0] = y;\r\n  none(series, order);\r\n}\r\n", "import none from \"./none.js\";\r\n\r\nexport default function(series) {\r\n  var peaks = series.map(peak);\r\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\r\n}\r\n\r\nfunction peak(series) {\r\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\r\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\r\n  return j;\r\n}\r\n", "import none from \"./none.js\";\r\n\r\nexport default function(series) {\r\n  var sums = series.map(sum);\r\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\r\n}\r\n\r\nexport function sum(series) {\r\n  var s = 0, i = -1, n = series.length, v;\r\n  while (++i < n) if (v = +series[i][1]) s += v;\r\n  return s;\r\n}\r\n", "import ascending from \"./ascending.js\";\r\n\r\nexport default function(series) {\r\n  return ascending(series).reverse();\r\n}\r\n", "import appearance from \"./appearance.js\";\r\nimport {sum} from \"./ascending.js\";\r\n\r\nexport default function(series) {\r\n  var n = series.length,\r\n      i,\r\n      j,\r\n      sums = series.map(sum),\r\n      order = appearance(series),\r\n      top = 0,\r\n      bottom = 0,\r\n      tops = [],\r\n      bottoms = [];\r\n\r\n  for (i = 0; i < n; ++i) {\r\n    j = order[i];\r\n    if (top < bottom) {\r\n      top += sums[j];\r\n      tops.push(j);\r\n    } else {\r\n      bottom += sums[j];\r\n      bottoms.push(j);\r\n    }\r\n  }\r\n\r\n  return bottoms.reverse().concat(tops);\r\n}\r\n", "import none from \"./none.js\";\r\n\r\nexport default function(series) {\r\n  return none(series).reverse();\r\n}\r\n", "export default x => () => x;\r\n", "export default function ZoomEvent(type, {\r\n  sourceEvent,\r\n  target,\r\n  transform,\r\n  dispatch\r\n}) {\r\n  Object.defineProperties(this, {\r\n    type: {value: type, enumerable: true, configurable: true},\r\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\r\n    target: {value: target, enumerable: true, configurable: true},\r\n    transform: {value: transform, enumerable: true, configurable: true},\r\n    _: {value: dispatch}\r\n  });\r\n}\r\n", "export function Transform(k, x, y) {\r\n  this.k = k;\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\nTransform.prototype = {\r\n  constructor: Transform,\r\n  scale: function(k) {\r\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\r\n  },\r\n  translate: function(x, y) {\r\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\r\n  },\r\n  apply: function(point) {\r\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\r\n  },\r\n  applyX: function(x) {\r\n    return x * this.k + this.x;\r\n  },\r\n  applyY: function(y) {\r\n    return y * this.k + this.y;\r\n  },\r\n  invert: function(location) {\r\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\r\n  },\r\n  invertX: function(x) {\r\n    return (x - this.x) / this.k;\r\n  },\r\n  invertY: function(y) {\r\n    return (y - this.y) / this.k;\r\n  },\r\n  rescaleX: function(x) {\r\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\r\n  },\r\n  rescaleY: function(y) {\r\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\r\n  },\r\n  toString: function() {\r\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\r\n  }\r\n};\r\n\r\nexport var identity = new Transform(1, 0, 0);\r\n\r\ntransform.prototype = Transform.prototype;\r\n\r\nexport default function transform(node) {\r\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\r\n  return node.__zoom;\r\n}\r\n", "export function nopropagation(event) {\r\n  event.stopImmediatePropagation();\r\n}\r\n\r\nexport default function(event) {\r\n  event.preventDefault();\r\n  event.stopImmediatePropagation();\r\n}\r\n", "import {dispatch} from \"d3-dispatch\";\r\nimport {dragDisable, dragEnable} from \"d3-drag\";\r\nimport {interpolateZoom} from \"d3-interpolate\";\r\nimport {select, pointer} from \"d3-selection\";\r\nimport {interrupt} from \"d3-transition\";\r\nimport constant from \"./constant.js\";\r\nimport ZoomEvent from \"./event.js\";\r\nimport {Transform, identity} from \"./transform.js\";\r\nimport noevent, {nopropagation} from \"./noevent.js\";\r\n\r\n// Ignore right-click, since that should open the context menu.\r\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\r\nfunction defaultFilter(event) {\r\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\r\n}\r\n\r\nfunction defaultExtent() {\r\n  var e = this;\r\n  if (e instanceof SVGElement) {\r\n    e = e.ownerSVGElement || e;\r\n    if (e.hasAttribute(\"viewBox\")) {\r\n      e = e.viewBox.baseVal;\r\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\r\n    }\r\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\r\n  }\r\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\r\n}\r\n\r\nfunction defaultTransform() {\r\n  return this.__zoom || identity;\r\n}\r\n\r\nfunction defaultWheelDelta(event) {\r\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\r\n}\r\n\r\nfunction defaultTouchable() {\r\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\r\n}\r\n\r\nfunction defaultConstrain(transform, extent, translateExtent) {\r\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\r\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\r\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\r\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\r\n  return transform.translate(\r\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\r\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\r\n  );\r\n}\r\n\r\nexport default function() {\r\n  var filter = defaultFilter,\r\n      extent = defaultExtent,\r\n      constrain = defaultConstrain,\r\n      wheelDelta = defaultWheelDelta,\r\n      touchable = defaultTouchable,\r\n      scaleExtent = [0, Infinity],\r\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\r\n      duration = 250,\r\n      interpolate = interpolateZoom,\r\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\r\n      touchstarting,\r\n      touchfirst,\r\n      touchending,\r\n      touchDelay = 500,\r\n      wheelDelay = 150,\r\n      clickDistance2 = 0,\r\n      tapDistance = 10;\r\n\r\n  function zoom(selection) {\r\n    selection\r\n        .property(\"__zoom\", defaultTransform)\r\n        .on(\"wheel.zoom\", wheeled, {passive: false})\r\n        .on(\"mousedown.zoom\", mousedowned)\r\n        .on(\"dblclick.zoom\", dblclicked)\r\n      .filter(touchable)\r\n        .on(\"touchstart.zoom\", touchstarted)\r\n        .on(\"touchmove.zoom\", touchmoved)\r\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\r\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\r\n  }\r\n\r\n  zoom.transform = function(collection, transform, point, event) {\r\n    var selection = collection.selection ? collection.selection() : collection;\r\n    selection.property(\"__zoom\", defaultTransform);\r\n    if (collection !== selection) {\r\n      schedule(collection, transform, point, event);\r\n    } else {\r\n      selection.interrupt().each(function() {\r\n        gesture(this, arguments)\r\n          .event(event)\r\n          .start()\r\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\r\n          .end();\r\n      });\r\n    }\r\n  };\r\n\r\n  zoom.scaleBy = function(selection, k, p, event) {\r\n    zoom.scaleTo(selection, function() {\r\n      var k0 = this.__zoom.k,\r\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\r\n      return k0 * k1;\r\n    }, p, event);\r\n  };\r\n\r\n  zoom.scaleTo = function(selection, k, p, event) {\r\n    zoom.transform(selection, function() {\r\n      var e = extent.apply(this, arguments),\r\n          t0 = this.__zoom,\r\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\r\n          p1 = t0.invert(p0),\r\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\r\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\r\n    }, p, event);\r\n  };\r\n\r\n  zoom.translateBy = function(selection, x, y, event) {\r\n    zoom.transform(selection, function() {\r\n      return constrain(this.__zoom.translate(\r\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\r\n        typeof y === \"function\" ? y.apply(this, arguments) : y\r\n      ), extent.apply(this, arguments), translateExtent);\r\n    }, null, event);\r\n  };\r\n\r\n  zoom.translateTo = function(selection, x, y, p, event) {\r\n    zoom.transform(selection, function() {\r\n      var e = extent.apply(this, arguments),\r\n          t = this.__zoom,\r\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\r\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\r\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\r\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\r\n      ), e, translateExtent);\r\n    }, p, event);\r\n  };\r\n\r\n  function scale(transform, k) {\r\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\r\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\r\n  }\r\n\r\n  function translate(transform, p0, p1) {\r\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\r\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\r\n  }\r\n\r\n  function centroid(extent) {\r\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\r\n  }\r\n\r\n  function schedule(transition, transform, point, event) {\r\n    transition\r\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\r\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\r\n        .tween(\"zoom\", function() {\r\n          var that = this,\r\n              args = arguments,\r\n              g = gesture(that, args).event(event),\r\n              e = extent.apply(that, args),\r\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\r\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\r\n              a = that.__zoom,\r\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\r\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\r\n          return function(t) {\r\n            if (t === 1) t = b; // Avoid rounding error on end.\r\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\r\n            g.zoom(null, t);\r\n          };\r\n        });\r\n  }\r\n\r\n  function gesture(that, args, clean) {\r\n    return (!clean && that.__zooming) || new Gesture(that, args);\r\n  }\r\n\r\n  function Gesture(that, args) {\r\n    this.that = that;\r\n    this.args = args;\r\n    this.active = 0;\r\n    this.sourceEvent = null;\r\n    this.extent = extent.apply(that, args);\r\n    this.taps = 0;\r\n  }\r\n\r\n  Gesture.prototype = {\r\n    event: function(event) {\r\n      if (event) this.sourceEvent = event;\r\n      return this;\r\n    },\r\n    start: function() {\r\n      if (++this.active === 1) {\r\n        this.that.__zooming = this;\r\n        this.emit(\"start\");\r\n      }\r\n      return this;\r\n    },\r\n    zoom: function(key, transform) {\r\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\r\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\r\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\r\n      this.that.__zoom = transform;\r\n      this.emit(\"zoom\");\r\n      return this;\r\n    },\r\n    end: function() {\r\n      if (--this.active === 0) {\r\n        delete this.that.__zooming;\r\n        this.emit(\"end\");\r\n      }\r\n      return this;\r\n    },\r\n    emit: function(type) {\r\n      var d = select(this.that).datum();\r\n      listeners.call(\r\n        type,\r\n        this.that,\r\n        new ZoomEvent(type, {\r\n          sourceEvent: this.sourceEvent,\r\n          target: zoom,\r\n          type,\r\n          transform: this.that.__zoom,\r\n          dispatch: listeners\r\n        }),\r\n        d\r\n      );\r\n    }\r\n  };\r\n\r\n  function wheeled(event, ...args) {\r\n    if (!filter.apply(this, arguments)) return;\r\n    var g = gesture(this, args).event(event),\r\n        t = this.__zoom,\r\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\r\n        p = pointer(event);\r\n\r\n    // If the mouse is in the same location as before, reuse it.\r\n    // If there were recent wheel events, reset the wheel idle timeout.\r\n    if (g.wheel) {\r\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\r\n        g.mouse[1] = t.invert(g.mouse[0] = p);\r\n      }\r\n      clearTimeout(g.wheel);\r\n    }\r\n\r\n    // If this wheel event won’t trigger a transform change, ignore it.\r\n    else if (t.k === k) return;\r\n\r\n    // Otherwise, capture the mouse point and location at the start.\r\n    else {\r\n      g.mouse = [p, t.invert(p)];\r\n      interrupt(this);\r\n      g.start();\r\n    }\r\n\r\n    noevent(event);\r\n    g.wheel = setTimeout(wheelidled, wheelDelay);\r\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\r\n\r\n    function wheelidled() {\r\n      g.wheel = null;\r\n      g.end();\r\n    }\r\n  }\r\n\r\n  function mousedowned(event, ...args) {\r\n    if (touchending || !filter.apply(this, arguments)) return;\r\n    var currentTarget = event.currentTarget,\r\n        g = gesture(this, args, true).event(event),\r\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\r\n        p = pointer(event, currentTarget),\r\n        x0 = event.clientX,\r\n        y0 = event.clientY;\r\n\r\n    dragDisable(event.view);\r\n    nopropagation(event);\r\n    g.mouse = [p, this.__zoom.invert(p)];\r\n    interrupt(this);\r\n    g.start();\r\n\r\n    function mousemoved(event) {\r\n      noevent(event);\r\n      if (!g.moved) {\r\n        var dx = event.clientX - x0, dy = event.clientY - y0;\r\n        g.moved = dx * dx + dy * dy > clickDistance2;\r\n      }\r\n      g.event(event)\r\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\r\n    }\r\n\r\n    function mouseupped(event) {\r\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\r\n      dragEnable(event.view, g.moved);\r\n      noevent(event);\r\n      g.event(event).end();\r\n    }\r\n  }\r\n\r\n  function dblclicked(event, ...args) {\r\n    if (!filter.apply(this, arguments)) return;\r\n    var t0 = this.__zoom,\r\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\r\n        p1 = t0.invert(p0),\r\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\r\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\r\n\r\n    noevent(event);\r\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\r\n    else select(this).call(zoom.transform, t1, p0, event);\r\n  }\r\n\r\n  function touchstarted(event, ...args) {\r\n    if (!filter.apply(this, arguments)) return;\r\n    var touches = event.touches,\r\n        n = touches.length,\r\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\r\n        started, i, t, p;\r\n\r\n    nopropagation(event);\r\n    for (i = 0; i < n; ++i) {\r\n      t = touches[i], p = pointer(t, this);\r\n      p = [p, this.__zoom.invert(p), t.identifier];\r\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\r\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\r\n    }\r\n\r\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\r\n\r\n    if (started) {\r\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\r\n      interrupt(this);\r\n      g.start();\r\n    }\r\n  }\r\n\r\n  function touchmoved(event, ...args) {\r\n    if (!this.__zooming) return;\r\n    var g = gesture(this, args).event(event),\r\n        touches = event.changedTouches,\r\n        n = touches.length, i, t, p, l;\r\n\r\n    noevent(event);\r\n    for (i = 0; i < n; ++i) {\r\n      t = touches[i], p = pointer(t, this);\r\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\r\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\r\n    }\r\n    t = g.that.__zoom;\r\n    if (g.touch1) {\r\n      var p0 = g.touch0[0], l0 = g.touch0[1],\r\n          p1 = g.touch1[0], l1 = g.touch1[1],\r\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\r\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\r\n      t = scale(t, Math.sqrt(dp / dl));\r\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\r\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\r\n    }\r\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\r\n    else return;\r\n\r\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\r\n  }\r\n\r\n  function touchended(event, ...args) {\r\n    if (!this.__zooming) return;\r\n    var g = gesture(this, args).event(event),\r\n        touches = event.changedTouches,\r\n        n = touches.length, i, t;\r\n\r\n    nopropagation(event);\r\n    if (touchending) clearTimeout(touchending);\r\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\r\n    for (i = 0; i < n; ++i) {\r\n      t = touches[i];\r\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\r\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\r\n    }\r\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\r\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\r\n    else {\r\n      g.end();\r\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\r\n      if (g.taps === 2) {\r\n        t = pointer(t, this);\r\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\r\n          var p = select(this).on(\"dblclick.zoom\");\r\n          if (p) p.apply(this, arguments);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  zoom.wheelDelta = function(_) {\r\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\r\n  };\r\n\r\n  zoom.filter = function(_) {\r\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\r\n  };\r\n\r\n  zoom.touchable = function(_) {\r\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\r\n  };\r\n\r\n  zoom.extent = function(_) {\r\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\r\n  };\r\n\r\n  zoom.scaleExtent = function(_) {\r\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\r\n  };\r\n\r\n  zoom.translateExtent = function(_) {\r\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\r\n  };\r\n\r\n  zoom.constrain = function(_) {\r\n    return arguments.length ? (constrain = _, zoom) : constrain;\r\n  };\r\n\r\n  zoom.duration = function(_) {\r\n    return arguments.length ? (duration = +_, zoom) : duration;\r\n  };\r\n\r\n  zoom.interpolate = function(_) {\r\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\r\n  };\r\n\r\n  zoom.on = function() {\r\n    var value = listeners.on.apply(listeners, arguments);\r\n    return value === listeners ? zoom : value;\r\n  };\r\n\r\n  zoom.clickDistance = function(_) {\r\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\r\n  };\r\n\r\n  zoom.tapDistance = function(_) {\r\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\r\n  };\r\n\r\n  return zoom;\r\n}\r\n"],
  "mappings": "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",
  "names": ["x", "x", "y", "scale", "tickFormat", "k", "transform", "axis", "format", "range", "path", "type", "c", "root", "x", "type", "x", "y", "dispatch", "filter", "c", "container", "dispatch", "s", "type", "event", "touch", "p0", "time", "now", "time", "time", "callback", "delay", "id", "index", "group", "get", "set", "start", "empty", "interrupt_default", "id", "set", "get", "transition", "a", "c", "id", "get", "id", "set", "get", "id", "set", "get", "id", "v", "set", "groups", "m", "group", "transition", "m", "merge", "id", "set", "get", "id", "select_default", "id", "groups", "m", "group", "get", "selectAll_default", "id", "groups", "m", "group", "inherit", "get", "k", "selection_default", "id", "set", "groups", "m", "group", "inherit", "get", "id", "set", "groups", "id", "select_default", "selectAll_default", "selection_default", "linear", "polyIn", "custom", "polyOut", "polyInOut", "x", "custom", "s", "backIn", "backOut", "backInOut", "custom", "a", "s", "elasticIn", "p", "elasticOut", "elasticInOut", "id", "transition_default", "groups", "m", "group", "interrupt_default", "transition_default", "constant_default", "x", "type", "mode", "dispatch", "nopropagation", "noevent_default", "max", "min", "x", "y", "defaultFilter", "svg", "defaultTouchable", "local", "extent", "filter", "brush", "group", "event", "mode", "type", "point", "noevent_default", "nopropagation", "constant_default", "abs", "pi", "halfPi", "tau", "max", "epsilon", "range", "k", "a", "transpose", "chord", "groups", "x", "max", "tau", "x0", "pi", "tau", "epsilon", "k", "x", "y", "x1", "y1", "x2", "y2", "x0", "y0", "da", "constant_default", "x", "ribbon", "s", "halfPi", "epsilon", "abs", "constant_default", "slice", "a", "constant_default", "x", "c", "point", "x", "y", "pi", "a", "threshold", "v", "x", "y", "start", "index", "point", "constant_default", "slice", "a", "x", "y", "k", "m", "threshold", "constant_default", "x0", "y0", "c", "transform", "coordinates", "slice", "epsilon", "sum", "epsilon", "c", "u3", "sum", "epsilon", "u", "epsilon", "bc", "ca", "ab", "u", "abt", "bct", "cat", "_8", "_16", "fin", "fin2", "epsilon", "ab", "bc", "_8", "_8b", "_16", "_48", "fin", "maxY", "x", "y", "id", "center", "k", "start", "n", "a", "b0", "p0", "c", "left", "right", "median", "epsilon", "Path", "x", "y", "x0", "y0", "x", "y", "x", "y", "x1", "y1", "x2", "y2", "x3", "y3", "ab", "i", "a", "p0", "x0", "y0", "Path", "v", "c", "k", "tau", "pow", "collinear", "a", "c", "cross", "x", "y", "p0", "Path", "h", "array", "object", "s", "seconds", "milliseconds", "c", "format", "object", "number", "m", "init", "init", "text_default", "init", "init", "text_default", "format", "csv", "tsv", "init", "init", "type", "init", "text_default", "x", "y", "x", "y", "x0", "y0", "x1", "y1", "right", "bottom", "x", "y", "x0", "y0", "x1", "y1", "x0", "y0", "x1", "y1", "x", "y", "x0", "y0", "x1", "y1", "x2", "y2", "x3", "y3", "remove_default", "x", "y", "x0", "y0", "x1", "y1", "right", "bottom", "x0", "y0", "x1", "y1", "x0", "y0", "x1", "y1", "defaultX", "defaultY", "x", "y", "defaultX", "defaultY", "x0", "y0", "x1", "y1", "remove_default", "constant_default", "x", "iterations", "constant_default", "k", "x0", "y0", "x1", "y1", "x", "y", "index", "id", "constant_default", "count", "iterations", "link", "k", "x", "y", "m", "i", "s", "x", "y", "iterations", "k", "angle", "constant_default", "x", "y", "node", "strength", "c", "x1", "x2", "x", "y", "constant_default", "k", "x_default", "x", "constant_default", "y_default", "y", "constant_default", "epsilon", "epsilon2", "pi", "halfPi", "tau", "abs", "cos", "log", "pow", "sin", "x", "sqrt", "pi", "halfPi", "noop", "object", "coordinates", "noop", "tau", "phi", "cos", "sin", "k", "u", "v", "area_default", "object", "cartesian", "spherical", "phi", "cos", "sin", "a", "k", "sqrt", "lambda0", "lambda00", "phi00", "range", "epsilon", "phi", "sign", "abs", "lambda1", "a", "x", "lambda00", "phi00", "noop", "phi", "cos", "sin", "x", "y", "sqrt", "m", "v", "object", "epsilon2", "epsilon", "constant_default", "x", "a", "x", "y", "phi", "abs", "pi", "tau", "cos", "sin", "x", "y", "k", "coordinates", "cos", "sin", "tau", "point", "epsilon", "center", "constant_default", "x", "y", "c", "buffer_default", "x", "y", "m", "noop", "a", "abs", "epsilon", "point", "compareIntersection", "n", "p0", "x", "epsilon", "start", "array", "a", "point", "abs", "pi", "tau", "phi", "sin", "cos", "angle", "sum", "halfPi", "epsilon", "m", "lambda0", "phi0", "sinPhi0", "cosPhi0", "lambda1", "phi1", "sign", "k", "intersection", "epsilon2", "start", "buffer_default", "point", "phi", "m", "a", "halfPi", "epsilon", "pi", "halfPi", "lambda0", "phi0", "lambda1", "phi1", "abs", "epsilon", "cosPhi0", "sin", "cos", "phi", "circle_default", "cos", "abs", "epsilon", "phi", "point2", "v", "c", "pi", "intersect", "a", "c2", "B", "u", "sqrt", "lambda0", "lambda1", "phi0", "phi1", "delta", "code", "a", "x0", "y0", "x1", "y1", "x0", "y0", "x1", "y1", "x", "y", "a", "abs", "epsilon", "compareIntersection", "ca", "buffer_default", "point", "ring", "m", "b0", "b1", "visible", "linePoint", "v", "extent_default", "x0", "y0", "x1", "y1", "lambda0", "sinPhi0", "cosPhi0", "noop", "phi", "sin", "cos", "abs", "x", "y", "sqrt", "object", "a", "object", "point", "coordinates", "ab", "epsilon2", "contains_default", "y0", "y1", "y", "epsilon", "x", "x0", "x1", "X1", "X0", "Y1", "Y0", "X", "Y", "graticule", "abs", "coordinates", "interpolate_default", "a", "x0", "y0", "x1", "y1", "cos", "sin", "sqrt", "k", "B", "x", "y", "identity_default", "x", "areaSum", "areaRingSum", "x0", "y0", "areaStream", "noop", "areaRingStart", "areaRingEnd", "abs", "areaPointFirst", "x", "y", "areaPoint", "area_default", "x0", "y0", "boundsStream", "boundsPoint", "noop", "x", "y", "bounds_default", "X0", "Y0", "Z0", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "x00", "y00", "x0", "y0", "centroidStream", "centroidPoint", "centroidLineStart", "centroidLineEnd", "centroidRingStart", "centroidRingEnd", "x", "y", "sqrt", "centroid_default", "x", "y", "tau", "noop", "lengthSum", "x00", "y00", "x0", "y0", "lengthStream", "noop", "lengthPointFirst", "lengthPoint", "x", "y", "sqrt", "append", "appendRound", "x", "y", "s", "k", "projection", "path", "object", "area_default", "bounds_default", "centroid_default", "identity_default", "s", "x", "y", "projection", "object", "bounds_default", "extent", "k", "x", "y", "cos", "x", "y", "x0", "y0", "lambda0", "b0", "x1", "y1", "lambda1", "b1", "a", "c", "m", "sqrt", "lambda2", "abs", "epsilon", "x2", "y2", "lambda00", "x00", "y00", "point", "linePoint", "phi", "x", "y", "k", "transform", "cos", "sin", "a", "phi", "x0", "y0", "x1", "y1", "identity_default", "projection", "point", "circle_default", "sqrt", "extent", "object", "center", "phi0", "phi1", "pi", "m", "phi0", "cosPhi0", "cos", "phi", "sin", "x", "y", "y0", "y1", "sin", "abs", "epsilon", "c", "sqrt", "x", "y", "cos", "pi", "x", "y", "point", "coordinates", "k", "epsilon", "extent", "object", "scale", "x", "y", "cos", "k", "sin", "angle", "sqrt", "c", "cc", "sqrt", "c", "sin", "phi", "log", "halfPi", "x", "y", "tau", "m", "center", "scale", "x0", "y0", "x1", "y1", "k", "pi", "y", "halfPi", "y0", "y1", "cos", "sin", "log", "pow", "x", "epsilon", "sqrt", "abs", "pi", "phi", "y0", "y1", "cos", "sin", "abs", "epsilon", "x", "y", "pi", "sqrt", "sqrt", "phi", "sin", "cos", "x", "y", "abs", "epsilon2", "x", "y", "cos", "k", "sin", "identity_default", "k", "ca", "x0", "y0", "x1", "y1", "kx", "ky", "transform", "x", "y", "projection", "sin", "cos", "extent", "object", "phi", "phi2", "x", "y", "abs", "epsilon", "x", "y", "cos", "sin", "epsilon", "x", "y", "cos", "k", "sin", "phi", "log", "halfPi", "x", "y", "m", "center", "a", "x", "c", "y", "root", "left", "right", "x0", "x1", "count", "sum", "index", "index", "index", "find_default", "index", "sum", "path_default", "start", "k", "a", "c", "root", "root", "find_default", "path_default", "constant_default", "x", "a", "c", "m", "lcg_default", "s", "array_default", "x", "array", "m", "lcg_default", "B", "a", "x1", "y1", "x2", "y2", "c", "x3", "y3", "a2", "a3", "b2", "b3", "c2", "c3", "ab", "a", "c", "x", "a2", "y", "b2", "ab", "Node", "array_default", "aa", "ca", "k", "lcg_default", "defaultRadius", "root", "lcg_default", "x", "constant_default", "k", "round_default", "x0", "y0", "x1", "y1", "k", "root", "round_default", "dy", "x0", "y0", "x1", "y1", "x", "id", "path", "root", "d", "i", "node", "x", "k", "defaultSeparation", "a", "v", "root", "left", "right", "bottom", "s", "kx", "ky", "x", "x0", "y0", "x1", "y1", "k", "x0", "y0", "x1", "y1", "custom", "x", "root", "round_default", "x0", "y0", "x1", "y1", "x", "constant_default", "x0", "y0", "x1", "y1", "sum", "i", "k", "x0", "y0", "x1", "y1", "custom", "x0", "y0", "x1", "y1", "m", "x", "area_default", "a", "centroid_default", "x", "y", "a", "c", "k", "a", "c", "a", "indexes", "contains_default", "point", "x", "y", "x0", "y0", "x1", "y1", "length_default", "min", "max", "min", "max", "x", "y", "sum", "k", "c", "x", "v", "u", "X", "Y", "x", "B", "y", "sign", "s", "k", "k", "a", "x", "a", "a", "u", "B", "s", "k", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "scheme", "cubehelix_default", "c", "c", "x", "range", "constant_default", "x", "abs", "atan2", "cos", "max", "min", "sin", "sqrt", "epsilon", "pi", "halfPi", "tau", "acos", "x", "asin", "x0", "y0", "x1", "y1", "x2", "y2", "x3", "y3", "x32", "y32", "epsilon", "sqrt", "x00", "y00", "D", "max", "constant_default", "path", "halfPi", "da", "abs", "tau", "cos", "sin", "min", "p0", "asin", "pi", "acos", "atan2", "a", "slice", "array_default", "x", "x", "y", "x", "y", "line_default", "x", "y", "constant_default", "path", "array_default", "area_default", "x0", "y0", "y1", "x1", "constant_default", "path", "x", "y", "k", "array_default", "line_default", "a", "identity_default", "identity_default", "sort", "constant_default", "tau", "array_default", "k", "sum", "index", "da", "v", "i", "j", "a", "radial", "c", "line_default", "a", "area_default", "c", "x0", "x1", "y0", "y1", "x", "y", "x", "y", "p0", "link", "x", "y", "path", "slice", "s", "constant_default", "sqrt3", "sqrt", "min", "u", "circle_default", "sqrt", "pi", "tau", "cross_default", "sqrt", "sqrt", "y", "x", "sqrt", "sqrt", "min", "sqrt", "x", "sqrt", "sin", "pi", "tau", "cos", "sqrt", "x", "y", "a", "c", "s", "sqrt3", "sqrt", "y", "sqrt3", "sqrt", "s", "u", "c", "sqrt", "a", "x0", "y0", "x1", "y1", "x2", "y2", "sqrt", "min", "circle_default", "cross_default", "Symbol", "type", "path", "constant_default", "noop_default", "point", "x", "y", "basis_default", "noop_default", "x", "y", "point", "basisClosed_default", "x", "y", "x0", "y0", "point", "x", "y", "x0", "y0", "custom", "beta", "point", "x", "y", "custom", "tension", "noop_default", "x", "y", "point", "custom", "tension", "x", "y", "point", "custom", "tension", "point", "x", "y", "x1", "y1", "x2", "y2", "epsilon", "a", "m", "custom", "alpha", "noop_default", "x", "y", "point", "custom", "alpha", "x", "y", "point", "custom", "alpha", "noop_default", "x", "y", "sign", "x", "x2", "y2", "point", "x0", "y0", "x1", "y1", "y", "x", "y", "m", "a", "x", "y", "x1", "m", "none_default", "constant_default", "none_default", "array_default", "m", "y", "m", "m", "y", "m", "y", "k", "none_default", "a", "ascending_default", "sum", "none_default", "a", "s", "v", "descending_default", "ascending_default", "sum", "top", "bottom", "none_default", "constant_default", "x", "type", "transform", "dispatch", "k", "x", "y", "point", "identity", "nopropagation", "noevent_default", "defaultFilter", "defaultExtent", "identity", "defaultTouchable", "transform", "extent", "zoom_default", "filter", "point", "k", "p0", "scale", "x", "y", "transition", "a", "type", "noevent_default", "v", "x0", "y0", "nopropagation", "event", "constant_default"]
}
