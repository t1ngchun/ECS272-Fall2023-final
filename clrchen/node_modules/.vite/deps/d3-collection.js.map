{
  "version": 3,
  "sources": ["../../d3-collection/src/map.js", "../../d3-collection/src/nest.js", "../../d3-collection/src/set.js", "../../d3-collection/src/keys.js", "../../d3-collection/src/values.js", "../../d3-collection/src/entries.js"],
  "sourcesContent": ["export var prefix = \"$\";\r\n\r\nfunction Map() {}\r\n\r\nMap.prototype = map.prototype = {\r\n  constructor: Map,\r\n  has: function(key) {\r\n    return (prefix + key) in this;\r\n  },\r\n  get: function(key) {\r\n    return this[prefix + key];\r\n  },\r\n  set: function(key, value) {\r\n    this[prefix + key] = value;\r\n    return this;\r\n  },\r\n  remove: function(key) {\r\n    var property = prefix + key;\r\n    return property in this && delete this[property];\r\n  },\r\n  clear: function() {\r\n    for (var property in this) if (property[0] === prefix) delete this[property];\r\n  },\r\n  keys: function() {\r\n    var keys = [];\r\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\r\n    return keys;\r\n  },\r\n  values: function() {\r\n    var values = [];\r\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\r\n    return values;\r\n  },\r\n  entries: function() {\r\n    var entries = [];\r\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\r\n    return entries;\r\n  },\r\n  size: function() {\r\n    var size = 0;\r\n    for (var property in this) if (property[0] === prefix) ++size;\r\n    return size;\r\n  },\r\n  empty: function() {\r\n    for (var property in this) if (property[0] === prefix) return false;\r\n    return true;\r\n  },\r\n  each: function(f) {\r\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\r\n  }\r\n};\r\n\r\nfunction map(object, f) {\r\n  var map = new Map;\r\n\r\n  // Copy constructor.\r\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\r\n\r\n  // Index array by numeric index or specified key function.\r\n  else if (Array.isArray(object)) {\r\n    var i = -1,\r\n        n = object.length,\r\n        o;\r\n\r\n    if (f == null) while (++i < n) map.set(i, object[i]);\r\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\r\n  }\r\n\r\n  // Convert object to map.\r\n  else if (object) for (var key in object) map.set(key, object[key]);\r\n\r\n  return map;\r\n}\r\n\r\nexport default map;\r\n", "import map from \"./map\";\r\n\r\nexport default function() {\r\n  var keys = [],\r\n      sortKeys = [],\r\n      sortValues,\r\n      rollup,\r\n      nest;\r\n\r\n  function apply(array, depth, createResult, setResult) {\r\n    if (depth >= keys.length) {\r\n      if (sortValues != null) array.sort(sortValues);\r\n      return rollup != null ? rollup(array) : array;\r\n    }\r\n\r\n    var i = -1,\r\n        n = array.length,\r\n        key = keys[depth++],\r\n        keyValue,\r\n        value,\r\n        valuesByKey = map(),\r\n        values,\r\n        result = createResult();\r\n\r\n    while (++i < n) {\r\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\r\n        values.push(value);\r\n      } else {\r\n        valuesByKey.set(keyValue, [value]);\r\n      }\r\n    }\r\n\r\n    valuesByKey.each(function(values, key) {\r\n      setResult(result, key, apply(values, depth, createResult, setResult));\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function entries(map, depth) {\r\n    if (++depth > keys.length) return map;\r\n    var array, sortKey = sortKeys[depth - 1];\r\n    if (rollup != null && depth >= keys.length) array = map.entries();\r\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\r\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\r\n  }\r\n\r\n  return nest = {\r\n    object: function(array) { return apply(array, 0, createObject, setObject); },\r\n    map: function(array) { return apply(array, 0, createMap, setMap); },\r\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\r\n    key: function(d) { keys.push(d); return nest; },\r\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\r\n    sortValues: function(order) { sortValues = order; return nest; },\r\n    rollup: function(f) { rollup = f; return nest; }\r\n  };\r\n}\r\n\r\nfunction createObject() {\r\n  return {};\r\n}\r\n\r\nfunction setObject(object, key, value) {\r\n  object[key] = value;\r\n}\r\n\r\nfunction createMap() {\r\n  return map();\r\n}\r\n\r\nfunction setMap(map, key, value) {\r\n  map.set(key, value);\r\n}\r\n", "import {default as map, prefix} from \"./map\";\r\n\r\nfunction Set() {}\r\n\r\nvar proto = map.prototype;\r\n\r\nSet.prototype = set.prototype = {\r\n  constructor: Set,\r\n  has: proto.has,\r\n  add: function(value) {\r\n    value += \"\";\r\n    this[prefix + value] = value;\r\n    return this;\r\n  },\r\n  remove: proto.remove,\r\n  clear: proto.clear,\r\n  values: proto.keys,\r\n  size: proto.size,\r\n  empty: proto.empty,\r\n  each: proto.each\r\n};\r\n\r\nfunction set(object, f) {\r\n  var set = new Set;\r\n\r\n  // Copy constructor.\r\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\r\n\r\n  // Otherwise, assume itâ€™s an array.\r\n  else if (object) {\r\n    var i = -1, n = object.length;\r\n    if (f == null) while (++i < n) set.add(object[i]);\r\n    else while (++i < n) set.add(f(object[i], i, object));\r\n  }\r\n\r\n  return set;\r\n}\r\n\r\nexport default set;\r\n", "export default function(map) {\r\n  var keys = [];\r\n  for (var key in map) keys.push(key);\r\n  return keys;\r\n}\r\n", "export default function(map) {\r\n  var values = [];\r\n  for (var key in map) values.push(map[key]);\r\n  return values;\r\n}\r\n", "export default function(map) {\r\n  var entries = [];\r\n  for (var key in map) entries.push({key: key, value: map[key]});\r\n  return entries;\r\n}\r\n"],
  "mappings": "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",
  "names": ["map", "key", "values", "key", "map", "set", "map", "map", "map"]
}
